['\n\n\n04-330 \xa0 Fundamentals of Software Development & Problem Solving\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis course lays the foundations for approaching problem-solving in a logical, well-designed approach and implementing solutions to a range of technical problems with well-written, high-quality, and extensible software using the basic “best practices” used in the field of software engineering.\nTopics include algorithm development, problem-solving (decomposition and synthesis), program design, data representation, arithmetic and logical expressions, input/output operations, basic user interfaces, and object-oriented programming and design, with an emphasis on developing good programming habits. Intensive programming assignments are required.\nLearning objectives\nThe programming will involve understanding and analyzing a set of requirements for a problem, formulating a solution, and implementing that solution on the computer along with tests that show that the program achieves its goals.\nOutcomes\nThe successful student will be able to:\n\nUnderstand a basic Computer-Science approach to problem-solving, including algorithm development and proper testing.\nDemonstrate proficiency in programming using a modern programming language.\nApply these problem-solving techniques and programming skills to develop software solutions to solve a wide range of technical problems.\n\nContent details\n\nClasses, objects, methods, strings\nControl Statements\nArrays, array lists\nInheritance, polymorphism\nGUIs, graphics\nFiles, streams\nRecursion\n\nPrerequisites\nNone. It is expected that students will enroll only if they have no programming background whatsoever or have been recommended because they are unable to code in a programming language at an acceptable level. Prospective students who have already taken a programming course or are unsure of their abilities should consult the instructor prior to enrollment.\nFaculty\nAhmed Biyabani\n\n',
 '\n\n\n04-601 \xa0 ICT in Africa Seminar\n Location: Africa \n           Units: 6\n           Semester Offered: Fall, Spring\n\n\n',
 '\n\nCourse description\nIn this course, students learn about Information and Communications Technology (ICT) and its application in Africa. The goal is to provide an overview of core ICT topics such as data, connectivity, artificial intelligence, and cybersecurity and their application to solving problems on the continent in areas ranging from health care to agriculture. In the first part of the course, students read assigned papers (e.g., academic papers, government reports, consultant reports, blog posts, etc.) to deepen their understanding of core ICT topics in an African context.\xa0 Each week, students write individual summaries based on the readings, give a team-based oral presentation, and lead an in-class discussion based on their assigned reading. The second part of the course is a student-directed, team-based project in which students select an African challenge and research potential ICT solutions. In addition to deepening their ICT knowledge, students will strengthen their skills at reading and summarizing technical papers, their oral and written communication abilities, and their dexterity in working in teams.\nLearning objectives\nStudents will gain a greater understanding of:\n\nCore ICT topics, themes, and applications\nThe ICT context within Africa, including emerging trends and potential applications\nBest practices to review and comprehend technical literature, particularly journal papers\nOral presentation skills and writing clarity\nEffective team-based strategies\n\nOutcomes\nAfter completing the course, students will be able to:\n\nUnderstand core ICT topics, including data, connectivity, artificial intelligence, cybersecurity, the Internet of Things, and human-computer interaction from both a global and an African perspective.\nThink critically about how to apply ICT solutions to African-based issues in sectors such as agriculture, finance, health care, and energy.\nEffectively read and synthesize technical papers, including journal articles, government reports, and industry documents.\nDeliver clear and insightful oral and written summaries on technical topics.\n\nPrerequisites\nNone\nFaculty\xa0\nTim Brown\n\n',
 '\n\n\n04-603 \xa0 ICT Entrepreneurship Seminar\n Location: Africa \n           Units: 6\n           Semester Offered: Fall, Spring\n\n\n',
 '\n\nCourse discipline\nMSIT\nCourse description\nIn this course, we define an entrepreneur as someone engaged in the development of a new product (and perhaps, but not necessarily, also a new venture) under conditions of extreme uncertainty. Entrepreneurship is a key part of an economy\'s search for new solutions that increase customer value. Why is it a search? Because, when the conditions surrounding a contemplated new product are uncertain, the answers to key questions are not known apriori. What features are actually needed? Does the product in fact solve the problem we think it does for the users? Are they willing to pay enough for the product to make bringing it to market profitable? Ultimately, entrepreneurship is a critical part of the growth engine that improves a society\'s standard of living. In this course, we look at how to facilitate this search process and hopefully maximize the chance of bringing a successful new product to market.\nLearning objectives\nStudents will learn to think more deeply about how markets operate, what creates value, and how to investigate an idea in an environment characterized by risk and the need to be profitable. In other words, they\'ll learn to think like an entrepreneur. They will gain an appreciation for entrepreneurship as just one part, albeit an important one, of the entire economy. They will hear first-hand from multiple entrepreneurs and learn about their personal experiences and lessons learned.\xa0\nOutcomes\nAfter completing this course, students will be able to do the following:\n\nEvaluate an entrepreneurial idea\nExplain the lean startup methodology\nWrite a "Jobs To Be Done" specification\nCreate a lean canvas model for a proposed new product/venture\nRead basic economic literature and understand the concepts being addressed: supply/demand, how prices are set, etc.\nCreate and read two of the most important financial statements: the P&L and Balance sheet\n\nContent details\n\nBasic economic principles\nThe role of entrepreneurship in an economy\nJobs to be Done Theory\nLean startup methodology\nCrossing the Chasm and high-tech marketing\nBasic accounting\nThe importance of intellectual property\nMultiple guest speakers explain their entrepreneurial journey and key lessons they\'ve learned\xa0\n\nPrerequisites\nNone\nFaculty\nJesse Thornburg\n\n',
 '\n\n\n04-605 \xa0  ICT Professional Development Seminar\n Location: Africa \n           Units: 6\n           Semester Offered: Fall, Spring\n\n\n',
 '\n\nCourse description\nThe seminar prepares second-year students for professional life beyond CMU. Objectives may include finding a job, securing a promotion or transfer in an existing company, preparing to become managers and leaders, entrepreneurship, or applying to a Ph.D. program. Students explore career opportunities in ICT through individual and group projects, presentations, and discussions. Students draw on internships, work experiences, team projects, selected readings, and guest lectures to examine the role of global professional, managerial, leadership, and technical skills critical to success and to develop strategies for lifelong learning and professional development.\nLearning objectives\n\nUnderstanding of the key qualities and skills of good managers\nAwareness of leadership theory and research\nInsight into diverse career opportunities in ICT\nUnderstanding of personal value as a tech professional\nPersonal and organizational goal-setting skills\nDevelopment of a personal career plan\nOnline and face-to-face networking skills\nAwareness of the impact of culture on professional norms and expectations\n\nOutcomes\nAfter completing this course, students should be able to:\n\nArticulate their personal value as a tech professional.\nAnalyze their career options and set effective career goals.\nIdentify and leverage career development opportunities.\nExplain the key qualities and skills of good managers.\nAnalyze and evaluate diverse leadership styles in context.\nReflect on their role as followers in influencing the evolution of African professional culture.\nCommunicate and collaborate more effectively across professional cultures.\n\nContent details\n\nCareer path planning and goal-setting\nProfessional self-presentation and networking\nICT career options\nEffective leadership, followership, and management\nCultural competence in the workplace\n\nPrerequisites\nNone\nFaculty\nChristine Niyizamwiyitira\n\n',
 '\n\n\n04-606 \xa0 Academic Skills for Engineers I\n Location: Africa \n           Units: 6\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis course aims to introduce students to a range of academic skills to support them in their MScprograms. The skills will include identifying credible sources, describing graphs, processes and changes as well as longer pieces of academic writing such as essays and reports.This course is offered on a pass/no pass basis.\nLearning objectives\nThe primary aim of this course is to increase students’ ability to communicate effectively in an English language academic context by developing their research and writing skills. Its secondary aims are to enhance higher order thinking aptitudes and independent learning.\nOutcomes\nBy the end of the course, students will be better able to identify, analyze and construct arguments in academic style, supported by clear reasoning and evidence.\nContent details\n\nDescribing a graph, a process and a change\nConstructing a logical and persuasive argument\nLexical range and precision.\nAcademic style\nReport and essay writing\n\nPrerequisites\nNone\nFaculty\nGlen Thompson\n\n',
 '\n\n\n04-607 \xa0 Academic Skills for Engineers II\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis course aims to expand students’ range of academic skills to support them in their MSc programs. The skills will include more on academic style when writing as well as presentations and seminars.This course is offered on a pass/no pass basis.\nLearning objectives\nThe primary aim of this course is to increase students’ ability to communicate effectively in an English academic context by developing their speaking, listening, reading, and writing skills. Its secondary, supporting aims are to enhance higher-order thinking aptitudes and independent learning.\nOutcomes\nBy the end of the course students will be better able to think critically and articulate their arguments in a clear academic style, both verbally and in writing. They will also be better able to think critically and innovatively in a wide range of situations. By emphasizing originality and academic integrity, the course will build students’ autonomy and confidence in their academic voice.\nContent details\n\nCritical thinking\nAcademic writing skills\nPresentation skills\nSeminar discussion skills\n\nPrerequisites\nNone\nFaculty\nGlen Thompson\n\n',
 '\n\n\n04-608 \xa0 Advanced Academic Skills for Engineers I\n Location: Africa \n           Units: 6\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis course aims to develop students’ range of academic skills to support them in their MS programs. The skills will include academic writing, summarizing texts, preparing and delivering presentations, and research and seminar skills.\nThis course is offered on a pass/no pass basis.\nLearning objectives\nThe primary aim of this course is to increase students’ ability to communicate effectively in an English academic context by developing their speaking, listening, reading, and writing skills. Its secondary, supporting aims are to enhance higher-order thinking aptitudes and independent learning.\nOutcomes\nBy the end of the course, students will be better able to identify, analyze, and construct grammatically accurate written and spoken arguments supported by clear reasoning and evidence.\nContent details\n\nTechnical writing skills\nProfessional speaking skills\nConstructing a logical and persuasive argument\nLexical range and precision\nGrammatical flexibility and accuracy\nAcademic reading and listening strategies\nSummarizing skills and summary writing\n\nPrerequisites\nThis is NOT for students taking 04-606 Academic Skills for Engineers I or 04-607 Academic Skills for Engineers II.\nFaculty\nKwan Lee\n\n',
 '\n\n\n04-609 \xa0 Advanced Academic Skills for Engineers II\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis course aims to develop students’ range of academic skills to support them in their MS programs. The skills will include academic writing, summarizing texts, preparing and delivering presentations, and research and seminar skills.\n\xa0\nThis course is offered on a pass/no pass basis.\nLearning objectives\nThe primary aim of this course is to increase students’ ability to communicate effectively in an English academic context by developing their speaking, listening, reading, and writing skills. Its secondary, supporting aims are to enhance higher-order thinking aptitudes and independent learning.\nOutcomes\nBy the end of the course, students will have a better understanding of the research process including developing research questions, locating and analyzing data, and correctly citing a broad range of academic sources. They will also be better able to think critically and innovatively in a wide range of situations. By emphasizing originality and academic integrity, the course will build students’ autonomy and confidence in their academic voice.\nContent details\n\nTechnical writing skills\nPresentation skills\nSeminar discussion skills\nAcademic research\nLiterature review\n\nPrerequisites\xa0\n04-608 Advanced Academic Skills for Engineers I\nThis is NOT for students taking 04-606 Academic Skills for Engineers I or 04-607 Academic Skills for Engineers II.\nFaculty\nKwan Lee\n\n',
 '\n\n\n04-611 \xa0 Strategic Use of Digital Information in Enterprises\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nUnprecedented access to real-time and unfiltered world information is providing enterprises with new strategic information assets. This information is characterized by:\n\nthe large volume of data\nthe diversity of the data, not only structured data typically created by enterprises’ transaction systems but mostly unstructured data found in enterprises (e.g., business documents, emails, reports, customers communication documents, etc.) but also from outside the enterprise (e.g., social media, multimedia (video, audio), Internet, sensors, mobile devices, non-conventional IT devices (GPS, RFID readers,...))\nthe geographical distribution of the sources of information\nthe timeliness value of that information when captured in real-time\n\nThis is sometimes called BIG DATA. The ability to pull value from this data is a crucial competitive differentiator. The challenge is to turn this massive amount and a continuous stream of data and information into knowledge and insights in real-time to provide actionable information to assist decision-makers in enterprises in support of the execution of their strategic plan. This requires the use of new technical architectures and analytics to enable insights that unlock new sources of business value.\n\xa0\nThe data-driven enterprise of tomorrow is one that makes business decisions based on amassing and analyzing that data in real time. It leverages the enormous computational power that can now be delivered by small, abundant, and inexpensive devices. All of these digital devices—soon to number in the trillions—are being connected through the Internet, turning data into intelligence, using their processing power and advanced analytics to make sense of it all. They deliver a new generation of applications that have a material impact on the top line. With this knowledge, enterprises can reduce costs and waste, improve efficiency and productivity, and raise the quality of their products.\n\xa0\nThis course will cover the new emerging generation of information systems used to manage the explosion of this new real-world real-time information and deliver business analytics. Guest executive speakers from local and global businesses will provide direct insight into the corporate world and the real business application of technologies and concepts reviewed in the course.\nLearning objectives\n\nHow do enterprises extract value from this Big Data?\nHow do they turn this data into decisions, sometimes in real-time, to assist enterprise executives in the execution of their strategic plans?\nWhat is the new generation of information systems used in that process?\n\nOutcomes\nUpon successful completion of this course, students should be able to:\n\nUnderstand the variety, velocity, and increasing volume of Big Data.\nUnderstand how this data is used to make strategic business decisions, and what technologies are used in that process.\nApply this knowledge to conceive new innovative data-driven solutions to business problems that are adapted to the African market.\nHave a critical view of the benefits and dangers of those technologies.\n\nContent details\n\nDigital information value in enterprises\nBusiness information management\nSocial media and web 2.0\nNatural language understanding\nBig Data & real-world aware systems\nDigital marketing\nTechnology benefits and dangers\n\nPrerequisites\nNone\nFaculty\nMichel Bézy\n\n',
 '\n\n\n04-612 \xa0 Market Planning for High Tech Innovation \n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nTo serve their markets, enterprises develop business plans to articulate their business strategy and operation plans to achieve their goals. Market planning is the process used to develop and manage business plans. More than any other industry, the high-tech industry routinely introduces discontinuous innovations. Market planning in high-tech markets poses its own unique problems due to the market and technological uncertainty and the competitive volatility of high-tech environments. In Africa, many IT-based innovations can be considered High-Tech innovations as they offer solutions whose functioning is beyond the reach of common knowledge and they are discontinuous/radical or disruptive innovations, requiring users to change their mode of behavior or modify products or services they rely on. Due to inappropriate business plans many high-tech innovations never make it successfully to the market. High-tech innovations require a different market planning process for their market introduction. In particular, the Technology Adoption Life-Cycle concept will be used to understand how potential buyers respond to discontinuous innovation. In this course, we will cover the market planning process used for developing a market-driven strategy and business plan for high-tech innovations. The process starts with the understanding of the marketplace that the enterprise decided to serve through market analysis, the segmentation of the marketplace based on the customers’ needs (market segmentation), the selection and prioritization of the market segments (portfolio management), and the development of objectives and strategy for each selected segment (strategic planning). Finally, the tactical actions to implement the strategy are documented in a business plan to ensure the integrated execution of all tactical elements. The course will be illustrated with real examples from the IT industry. Students will apply the concepts learned to develop a business plan for a local enterprise in collaboration with its executive team or for their own innovation.\nLearning objectives\nThe primary goal of this course is to provide students with a basic understanding of: \n\nThe challenges of market planning for high-tech innovation\nThe key steps in the development of a business plan \n\nThis course objective is not to train market planning experts. Instead, the goal is to introduce students to the market planning concepts to encourage them to further educate themselves in that area. It takes years of practical experience to become a market planning expert.\nThis course is focusing on market planning for IT products and services.\nOutcomes\nUpon the successful completion of this course, students should:\n\nUnderstand the business value of market planning.\nHave a basic understanding of the key steps of the market planning process and be able to perform those steps.\nHave a better understanding of what it takes to know and understand a market.\n\nContent details\nThe course will cover the following topics:\n\nMarketing Management and High-Tech Markets\nMarket Planning Process\nVision, Mission, Goals, and Market Definition\nMarket Assessment: Environment Analysis and Market Analysis\nMarket Assessment: Competitive Analysis and Company Analysis\nMarket Segmentation\nPortfolio Management\nStrategy: Technology Adoption Life Cycle\nValue Proposition, Marketing Mix, and Business Plan\nProfit Zone\n\nPrerequisites\nNone\nFaculty\nMichel Bezy\n\n',
 '\n\n\n04-613 \xa0 ICT Business Economics and Finance\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\n\nThis course focuses on financial fundamentals (e.g., reading and understanding financial statements, cost analysis, and budgeting) and basic concepts from economic theory in the context of the current ICT industry. Topics to be covered include market structure, regulation, strategy, negotiation, business models, working with investors, and creating business plans. The class format is to present theory as it applies to business in general and then apply it to current firms in the ICT sector. The concepts and thinking introduced in this class apply to companies in other sectors, including the non-profit sector.\nLearning objectives\nThe class project has each student analyzing the financials and economics of a significant ICT firm, writing a paper on the firm, and presenting the results to the class. Each student will also create an original business plan for a new ICT firm in Africa and present it to the class.\n\nOutcomes\nUpon completing this course, students will be able to:\n\nUnderstand the market structure, regulation, strategy, negotiation, and business models.\nUse critical thinking skills and draw meaningful conclusions in business situations.\nWork with investors and create business plans.\nApply the theory to current firms in the ICT sector and companies in other sectors.\nRelate the actual learnings to the outside world by the provided expertise and insights on various viewpoints on topics shared by the panelists’ discussion at the end of the semester.\n\nContent details\nImpact of economics and finance on information society:\n\nInformation society and the network economy\nBasic economic concepts: microeconomics and macroeconomics\nFinancial statements and financial ratios\nBudgeting and cost analysis\n\nThe enterprise:\n\nIT and e-commerce in enterprises\nMarketing and e-marketing / SEO / affiliate marketing\nRecommender systems in e-business/e-commerce\nBusiness models, SWOT and PEST analysis\nCapital asset pricing model\nICT firm class project\n\nCapitalization strategy and the business plan:\n\nLoans & equity investments\nPatents, copyrights & trade secrets\nAttracting investors, venture capital\nStartup firms challenges\n\nPrerequisites\nNone\n\nFaculty\xa0\nCarine Mukamakuza\n\n\n',
 '\n\n\n04-616 \xa0 Tech Startups: Tools & Techniques\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 "\n\nCourse description\nThe first three years of a technology start-up, when the company's DNA or trajectory is set, are the most critical. Too few entrepreneurs appreciate this fact and, as a result, many start without the essential skills, talents, and capabilities needed to set the company on a successful path. Some of these entrepreneurial skills can only be learned through starting and growing a business while others can be learned.\xa0\nThis course bridges the challenging gap between learning and doing entrepreneurship. We introduce the essential skill of market discovery, or learning to create, develop, and evaluate the concept of your business. Is my idea a real innovation? Is it also a business or a product, or neither? How do I know how big the market is for my product? What are the technology market and competitive risks in my idea and how do I assess them? Can I compete? Can I sell it? How? When? Where? Students will have the opportunity to apply their newfound practical skills gathered in part from lectures from experienced entrepreneurs and investors to case studies, role-playing, and solving actual problems of local tech businesses.\nThe best way to learn entrepreneurship is by doing, so the course will use ‘true-to-life’ scenarios. The class will be divided into teams and will focus on a company that is either (1) a student idea for a new start-up, (2) an existing start-up (ideally local), or (3) a hypothetical start-up proposed/conceived by the students, the professor, or both.\nLearning objectives\nEach student will be better able to do the following by the end of the course:\n\nUnderstand how new information and data about the concept of the business, financing, and the team can be quickly integrated into the company’s ongoing strategy and tactics.\nThink of tech startup planning not as an occasional activity but as a continuous, daily process.\nUnderstand how to create and evaluate the concept of your business, finance that business, and build a team to support it.\n\nOutcomes\nStudents will have gained a working knowledge and understanding of the main challenges associated with starting a tech-based business including (1) developing a concept of the business, (2) fundraising, and (3) building a team. In addition, students are encouraged to bring their ideas to the course, which allows those particular students to finish the course with a usable investor pitch.\xa0\nContent details\nTeams will take their respective cognitive learning-driven start-ups through customer discovery. Specifically, each team will be required to make a presentation and produce a final report.\nEach presentation will come at the end of each course section, roughly equally spaced throughout the semester. Each team will make a ~25-minute presentation followed by ~15 minutes of discussion between fellow students, faculty, and invited guests. Students are, of course, encouraged to draw on resources beyond the assigned reading and lectures.\xa0\nPresentations will be judged on the quality and depth of the analysis and clarity of presentations (see attached presentation assessment forms). Students can expect not only to develop but provide recommendations.\nGrade weighting is as follows:\xa0\n\nCustomer Discovery Presentation: 20%\xa0\nCustomer Discovery Report: 70%\xa0\nClass Participation: 10%\xa0\nCourse Grade: 100%\xa0\n\nTeam presentations will collectively be evaluated on the quality, depth, and usefulness of the recommendations of their peers for that session. Grades are assigned by the professor with consideration to the quality of the discussion in the final grade.\nPrerequisites\nNone\nFaculty\nMark F. DeSantis\n\n",
 '\n\n\n04-623 \xa0 Cyber Defense\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis course is designed to teach students the principles of cybersecurity and how they correlate to security practitioners and cyber adversaries. The course integrates networking and system management principles with a focus on system security through defensive strategies. Students will learn how to think like an attacker, how modern cyber-attacks and defenses work in practice, and how to evaluate risks and security systems. They will learn by working in a hands-on lab setting and participating in real-world internships while developing strong critical thinking skills. After completing this course, students will have the necessary core skills and understanding of typical risks and weaknesses as well as how to design a safe system using fundamental concepts and methodologies.\nLearning objectives\n\nDetermine the various levels of a cybersecurity evaluation \nRecognize the various types of cyber-threats \nAcquire the skills needed to conduct a hands-on cybersecurity assessment \nUse the learned techniques to defend IT assets against cyber-threats \nUnderstand the network, system, and application risks and how to manage them \nUnderstand techniques used by hackers to penetrate computer networks and systems \nIdentify network, system, and application vulnerabilities and implement the strongest possible security countermeasure\n\nOutcomes\nStudents will gain technical and intellectual skills in:\n\nSecuring an IT infrastructure and examining and resolving security risks in networks and computer systems\n Creating, testing, and evaluating secure application software\nDeveloping policies and procedures for managing security risks in organizations\n\nContent details\nCyber-threats, vulnerabilities, and attacks: Cyber Threats Summary, Vulnerabilities Review, Common avenues of Cyber-attack, The Global Cyber Threat Landscape, Threat Actor Types, Cybercriminals, Non-Adversarial Employees, Adversarial Employees, Nation State Actors, Hacktivists, Threat Modeling Fundamentals, State Espionage, Sabotage. \nIncident response: External Attack on Servers, Suspicious Unauthorized Access, DDOS TCP-SYN Attacks, Web Shell Attack, Client-Side Attacks, Suspicious Email attacks, Detection techniques of Reverse Shell Connectivity, Data Breach Investigation, Malicious Command Execution, Internal Reconnaissance, Data Exfiltration, Anomaly Detection and Investigation, Hacking Tool Investigation, Identifying and Reacting to a Malware Attacks, Malware Incident handling. \nProtective cybersecurity technologies: The Cyber Kill Chain, Cyber Intelligence, Application Security Overview, Web Application Firewall (WAF), Application Security Testing, Techniques and Products, the NIST Cybersecurity Framework, Digital Rights Management, Endpoint Protection Platform (EPP), Application Whitelisting/Blacklisting, File Integrity Monitor, Full Disk Encryption, Data Encryption and Key Management, Data Masking and Tokenization, Network Access Control, Data Leakage Prevention (DLP), Data Intrusion Prevention Systems, Secure Web Gateway, Secure Cloud Access Security Broker, Cloud Security Posture Management, and Cloud Security Overview\nPrerequisites\xa0\nAny of the following fall semester courses:\n\n04-720 Ethical Hacking\n18-731 Network Security\n04-721 Vulnerability Assessment and Testing\n\nAlternatively, if a student does not have the prerequisites listed above, they should possess the following skills:\n\nBasic C or Python programming language skills\nBasic Linux commands and operations\nKnowledge of TCP/IP networking\nA strong background in cybersecurity threat models\n\nFaculty\nJema David Ndibwile\n\n',
 '\n\n\n04-624 \xa0 Information System Audit and Standards\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThe goal of this course is to introduce students to concepts, tactics, and best practices in IT governance, auditing, and control. Based on recognized IS audit standards, frameworks, and guidelines, students will gain the knowledge and abilities to evaluate IS governance and develop and implement audit strategies and controls. Students will also learn about the underlying legal, ethical, and security challenges.\nLearning objectives\n\nDemonstrate a thorough awareness of the tasks and expertise that a world-class information systems auditor is expected to possess\nUnderstand how to plan, execute, report, and follow up on an audit of an information security management system\nUnderstand the review requirements of Information Security controls and countermeasures\nUnderstand the roles and responsibilities of the Information System Auditor\n\nOutcomes\nStudents will gain knowledge, abilities, and competencies in the following areas by the end of the course:\n\nIT industry security standards and frameworks\nInformation security policy development\nSecurity compliance and auditing\nAccess control and information abstraction for level of demanded security\n\nContent details\n\nProcedures and security policies\nRisk assessment methodologies\nRisk management\nData Recovery Plans (DRP)/Business Continuity Plan (BCP)\nBusiness impact analysis\nAsset classification\nProcess level strategy\nInformation classification organization\nCrisis management plan\nResource recovery strategy\nFrameworks\nAudit benchmarks\nCompliance\nCommunications\nData security for system designers\nCriteria for evaluation and security testing\nInternational security guidelines\nLogging and analysis\nPolicy development for security\nSecurity models\nSecurity standards\nISO 17799/ISO 27001 Security Certifications\nSecurity Management Engineering Capacity Maturity Model\nCybersecurity Laws and Legal Framework\nRecovery and risk analysis\nOperating systems and application-specific auditing\n\nPrerequisites\n\nBasic knowledge of cybersecurity\nBasic knowledge of information technology assets and operations\n\nFaculty\nJema David Ndibwile\n\n',
 '\n\n\n04-625 \xa0 Intrusion Detection Systems\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse concentration\nCybersecurity\nCourse description\nIntrusion detection systems (IDSs) constitute an essential component of any network security solution package. Underlying IDSs is a great deal of fascinating mathematics mostly taken from various fields such as Probability Theory, Statistic, and Detection Theory. A good understanding of this mathematical background will enable Security Officers to better appreciate the benefits and limitations of IDSs and prepare them to become better practitioners.\nLearning objectives\nThe goal of this course is two-fold. First, it will provide students with hands-on exposure to the mathematical principles and techniques used in intrusion detection. Second, students will experiment with the real-life process of going from a theoretical intrusion detection solution to its implementation. The course will proceed by introducing mathematical concepts on an "as needed" basis, motivated by their direct applications to intrusion detection.\nOutcomes\nThe class consists of lectures, homework assignments, labs, and a class project. Topics covered include an overview of intrusion detection (host and network-based IDSs, techniques of intrusion detection—anomaly and signature-based), a brief review of the mathematical background of IDSs, and case studies of mathematical solutions for IDSs and the issues related to their applications in the real world.\nAt the end of the course, students will have a good understanding of the techniques used in designing IDS. They will also acquire the practical skills needed to implement IDS in a work environment.\nContent details\nTheoretic Part\n\nHistoric of IDS\nUnderstanding Intrusions\nIDS Definition\nRole of IDS\nGeneral Architecture of Modern IDS\nTypes of IDS (Host-based, Network-based, Kernel-Based, Hybrid)\nData sources for IDS\nDetection Techniques\n\nBasic Probability and Statistics\nError Types\n\nFalse Positive/Negative\nTrue Positive/Negative\nTradeoff and the: « Receiver Operating Curve (ROC) »\n\n\nSignature-Based Detection Techniques\n\nArchitecture\nPro/Cons\nExample of Technique: Pattern Matching\n\n\nAnomaly-Based Detection Techniques\n\nArchitecture\nPro/Cons\nExample of Technique: Machine Learning\n\n\nPerformance of IDS (precision, completeness, efficiency, resiliency)\nEvasion Techniques\nCurrent Implementation: IDS/IPS\nSome IDS/IPS Systems\n\nStudents to do research and present/demo IDS of their choice\nExample: Snort, Bro, Suricata, Security Onion, etc.\n\n\n\n\n\nLab\nTips: Install Security Onion (comes with bro, snort, suricata, etc.)\n\nIntroduction to « Scapy »\n\nIntro\nInstall Scapy\nIPTABLES Configuration\nManually generate packets\n\n\nNetwork Monitoring Tools\n\nWireshark\n\n\nCase Study 1: SNORT\n\nIntroduction\nInstallation and test\nWriting Snort Rules\nTest/Visualization of Rules and Effects\n\nSnort Engine\nScapy to craft packets that would trigger rule\nWireshark to visualize\n\n\n\n\nCase Study 2 (if time permits): Building a Spam Filter (anomaly-based)\n\nTheoretical Background\n\nBayesian Detection\nNeural Network\n\n\nImplementation\n\nGenerating Synthetic Data\nDetection Engine\nTests\xa0\n\n\n\n\n\nPrerequisites\nNone, but a background in Networking, Programming, and Basic Probability would help.\nFaculty\nAssane Gueye\n\n',
 '\n\n\n04-630 \xa0 Data Structures and Algorithms for Engineers\n Location: Africa \n           Units: 12\n           Semester Offered: Fall, Spring\n\n\n',
 '\n\n\xa0Course description\nThis course will provide engineers with a background in algorithms, data structures, and their practical uses. An engineer who may already know programming will be able to learn the foundational aspects of how to design more efficient code that can reduce memory and CPU footprint.\xa0\n\xa0\nThe course begins by delving into a few algorithms and data structures that are routinely used by programmers. We then explore more efficient implementations of these constructs. Abstract data types are introduced, and the course provides an in-depth treatment of applications like searching, sorting, lists, stacks, and queues. The course will also cover trees, graphs, and algorithmic strategies. Performance analysis and tractability of algorithms, time/space complexity, automaton, and computability will also be discussed. Time permitting, the course will touch upon multi-threading, logging, testing, verification, and validation.\n\xa0\nThe course will be graded primarily on the basis of several programming assignments given during the semester, surprise quizzes, and two programming exams. All programming assignments will be in C++, and the lectures would involve studying C++ code.\nLearning objectives\n\nRecognize and analyze critical computational problems, generate alternative solutions to problems, and assess their relative merits.\nUnderstand factors that influence algorithmic performance and memory consumption.\nDesign, implement, and document appropriate, effective, and efficient data structures & algorithms for a variety of real-world problems.\n\nOutcomes\nThe successful student will be able to:\n\nWrite computer programs in C++ and use CMake/GCC to compile code.\nCreate algorithm solutions to a variety of problems that can be solved on computational devices.\nExplain solutions using pseudo code, flowcharts, and other tools.\nOptimize a solution for run-time, memory, or both.\nExplain the theoretical and practical aspects of a variety of computer algorithms.\n\nContent details\n\nRepresenting algorithms\nComplexity theory, tractability, and decidability.\nAsymptotic complexity analysis\nSorting and searching algorithms\nAbstract data types\nArrays, lists, stacks, & queues\nTrees- binary trees, binary search trees, height-balanced trees.\nGraphs- graph representation, graph traversal, topological sorting, shortest path algorithms, minimum spanning tree algorithms\nHashing: hash functions, collision resolution, complexity, applications\nHeaps and priority queues\nMatrix operations, B-trees, Fibonacci heaps\nAlgorithmic strategies: brute force, divide and conquer, greedy algorithms, dynamic programming, combinatorial search and backtracking, branch and bound\nAlgorithm correctness, testing, verification, and validation\n\nPrerequisites\xa0\nPrior knowledge of coding in C or C++ would help greatly.\nFaculty\nGeorge Okeyo\n\n',
 '\n\n\n04-631 \xa0 Advanced Database Systems\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis course aims at describing the databases in a way suitable for applications and computer systems designers. First, the course describes the fundamental characteristics of current architectures. Then, it illustrates the main lines of system evolution, presenting the models that go beyond the relational systems such as active databases, object-oriented systems, and the management of XML data.\nCourse outline\n\nTransactional systems: relevance of transactional systems; concept of transaction; transaction properties: atomicity, consistency, isolation, durability; theory of concurrency and concurrency control techniques; database recovery techniques; management of the system logs and recovery protocols\nInternal architecture of a relational server: notion of logical and physical page and buffer management policies; research; management and data re-order techniques; B-trees and B+-trees; hashing; Access methods: scanning, sorting, join; query optimization\nDistributed and parallel architectures: fragmentation and data allocation; query distribution and optimization; distributed transactions; parallelism; management of replicated data\nActive databases: description of the ECA (Event-Condition-Action) paradigm for active rules; rules execution mechanisms; analysis techniques for active rules; triggers in relational systems; applications of active databases\nXML databases: Query languages for XML: XPath, XQuery\nIntroduction to NoSQL databases; stream databases; MongoDB\n\nPrerequisites\nFamiliarity with relational databases and Structured Query Language (SQL).\nFaculty\nEric Umuhoza\n\n',
 '\n\n\n04-632 \xa0 DevOps: Software Development and IT Operations\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse discipline\nSpecial Topics in ICT\nCourse description\nThis course focuses on the technology aspect of DevOps. You will learn the basics of the infrastructure important to utilizing DevOps tools (i.e., virtualization, networking, the cloud, and infrastructure security). You will also learn the theory of fundamental DevOps concepts: Infrastructure as Code, configuration management, the deployment pipeline, microservice architecture, management of configuration parameters, the things that happen after a service is deployed, disaster recovery, and development-oriented security. Finally, you will see samples of the main DevOps tools.\nLearning objectives\nAfter completing this course, students will be able to:\n\nExplain the basic concepts of cloud infrastructure and infrastructure security.\nEnumerate and explain the basic theory of DevOps.\nExplain the basic classes of DevOps tools.\nNavigate the internet to learn about tool installation and use.\n\nContent details\n\nOverview of DevOps\nConfiguration Management\nInfrastructure security\nVirtualization\nContainer management\nDeployment pipeline\nNetworking\nCloud\nMicroservices architecture\nPostproduction and disaster recovery\n\nPrerequisites\nFamiliarity with programming languages and operating systems.\nFaculty\nEric Umuhoza\n\n',
 '\n\n\n04-633 \xa0 Embedded Systems Development\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse discipline\nMS ECE, MSIT\nCourse description\nThis hands-on course provides a basic understanding of embedded systems development (embedded processor architectures, programming, and design); models of computation for embedded systems; modeling, specification, synthesis, and verification; hardware/software implementation; performance analysis and optimization; and project design methodologies and associated tools.\nLearning objectives\nStudents will learn about different chips such as PIC and Arduino. Assembly, C programming and Arduino programming will be studied, and some industrial applications will be realized. Students can expect to learn how to program with the embedded architecture that is ubiquitous in smartphones, portable gaming devices, robots, etc. Through a series of laboratory exercises with state-of-the-art embedded microcontrollers, sensors, and actuators, students will acquire skills in the design and implementation of core embedded systems.\nOutcomes\nAfter completing this course, students will be able to:\n\nUnderstand the principles of micro-computers and embedded programming\nUnderstand hardware and software for embedded microcontrollers\nUnderstand the interaction of key devices (buses, memory architectures, memory management, device drivers)\nUse simulating tools for designing and developing embedded systems\nPlan installation and maintenance of embedded systems\nPrepare reports and technical reviews for embedded software development reviews\nCarry on independent investigation on embedded systems of their failure\nDemonstrate problem-solving using embedded programs\n\nContent details\n\nMicrocontroller Overview\nMicrocontroller Architecture\nMicrocontroller functional components: Memories, parallel ports, power supply (low power computing), and clock oscillator\nAssembly language and C programming\nInterrupts, counters, and timers\nES communications Protocols\nData Acquisition and manipulation\nArduino programming\nFault-tolerant embedded systems\nWireless communication in embedded systems\n\nFaculty\nEmmanuel Ndashimye\n\n',
 '\n\n\n04-634 \xa0 Software Architecture and Design\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nSoftware Architecture and Design is a one-semester course, aiming to train our graduate students from software engineers toward becoming software architects who are the technical lead of a software project team. The primary objective of the course is to help students develop skills in designing, developing, and justifying reasonable software architecture for enterprise-scale software-intensive systems, considering both functional and non-functional requirements as well as contextual system environments. Core topics include an overview of software architecture, micro-architectural patterns (so-called design patterns), macro-architectural patterns (i.e., modern patterns), service-oriented architecture, architectural modeling, viewpoints and perspectives, architectural analysis techniques, architectural tactics (QoS), agile architecture, and some advanced topics. Literature survey and study of state-of-the-art technologies, as well as both individual and group project work, are essential ingredients of this class. Research and practical projects build upon one another. Please note that this course is intended for ECE master students with a concentration in Software Engineering and will satisfy the Software Engineering and Design requirement.\nLearning objectives\nSoftware Architecture and Design is a one-semester course, aiming to train our graduate students from software engineers toward becoming software architects who are the technical lead of a software project team. The primary objective of the course is to help students develop skills in designing, developing, and justifying reasonable software architecture for enterprise-scale software-intensive systems, considering both functional and non-functional requirements as well as contextual system environments.\nContent details\nOverview of software architecture, micro-architectural patterns (design patterns) and macro-architectural patterns (modern patterns), service-oriented architecture, architectural modeling, viewpoints and perspectives, architectural analysis techniques, architectural tactics (QoS), agile architecture, and some advanced topics such as Devops, container management, serverless computing, etc.\nPrerequisites\nUnderstanding of basic software engineering concepts and effective knowledge of Java programming. \n18652 Foundations of Software Engineering Anti-Requisites: 17-655 Architectures for Software Systems.\nFaculty\nEric Umuhoza\n\n',
 '\n\n\n04-636 \xa0 Software Accessibility\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThe course addresses the ICT solutions (tools and applications) for users with special requirements. Topics include the models for the characterization of the functional skills of users and the design, development, and evaluation (of usability) of ICT solutions designed for special users. Specific attention is paid to the Web Accessibility standards and to multimodal interfaces for users with cognitive, sensory, and motion disabilities.\nLearning objectives\nStudents taking this course will:\n\nLearn to analyze problems and solutions related to universal accessibility, taking into account the national and international legislation (particular attention will be paid to the UN contexts).\nBase their analysis and evaluation on a global user model which considers the user and his or her health condition in agreement with the international standards and requirements (OMS models).\nParticipate in practical sessions that will allow them to verify the acquired competencies:\n\nDescribing their own user profile and their satisfaction using a multimodal single-user environment\nWriting suggestions to improve the accessibility of a website taking into account the special needs of persons with disabilities (sensorial and/or physical and/or cognitive and/or relational)\n\n\n\nContent details\n\nUniversal accessibility: national and international contexts\n\nThe UN Convention on the Rights of Persons with Disabilities and its influence on ICT\nThe international network: (the role of governmental, non-governmental, professional, industrial, and academic subjects)\n\n\nA global reference model to profile users\n\nThe OMS ICF Model and its extensions to support ICT accessibility\n\n\nMultimodal devices and contexts\n\nMultimodality for innovation and accessibility\nInnovative devices and best accessible solutions for different abilities\nAccessibility and evaluation – models and instruments\nEtc.\n\n\nWeb accessibility\n\nAccessing the interface and the contents\nDisabilities related to personal, social, or cultural diversities\nHow to use the input and the output redundancies: additional and complementary multimodality\nThe WCAG guidelines\nAccessibility of the active web: best and worst practices and programs\nEvaluation of web accessibility considering different points of view\n\n\n\nPrerequisites\nNone\nFaculty\nEric Umuhoza\n\n',
 '\n\n\n04-637 \xa0 Mobile Big Data Analytics and Management\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse discipline\nMSIT\nCourse concentration\nApplied machine learning\nCourse description\nThe developments in Internet of Things (IoT), mobile computing, and data storage technologies have led to the abundance of Mobile Big Data (MBD). MBD has unique characteristics that distinguish it from classical Big Data: it has multi-dimensional, personalized, multi-sensory, spatiotemporal, and real-time characteristics. These characteristics lead to challenges related to data management, analytics, privacy, and security. The course will provide students with the knowledge and skills to source, process, manage, and analyze MBD. In addition, the course will provide students with practical skills to apply appropriate visualization techniques to communicate the results of analytics in the MBD context.\nLearning objectives\nThe course aims to prepare learners to build next-generation analytics applications that exploit IoT big data and other data sources, collectively called mobile big data, for a wide range of application areas.\nOutcomes\nAt the end of the course, the learners should be able to:\n\nDistinguish different types of mobile big data and their sources.\nSelect and apply appropriate data management techniques to source, prepare, and store mobile big data for analysis.\nBuild analytics and visualization models based on various types of mobile big data.\nApply analytics techniques for user modeling and context awareness.\nBuild practical mobile big data applications for different application domains.\nSelect and apply appropriate techniques to mitigate privacy and security challenges associated with mobile big data analytics.\n\nContent details\nThe course covers:\n\nOverview of Mobile big data (MBD)\nMBD data sources: IoT sensors and devices, crowdsensing/crowdsourcing, mobile devices, social media, etc.\nTypes of MBD data: structured, unstructured, and semi-structured data\nMBD management processes: pre-processing, cleaning, redundancy management, and data storage. This coverage will extend to the types of SQL and NoSQL databases and their support for analytics processing.\nMBD analysis approaches: statistical analysis, knowledge discovery and data mining, and visualization, among others\nReal-time and streaming analytics\nHigh-performance analytics techniques\nContext-awareness and user modeling in MBD context\nMBD analytics tools and infrastructures including cloud-based infrastructures\nPrivacy and security challenges in MBD analytics\nApplications of MBD analytics: smart city, agriculture, health, financial inclusion, and climate resilience, among others\n\nPrerequisites\nNone\nFaculty\nGeorge Okeyo\n\n',
 '\n\n\n04-638 \xa0 Programming for Data Analytics\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThe course explores the knowledge and programming skills necessary for solving data analytics problems.\xa0\n\nThe topics cover fundamentals of programming such as variables and primitive data types; operations, conditions, and control flow; in-built data structures; functions and modules, third-party packages and installation; files and data including file input, saving, exploring, and plotting data; object orientation with classes and objects; and error and exception handling. The course also explores popular frameworks for the selected programming language. In all topics, emphasis will be put on developing good problem-solving and programming habits.\n\xa0\nThe programming and problem-solving will involve developing solutions to data analytics problems from problem formulation, data pre-processing; data analysis including exploratory data analysis and analytics pipelines; model development; model evaluation using relevant performance metrics; and model selection including hyperparameter tuning. Under model development, the course will cover models for supervised, unsupervised, reinforcement learning, and deep learning. The course will cover visualizations as both a means for analytics as well as communicating the analytics insights. Furthermore, the course will cover model deployment and automation of analytics processes.\n\xa0\nOverall, the course provides students with practical skills in programming, problem-solving, analytics, and analytics communication through programming assignments and reporting.\nLearning objectives\nThe course aims to prepare learners to develop solutions for different types of data analytics problems and to communicate relevant analytics insights to different types of audiences.\nOutcomes\nUpon successful completion of this course, students should be able to:\n\nExplain and apply problem-solving and programming skills to solve analytics problems.\nApply programming skills to access, process, understand, and prepare data for analytics.\nSelect and apply appropriate machine learning techniques to develop solutions for different types of analytics problems.\nEvaluate and select machine learning models based on objective criteria.\nDisseminate analytics insights to various audiences/stakeholders.\n\nContent details\nProgramming fundamentals:\n\nVariables and primitive data types\nOperations, conditions, and control flow\nIn-built data structures\nFunctions and modules\nFile input and output\nObject orientation with classes and objects\nError and exception handling\nModules and packages\nThird-party packages and installation\nProgramming with frameworks and design patterns\n\nApplications to analytics problems:\n\nProblem formulation\nData exploration and analysis: obtaining data, saving data, understanding data, exploratory data analysis, and visualization\nData pre-processing, feature extraction, and feature selection\nModel building: machine learning libraries; supervised learning models – classification and regression; unsupervised learning models - clustering and association analysis; deep learning models; reinforcement learning models\nModel selection and evaluation: model evaluation metrics, cross-validation, and hyperparameter tuning\n\nAnalytics pipelines and model deployment\nCommunication of insights: analytics reports, visualizations, and dashboards\nPrerequisites\nNone\nFaculty\nGeorge Okeyo\n\n',
 '\n\n\n04-641 \xa0  Fundamentals of Telecommunications and Computer Networks\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nIn this class, students will learn how modern telecommunications and computer networks function as well as key communication protocols and protocol stacks. Moreover, the course will discuss computer network design and deployment through lectures and lab work. Students will complete weekly labs that require them to implement a specific network configuration. The course grade will be based on weekly lab write-ups, paper reviews, a midterm, and a final exam.\nLearning objectives\nThe goal of this course is to provide learners with the fundamentals of computer networking and other telecommunication systems. After completing this course, students should understand how modern telecommunications and computer networks function and understand relevant protocols and the protocol stack. They should also be able to perform network subnetting and explain how routing and switching are accomplished.\nOutcomes\nAfter completing this course, students will be able to:\n\nDescribe various types of network architectures and protocols\nDescribe and analyze QoS and traffic engineering mechanisms and protocols\nEvaluate the performance of standard networks\nHandle address space exhaustion of IPV4 (Subnetting concepts)\nHow to effectively and fairly allocate resources among a collection of competing users\nBe familiar with the most popular network applications\nDescribe different security issues in computer networks\n\nContent details\n\nHistory of the Internet\nDesign principles\nISPs, backbones, and peering\nApplication protocols (HTTP, FTP, SMTP, POP3, IMAP, DNS, DHCP)\nDNS and CDNs (content distribution networks)\nPeer-to-peer networks\nTransport layer (UDP, TCP)\nCongestion control\nNetwork layer (IP addressing, subnetting, ICMP, OSPF, RIP, IPv4, IPv6)\nRouting (Internet, algorithms, instability)\nNetwork measurement\nLink layer (Ethernet, devices, virtual link layer, ARP, MAC)\nWireless and mobile networks, and next-generation networks\nSecurity in computer networks\n\nPrerequisites\nNone\nFaculty\nEdwin Mugume\n\n',
 '\n\n\n04-645 \xa0 Internet of Things\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nTraditionally, only computer devices were connected to the Internet. The Internet of Things (IoT) seeks to connect every “Thing” to the Internet. Things may include sensors, vehicles, home appliances, structures, etc. In this course, students will learn how to interconnect different Things to the Internet using web technologies. Using such well-developed and well-supported technologies makes it easier to deploy the IoT network in a cheaper and more secure way. Students will also learn how to send information back to the Things for actuation purposes. Students will learn how to fuse raw sensor data in a meaningful way for large networks.\xa0\nThe course will also cover the connectivity technologies available for the IoT and how to choose the most appropriate technologies for different scenarios. The course takes a deeper look at low-power, long-range wireless protocols as well as appropriate protocols for constrained devices in the IoT ecosystem. In addition, students learn about PCB design and hardware prototyping. The course combines several labs and a final class project to enhance student learning.\nLearning objectives\nThe objectives of the course are to:\n\nUnderstand the differences between the Internet of Things (IoT) and the Web of Things (WoT)\nUnderstand the architectural principles used to design the WoT\nDesign and implement WoT-based systems using RESTful principles\nUnderstand the technologies, protocols, and standards that influence the IoT such as MQTT, CoAP, HTTP, etc.\nDevelop web applications that interact with low-level IoT deployments\nLearn how to fuse and process large amounts of sensor data to reach accurate decisions\nAppreciate privacy and security issues associated with IoT\nUnderstand the principles behind printed circuit board (PCB) and sensor node design\n\nOutcomes\nAfter completing the course, students will be able to:\n\nExplain the differences and advantages of designing IoT systems using the WoT approach\nChoose the most appropriate sensors and associated connectivity technologies and IoT platforms for different scenarios\nBuild WoT systems based on RESTful principles to connect multiple low-level sensors to Internet-based applications\nDesign a PCB to create a sensor node for a given scenario\n\nContent details\n\nOverview of IoT systems from the edge to the cloud\nData fusion techniques and Kalman filtering\nPrinciples of the WoT approach to the IoT\nIoT connectivity technologies\nWoT protocols for constrained devices (e.g., CoAP and MQTT)\nDeveloping Web APIs for Things\nImplementing the Web of Things\nDesign and development of PCBs for IoT deployment\n\nPrerequisites\nNone\nFaculty\nEdwin Mugume\n\n',
 '\n\n\n04-650 \xa0 Mathematical Foundations of Machine Learning\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis course offers a comprehensive mathematical foundation for machine learning, covering essential topics from linear algebra, calculus, probability theory, and optimization to advanced concepts including information theory, statistical inference, regularization, and kernel methods. The course aims to equip students with the necessary mathematical tools to understand, analyze, and implement various machine-learning algorithms and models at a deeper level.\nLearning objectives\nIn this course, students will:\n\nLearn the foundational concepts and techniques of linear algebra, including vector and matrix operations, eigenvectors, and eigenvalues, with a focus on their application in machine learning\nLearn calculus concepts, such as derivatives and optimization techniques, and apply them to solve machine-learning problems\nGain a comprehensive understanding of probability theory and statistics, including multivariate random variables and maximum likelihood estimation, and their role in machine learning\nLearn various optimization methods, including gradient descent and convex optimization, and their application in machine learning\nLearn information theory and its relevance to machine learning\n\nOutcomes\nUpon the completion of this course, students will be able to:\n\nUse linear algebra concepts such as matrices, vectors, and eigenvalues to represent and manipulate data\nStudents will be able to use calculus concepts such as differentiation and gradients to optimize machine learning models\nUse probability and statistical concepts to model and infer from data\nUse optimization techniques such as gradient descent and convex optimization to optimize machine learning models\nExplain the role of information entropy for assessing model accuracy\n\nContent details\nThis course includes:\n\nLinear algebra: vectors and matrices, vector spaces, systems of linear equations, eigenvalue decomposition, singular value decomposition, least-squares\nCalculus: Chain Rule and Jacobians, gradient\nProbability: probability axioms, Bayes rule, random variables, probability distributions\nStatistics: descriptive stats, inferential stats, sampling and MCMC Methods, statistical tests\nOptimization: Convex functions and convex optimization problems, duality, and Lagrange Multipliers\nInformation theory: Entropy and Mutual Information, KL Divergence, and Cross-Entropy\n\nPrerequisites\nNone\nFaculty\nMoise Busogi\n\n',
 '\n\n\n04-651 \xa0 Applications of AI in Africa\n Location: Africa \n           Units: 6\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse discipline\nMS EAI\nCourse description\nRecent advances in AI and Machine Learning and an increase in the availability and collection of massive data sources, such as satellite images, social media data, and call detail records from mobile phone operators, have begun to transform our understanding of critical challenges facing the developing world, especially within the African continent. These data sources can offer a more timely, complete, and cost-efficient alternative to survey data that has the potential to guide more effective decision-making. However, in order to maximize the value of alternative data, users need to have an awareness of their sources and value, knowledge of how and when to use such data to obtain meaningful insights, and a deeper appreciation of a range of ethical issues, such as privacy and consent.In this course, students will become conversant with current research that uses varied types and sources of data to better understand the social and economic realities of people and communities in African countries. Through readings of recent work, students will also analyze the opportunities and challenges presented by using alternative datasets. Upon successful completion of this course, students will be more familiar with the use of current alternative data sources in research. In addition, students will be able to formulate research questions that are grounded in a review of relevant literature and answerable through an analysis of alternative data types and identify existing data sources and relevant machine learning approaches that can be used to answer these questions.\nLearning objectives\nThis course is designed as a seminar. Therefore, it is based on interactions between the students and the instructor, grounded on readings of current research as well as students’ own writing. Guest speakers involved in the implementation of AI/ML services will be scheduled throughout the semester. It is particularly important that class members take advantage of these sessions to ask in-depth questions as to the design, data, and delivery experiences of these services in order to gain insight into your own individual project possibilities.\nOutcomes\nBy the end of this course, you will be better able to:\n\nCritically analyze current research that uses AI and machine learning approaches with alternative datasets\nDiscuss the opportunities presented by these approaches in understanding and improving outcomes in various sectors of African countries, such as healthcare and financial inclusion\nAnalyze the limitations and challenges presented by these datasets, such as privacy and ethical concerns\nDevelop an original project proposal grounded in the current literature which addresses an application of AI/ML or data preparation appropriate to development in Africa\n\nContent details\n\nWeek 1: Goals of this course, what is AI, and why is it important for Africa?\nWeek 2: Overview of the use of AI and alternative data in Africa\nWeek 3: Healthcare and Epidemics: Covid and Malaria\nWeek 4: E-commerce\nWeek 5: Finance/Marketing\nWeek 6: Privacy/Transparency/Ethics\nWeek 7: Agriculture and Economic Evaluation\nWeek 8: Public Sector: Services and Political Participation\nWeek 9: Education\nWeek 10: Infrastructure and Urban Planning\nWeek 11: Environment\nWeek 12: Information and Communication\nWeek 13: Corporate Services\n\nPrerequisites\nNone, although a basic understanding of the AI and machine learning fields would be beneficial.\nFaculty\nEdith Luhanga\n\n',
 '\n\n\n04-652 \xa0 Artificial Intelligence System Design\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 "\n\nCourse discipline\nMS EAI\nCourse description\nArtificial Intelligence can be defined as the study of the design of rational agents where an agent is something that acts, and rational means that the agent acts to achieve the best-expected outcome. AI has a long history, extending at least as far back as the 1950s. Machine learning can be considered as a sub-field of AI focused on how a rational agent can adapt to new circumstances as well as detect and extrapolate patterns. The implementation of an AI system typically relies on many different hardware and software components.\nThis course focuses on two aspects of AI system design:\n\nPerforming ML inferences in resource-constrained edge devices such as one might find in an IoT network.\nML model performance analysis and maintenance in the cloud. Students will study Edge ML in the context of Raspberry Pi's connected to Arduinos, and use TensorFlow to design models. They will use various AWS and web technologies to learn how to design distributed and cloud-based systems for analyzing and maintaining ML models. This course provides a foundation students can use to design and implement complex AI systems that use both edge and cloud components.\n\nLearning objectives\nStudents will learn how the edge components of an IoT-like network can be connected to edge gateways, and how the data aggregated there can be further routed to the cloud. They will study important edge system design tradeoffs, such as resource consumption (e.g., memory and power) vs. ML inference speed. They will learn the importance of matching ML models to edge device constraints. Students will also learn how data can be collected in devices outside the cloud and then routed to the cloud for further analysis. They will learn the importance of using designs such as REST APIs. Finally, they will learn the fundamentals of how to assess model performance automatically in the cloud and detect when model updates should be triggered.\nOutcomes\nAfter completing this course, students will be able to do the following:\n\nConfigure a Raspberry Pi as an edge gateway\nUse the Raspberry Pi as a development platform for designing simple TensorFlow ML models\nDevelop programs incorporating TinyML models for Arduino's on the Raspberry Pi, and deploy them\nCommunicate data bi-directionally between the Raspberry Pi and Arduino in real-time, and assess the real-time performance of edge ML models running on the Arduino, including memory utilization and speed of execution\nUnderstand principles of REST API design and complete client and server-side implementations for accessing ML models using common SDKs such as Flask for Python applications.\nUnderstand principles of cloud-based identity and access management such as roles, policies, users, groups, and API key credentials\nStream data to a cloud database, such as DynamoDB (AWS), where it can be analyzed and queried\nAnalyze data stored in the cloud to assess model performance\nUpdate ML models\n\nContent details\n\nIntroduction to distributed ML systems such as IoT systems using edge ML\nConfiguring Raspberry Pi gateway devices running Linux\nIntroduction to ML with an emphasis on neural networks and CNNs\nWriting python code to execute on RPi's, and C code for Arduinos\nUsing TensorFlow to design EdgeML models\nAssessing the performance of TinyML models w.r.t memory and execution speed\nReview of model quality metrics including accuracy, precision, and recall; understand how data distributions can lead to misleading quality metrics (e.g., under conditions of class imbalance)\nOverview of web platform architectures: TCP/IP, DNS, URI/URL/URNs\nPrinciples of web resources behind the REST API framework\nIdentity and Access Management (IAM) in Amazon web services as an example of a common IAM framework.SDKs for streaming data to AWS (e.g., DynamoDB) and monitoring using serverless (Lambda) functionsDetecting model discrepancies by monitoring quality (e.g., class confidence) and retraining when needed\n\nPrerequisites\nNone\nFaculty\nMike Perkins and Charles Wiecha\n\n",
 '\n\n\n04-653 \xa0 Engineering Artificial Intelligence Project Methods\n Location: Africa \n           Units: 6\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThe purpose of this course is to assist engineers to understand the components of complex engineering\nartificial intelligence (AI) projects, to manage those project components, and to form and lead a project team.\n\xa0\nProject management tools and techniques will be introduced, discussed, and applied to ongoing or subsequent projects in your studies. Special attention is paid to the diversity of stakeholders who may be involved in AI projects, the special role of data and processing resources, as well as managing privacy and ethical issues of AI-based engineering projects. Techniques for eliciting design features, engaging users, identifying constraints, and developing system requirements will be covered, especially in a diverse stakeholder environment. Tools for managing projects and continuous integration and continuous delivery practices are also covered.\xa0\n\xa0\nThe course consists of weekly hands-on assignments as well as a final project to integrate the project methods covered in the class.\nLearning objectives\nIn this course, we will:\n\nDiscuss the stakeholders in a project on both the client and project team sides\nDiscuss the process for a project team to work with a client to gather system requirements and develop a project statement of work\nHave students use agile methods and industry-standard tools for planning and tracking their project\nUse tools for rapidly prototyping solutions for the client\nUnderstand the challenges and tools needed to design solutions for a variety of end users.\nAcquire techniques for managing project code and provide continuous integration and continuousdelivery\n\nOutcomes\nBy the end of this course, you will be better able to:\n\nUnderstand the challenges in AI system design and building successful projects\nIdentify project stakeholders and their impact on project success\nWork with customers and end users to better understand project requirements and goals\nUse Agile Methods and related tools for project management and solution design\nRapidly prototype solution interfaces for continuous stakeholder feedback\nUse ethnographic methods with diverse end users to inform solution design\nUse automated tools for managing project code, data, and models\nAutomate the integration, testing, and delivery of solutions for rapid iterations and improvement\n\nContent details\nThe class is taught through weekly lectures and assignments according to this schedule:\n\nWeek 1: Introduction, system requirements gathering\nWeek 2: Statement of work planning\nWeek 3: Gitlab for Agile planning/tracking\nWeek 4: User interface design in Dash\nWeek 5: Designing for users across cultures\nWeek 6: GitLab for code and continuous integration/continuous delivery\nWeek 7: ModelOps CI/CD in GitLab, final project presentations\n\nGrading is based on written assignments, a final portfolio of work, participation, and attendance.\nPrerequisites\nMust be a second-year student in the MS EAI program.\nFaculty\nCharles Wiecha and Tim Brown\n\n',
 '\n\n\n04-654 \xa0 Introduction to Probabilistic Graphical Model\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse concentration\nApplied machine learning\nCourse description\nThis course provides an introduction to the subject of Probabilistic Graphical Models (PGM). PGM give a unified view for a wide range of problems arising in several domains such as artificial intelligence, statistics, computer systems, computer vision, natural language processing, and computational biology, among many other fields. They provide a very flexible and powerful framework for capturing statistical dependencies in complex, multivariate data. PGM brings together probability theory and graph theory to enable efficient inference, decision-making, and learning in problems with a very large number of attributes and huge datasets. This introductory course will provide you with a strong foundation necessary for applying graphical models to complex problems.\nLearning objectives\nWe will cover key issues including representation, efficient algorithms, inference, and statistical estimation. It starts by introducing probabilistic graphical models from the very basics and concludes by presenting the different PGM algorithms and techniques used for inference and learning with directed and undirected graphical models.\nContent details\xa0\n• Module 1: Motivation and Revision \n\nMotivational Examples \nRevision Probability \nRevision Graph Theory \n\nModule 2: Basics of Graphical Models \n\nDirected Graphs \n\nFactorization \nMarkov Properties\n\n\nUndirected Graphs\n\nFactorization\xa0\nMarkov Properties\n\n\nFactor Graphs\n\nModule 3: Algorithms for Probabilistic Inference on Trees \n\nElimination Algorithm \n\nBasic Algorithm\nGraphical Approach\nComplexity\n\n\nMessage Passing Algorithms (marginals over all nodes) \n\nInference of Marginals: Sum-Product \n\nSum-Product on Trees\nSum-Product on Factor Trees\n\n\n\n\nMode Computation: Max-Product\n\nModule 4: Inference in Graphs with Cycles: Junction Tree Framework \n\nClique Tree and Running Intersection\nTriangulation and Junction Trees\nJunction Tree Construction\nJunction Tree Algorithm\n\nModule 5: Learning Algorithms \n\nParameters Estimation (Directed and Undirected Graphs) \n\nMaximum Likelihood\nIterative Proportional Scaling\n\n\nStructure Learning \n\nChow-Liu Algorithm\nBayesian Structure Learning\n\n\n\nModule 6: Putting it all together\nOutcomes\nAt the end of the course, students will acquire the background knowledge and skills necessary to apply probabilistic graphical models to solve real problems.\nPrerequisites\nStudents are expected to have an undergraduate-level background in linear algebra, multivariate calculus, probability theory, statistic, and some basic graph theory.\nFaculty\nAssane Gueye and Carine Mukamakuza\n\n',
 '\n\n\n04-655 \xa0 Artificial Intelligence for Engineers\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis is a graduate-level course on Artificial Intelligence designed to present a larger view of AI covering principles and techniques. It is primarily intended for those with backgrounds in engineering, science and IT who have not previously taken the subject formally or have been exposed to only some of the constituent elements. The course provides the foundations for further study, research, and application in different areas.\nTopics include: Intelligent agents, search, games, CSP, knowledge representation, logic, reasoning, planning, probabilistic reasoning, decision making, Machine Learning basics, Neural Networks, deep learning, Natural Language Processing basics, machine vision, AI in robotics, and ethics and philosophy of AI.\nSeveral assignments and a final project will be given to enable the student to gain practical experience in applying these techniques.\nLearning objectives\nSuccessful students should be able to understand what constitutes "Artificial" Intelligence, identify systems with Artificial Intelligence, and explain how AI enables capabilities that are beyond conventional technology.\nOutcomes\nUpon course completion, students should be able to:\n\nApply classical AI techniques including search algorithms, minimax algorithms, neural networks, tracking, and robot localization\nApply AI techniques for problem-solving\nExplain the limitations of current AI techniques\n\nContent details\n\nIntelligent agents\nSearch\nGames, constraint programming\nKnowledge, logic\nProbabilistic reasoning, planning, decision making\nMachine learning basics\nNeural network and deep learning basics\nNatural language processing basics\nAdvanced topics and ethics of AI\n\nPrerequisites\nNone. However, an ability to code in a programming language and an understanding of probability are expected. Prospective students should consult the instructor if they are either lacking or have already taken another AI course.\nFaculty\nAhmed Biyabani\n\n',
 '\n\n\n04-701 \xa0 Research Methods in Engineering\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis course provides an overview of research methodology including the fundamental concepts employed in designing and conducting research in the engineering field. The course will help students develop an understanding of the research process, ethical considerations in research, and the strengths and weaknesses of various research methods.\nLearning objectives\nStudents will learn how to:\n\nPlan and design a research project\nIdentify a research problem and sub-problems\nConduct a literature review\nDetermine a methodology for answering the questions presented\nDevelop hypotheses regarding the expected results\n\nOutcomes\nAt the end of the course, students should be able to:\n\nExplain the processes of research\nConducting a state-of-the-art literature review\nEmploy popular formats for citations\nDevelop a research design\nExplain the rationale for research ethics\nWrite research proposal, and report\n\nContent details\nResearch process\n\nWhat is research\nObjective and motivation of research\nType and structure of research\nResearch ethics\n\nResearch problem\n\nProblem definition\nResearch questions\nLiterature review\n\nResearch design and methods\n\nResearch design\nData collection and analysis\nResearch tools\nResearch presentation\nAcademic writing\nAcademic integrity\n\nPrerequisites\nNone\n\nFaculty\nEdwin Mugume\n\n\n',
 '\n\n\n04-720 \xa0 Ethical Hacking\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis course will introduce students to professional penetration testing by teaching offensive security tactics, along with the appropriate methodologies and responsibilities it takes to ethically attack systems. The course will also cover basic defensive security concepts and tools that can be used to mitigate such attacks. The majority of time will be spent in hands-on labs performing reconnaissance, discovering vulnerabilities, developing exploits, and carefully penetrating targets in a virtual environment. Students will also work on building basic defenses in a similar environment.\nPrerequisites\n18-631 Introduction to Information Security\nFaculty\nEdwin Kairu\n\n',
 '\n\n\n04-721 \xa0 Vulnerability Assessment and Testing\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis course will introduce students to professional penetration testing by teaching offensive security tactics, along with the appropriate methodologies and responsibilities it takes to ethically attack systems. The course will also cover basic defensive security concepts and tools that can be used to mitigate such attacks. The majority of time will be spent in hands-on labs performing reconnaissance, discovering vulnerabilities, developing exploits, and carefully penetrating targets in a virtual environment. Students will also work on building basic defenses in a similar environment.\nPrerequisites\nStudents will be required to have a basic understanding of networking concepts (TCP/IP) and will be expected to put in the additional time to research solutions on their own. This course will utilize the Kali Linux platform, so basic Linux command line and shell scripting knowledge will be required.\nFaculty\nEdwin Kairu\n\n',
 '\n\n\n04-730 \xa0 Augmented and Virtual Reality\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nAugmented and virtual reality systems strive to present their users with sensory experiences that feel real but are in fact either entirely computer-created (virtual reality) or add computer "augmentations" to the real world around them (augmented reality).\xa0 AR/VR systems have a long history, and many now prefer the term Mixed Reality and think in terms of a spectrum spanning reality at one end to entirely virtual experiences at the other.\n\xa0\nThe most common implementation of AR/VR systems uses headsets that the user wears, and frequently hand controllers as well.\xa0 The headsets project images into both eyes, allowing 3D perception, and the hand controllers sometimes provide tactile experiences in addition to control functions.\xa0 In this course, students will study AR/VR systems from a theoretical standpoint, as well as program headsets and hand controllers in order to gain hands-on experience.\n\xa0\nStudents will learn key computer graphics principles that lie at the core of a mixed reality system\'s ability to generate virtual imagery to create 3D perception. They will learn the need for tracking of both head and hand motions to create acceptable experiences, and how this can be achieved. They will understand, for AR systems, the issue of registration.\n\xa0\nProgramming using Unity is a core part of the course.\nLearning objectives\nStudents will learn key computer graphics principles that lie at the core of an MR system\'s ability to generate virtual imagery to create 3D perception. They will learn the need for tracking of both head and hand motions to create acceptable experiences, and how this can be achieved. They will understand, for AR systems, the issue of registration.\nOutcomes\nAfter completing this course, students will be able to do the following:\n\nRead technical literature related to MR systems\nAnalyze whether an MR solution is appropriate for problems they are working on in either industry or academia\nDevelop AR and VR software applications using Unity (or a similar platform)\nPursue deeper studies in MR research areas\n\nContent details\n\n3D coordinate systems\nHomogeneous coordinates\nWorld coordinates vs body coordinates and conversions between them\nProjection and the linear algebra that underlies it\nEquirectangular projection\nRotations\nVirtual object rendering using computer graphics technologies\nThin lens\nHuman visual system aspects relevant to 3D perception\nDevelopment of VR applications using Unity\nDevelopment of AR applications using Unity\n\nPrerequisites\nNone\nFaculty\nMichael Perkins\n\n',
 '\n\n\n04-800-AA \xa0 IT for Behavior Change Support\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nBehavior change is the altering of people’s habits over the long term. It can be used to improve health, learning, environment management, social justice, and other outcomes in society. This course introduces the theories around behavior change and how personal computing devices, data science, and artificial intelligence can be used to provide support for personal or community-level behavior change in different domains. Students will learn how to choose appropriate behavior change techniques (BCTs) based on the problem behavior being addressed and the user being targeted. They will also learn how to evaluate the effectiveness of their intervention including through randomized controlled trials (RCTs). The negative sides of persuasive technologies and the discussion of ethics in design will also be explored.\nLearning objectives\nStudents will be introduced to personal and social theories of behavior change and what they tell us about factors that influence people’s motivation and ability to change behavior. The course will also cover the concept of persuasive design and the theoretical underpinnings of its methods of tunneling, suggestion, self-monitoring, etc. Strategies such as gamification, personalized informatics, social media integration, the use of immersive technologies, and nudging will be introduced. Students will learn the theoretical basis of the techniques, how to apply them in an application, and their strengths and limitations. Case studies will be used to reinforce understanding of the best practices and challenges of the techniques. The Concept of “do no harm” will be introduced and students will learn how the misuse of persuasive design (e.g., through UX dark patterns) can lead to harmful behaviors such as addiction to technology and mental illness prompted by excessive social comparisons. Students will learn practical ways to ensure persuasion is done ethically. The course will use lectures, seminars, and group discussions as modes of instruction. Student learning will be assessed through quizzes, a paper on critical reflection on the successes and challenges of presented and self-selected case studies, a project and paper on the design of a behavior change technology to solve a global challenge, and a final exam.\nOutcomes\nAfter completing this course, students should be able to:\n\nDescribe personal theories of behavior change\nDescribe social theories of behavior change\nDescribe components of persuasive design and nudging\nKnow when and how to integrate nudging, gamification, social networks, and other techniques to drive behavior change\nIdentify, discuss, and ethically address concerns around persuasive technologies\n\nContent details\n\nThe concept of behavior change and persuasive design\nPerson-focused theories of behavior change (e.g., Fogg’s behavior model, theory of planned behavior, transtheoretical model)\nSocial theories on behavior change (e.g., social cognitive theory, social learning theory)\nBehavior change taxonomy\nPersuasive technology design and evaluation\nNudging\nGamification and serious games\nPersonal informatics\nAmbient displays\nJust-in-time adaptive interventions\nImmersive applications\nUX dark patterns\nEthical concerns of persuasion\nHow to “do no harm”\n\nPrerequisites\nAndroid Programming\nFaculty\nEdith Luhanga\n\n',
 '\n\n\n04-800-AB \xa0 Machine Learning for Earth Observation\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\n\nSatellite data needs special skills to process, visualize, and analyze. In this course, students will be introduced to different GIS data models. The course will introduce some of the advanced techniques for collecting, processing, and analyzing remote sensing data. It will also discuss some of the techniques in geospatial data fusion and introduce the concept of transfer learning in geospatial data analytics.\nStudents will apply ML techniques and other geospatial data analytics tools in practical and relevant applications such as assessing land use and land cover, change detection, crop disease detection, etc.\n\nLearning objectives\n\nIn this class, students will learn:\n\nDifferent GIS data models and their advantages and disadvantages\nTechniques for efficiently encoding, manipulating, and querying geospatial data\nHow to design, use, and implement algorithms dealing with geospatial data\nHow to use ML techniques to generate insight from satellite data in practical applications\n\n\nOutcomes\n\nAt the end of this course, students will be able to apply ML techniques to generate insight from geospatial data in a wide range of applications.\nContent details\nThe coverage of this course includes:\n\nIntroduction to GIS and satellite data\nGeometric algorithms for spatiotemporal data processing and analysis\nScalable algorithms and representations for big geospatial data\nGeospatial data fusion\nIntroduction transfer learning\nFeature Extraction Techniques\nLand Use/Cover Mapping\nChange Detection\n\nFaculty\nMoise Busogi\n\n\n',
 '\n\n\n04-800-AC \xa0 Social Network Analysis\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThere has never been a greater need for data scientists who can accurately analyze data, draw important conclusions, and effectively communicate those conclusions. This course aims to provide insights into the structural analysis of social and information networks, particularly the World Wide Web. Students should gain basic knowledge about network analysis methods and tools as well as their theoretical foundations. Students have the chance to investigate an intriguing online social network topic of their choice within the framework of a real-world data set through the Social Network Analysis class project. Students will have the option to delve further into a chosen subject and develop analytical abilities through the Final Project.\nThe course will give students the necessary tools and techniques to analyze visual and statistical data, build models, and present findings to support data-driven decisions. It will also give students the skills required for positions in academia and research institutes, as well as roles involving network analysis in entrepreneurship and commercial research.\nLearning objectives\nStarting from basic graph concepts, we will investigate basic techniques for social network analysis. We will provide the student with a rich and comprehensive catalog of social network analysis tools that can be exploited in the analysis and implementation of a specific website such as social media, eCommerce platforms, and health applications for groups and communities. Working with actual data of their choice allows students to investigate issues that are particularly interesting to them.\nOutcomes\nUpon completing this course, students will be able to:\n\nDescribe the concepts of Social Network Models and explain the challenges involved.\nPerform a social network analysis task on groups and communities (e.g., how are opinions formed? How is influence propagated?).\nAcquire hands-on experience implementing existing methods and evaluating them over real datasets such as social media website datasets.\n\nContent details\nModule 1: Introduction and basic concepts\n\nContextualization\nTerminology\nNetwork data\n\nModule 2: Characterization of large-scale social networks\n\nMetrics/Centrality Indices\nOrigins of network analysis\nClustering\nCommunity structure\n\nModule 3: Social Network Analysis and Interpretation\n\nVisual analysis\nMetrics\nSmall World, processes, and evolution\n\nModule 4: Modeling complexity social networks\n\nA typology of network visualization\nExamples, Historical sources, and networks\nWeighted Social Network\nTemporality/Link Expiration\nMultiplex structure and overlapping communities\n\nModule 5: Homophily and structural changes\n\nSNA Class Project\n\nPrerequisites\nNone\nFaculty\nCarine Pierrette Mukamakuza\n\n',
 '\n\n\n04-800-AD \xa0 Leading and Managing Technology and Innovation\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis course will provide an insider’s look at issues that scientists, engineers, and managers are likely to encounter in companies pursuing innovative technologies.The instructor, Prof. Mark Kryder, spent five years as a manager at the IBM Research Center in YorktownHeights, NY, and founded and led the Data Storage Systems Center at CMU, before spending nine years asChief Technical Officer and Senior Vice President, Research for Seagate Technology. In this course, he will try to give students an improved understanding of how to effectively lead and manage engineers and scientists carrying out research, development, and engineering on new technologies and/or products.The course is built around the instructor’s personal experiences and also draws heavily from businessmanagement literature and business case studies. It is expected that the course will make the transition fromthe university to working in a company easier and faster for students who have taken it and enable them tobecome leaders in a shorter period of time than others without this background.The course will be taught using case studies and discussion. Grading will be based on participation in class discussions, written case study analyses, and written midterm and final exams.\nLearning objectives\nThe objective of this course is to introduce the participants to many of the different considerations required to successfully build an innovative technology company. Corporate organizational structures, location and design of business facilities, means of measuring performance and rewarding engineers and scientists, the complementarily of technology and marketing in innovation, various approaches to encouraging innovation, the importance of teamwork and diversity, different types of intellectual property and the critical importance of leadership will be discussed. Students will learn about these factors through business case studies, in-class presentations, and in-class discussions.\nOutcomes\nAfter completing the course, students will be able to describe the following:\n\nDifference between sustaining and disruptive technologies and how competitive disruptive technologies often cause previously successful companies to fail\nDifferences between pure basic research, applied research, and use-inspired basic research\nDecisions that need to be made in building a facility for a new enterprise\nRelative merits of centralized, decentralized, and hybrid organizational structures for large companies\nRelative merits of functional, project, and matrix organizational structures for companies\nRelative merits of functional, lightweight, heavyweight, and autonomous team structures for bringing new products to market\nOpportunities and risks of globalization\nHow the attributes and most effective reward structures differ for persons working on new technology development, product development, and engineering of new products\nImportance of diversity to successful innovation\nThe complementary roles of technology, marketing, and business models to the success of a company\nRelative importance of compensation, work environment, work-life balance, and the company attributes to attracting and retaining employees\nWhen it is best for a company to be vertically integrated and when it is best to be horizontally stratified\nWhat can management do to encourage more creativity from its employees\nWhat is meant by corporate culture, why it is important, and how difficult it can be to change\nTechnology push, market pull, and double linking approaches to creating innovative products\nWorking with universities and in consortia to reduce costs and time-to-market for a new product\nThe importance of teamwork and how it differs from collaboration\nMetrics for measuring the performance of research and development teams\nDifferent types of intellectual property and how they are used differently in different industries\nThe importance of leadership to new technology and product development\n\nContent details\n\nDisk drive technology\nHistory of the disk drive industry\nDisruptive technology\nBasic research, applied research, and development\nCorporate organizations\nOrganizational structures for R&D\nTrends in international R&D organizations\nGlobalization\nPersonnel for R&D\nVoice of R&D workforce\nVertical integration vs. horizontal stratification\nInternal innovation vs. external (open) innovation\nConnecting technology to business outcomes\nTechnology transfer\nTeamwork\nIntellectual property\nVision, goals, and metrics\nLeadership\n\nPrerequisites\nNone\nFaculty\nMark Kryder\n\n',
 '\n\n\n04-800-AE \xa0 Software Engineering Foundations\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis course is an introduction to the software engineering approaches that have shaped the software industry and formed the prevailing standard. It is taught as a combination of lectures and a semester-long group project. The three broad objectives of engineering, teamwork, and solving realistic problems, are introduced to students from different perspectives: system, project, and users. Students develop an understanding of these topics via practical work on their projects and are also tested in quizzes, reports, and presentations. Students should be proficient in at least one modern programming language and be familiar with basic software development and programming concepts. This is NOT a programming course.\nLearning objectives\nStudents will learn to:\n\nIteratively define requirements to solve a problem\nArchitect a solution\nDesign the solution\nImplement the solution\nIntegrate the solution into an existing(?) framework\nTest the solution\nDeploy the solution\n\nStudents will work on self-organizing teams and manage the work collaboratively.\nStudents will also learn to solve a real problem subject to multiple constraints throughout the lifecycle while keeping the stakeholders involved and balancing the underlying engineering tradeoffs.\nOutcomes\nUpon completing this course, students will be able to:\n\nDefine and describe the phases of the software engineering lifecycle (requirements, design, implementation, testing, deployment, and maintenance).\nExplain processes and technology in software development.\nApply standard tools used in simple software engineering tasks.\nDesign and implement a (commercial-level?) software engineering project, as a team member.\n\nContent details\n\nSoftware development methods such as agile development\nIntroductory requirements engineering including user stories, requirements gathering, and effort estimation\nIntroductory software architecture\nIntroductory use case modeling\nSystem analysis and domain modeling\nTest-driven implementation\n\nPrerequisites\nNone\nFaculty\nAhmed Biyabani\n\n',
 '\n\n\n04-800-AF \xa0 Advanced Quantitative Financial Analytics and Algorithmic Trading\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nAlgorithmic trading serves as a practical application of software engineering and data science methodologies and quantitative analysis techniques within the context of financial markets. This course is designed to build on the principles and concepts covered in the introductory course, Quantitative Financial Analytics and Algorithmic Trading, and take students to the next level in algorithmic trading. The course will focus on more advanced concepts, such as data mining, automated strategy discovery, advanced signal analysis, signal validation, execution mechanisms, meta-strategies, advanced risk management, and machine learning in algorithmic trading.Students will work on real-world projects, using Python, and gain hands-on experience in applying these concepts to develop and implement their trading strategies while emphasizing universally applicable engineering concepts and data-driven methodologies.\nLearning objectives\nStudents will develop a strong foundation in universally applicable data engineering principles through the lens of algorithmic trading. The objective of this course is to provide students with a comprehensive understanding of the advanced concepts of quantitative financial research and algorithmic trading, and give them hands-on experience with the areas of expertise involved.Through this course, students will learn about the dangers and caveats of data mining and automated strategy discovery, and will gain an understanding of the different types of data mining used in algorithmic trading. Students will also gain an understanding of different types of optimization and signal analysis methods, and gain hands-on experience in trading strategy validation using different statistical approaches. Trading strategy execution, meta-strategies, and advanced risk management concepts will also be covered. Throughout the course, students will utilize Python programming and various libraries, emphasizing the importance of universally applicable engineering and research principles in creating, testing, and optimizing algorithmic trading strategies, while gaining hands-on experience in addressing real-world challenges.\nOutcomes\nAfter completing this course, students should be able to:\n\nUnderstand the risks associated with data mining in algorithmic trading,\nDevelop and apply their own trading strategy evaluation methods in Python,\nCreate and evaluate trading strategies using their own automated or semi-automated research platform,\nMitigate and optimize execution costs by internalizing and aggregating orders,\nUnderstand the concept of layered execution and meta-strategies,\nApply advanced risk management methods, such as turnoff mechanisms, decorrelation techniques and portfolio generation using Mean-Variance Optimization\nApply machine Learning in signal generation, validation, and execution systems\nDevelop and maintain high-quality code and documentation, adhering to best practices in unit testing, code style, exception handling, and user-friendly error handling across different engineering projects.\n\nContent details\n\nAdvanced data mining & automated strategy discovery\n\nEvidence based technical analysis in detail\n\nUniverse size and its consequences\nParameter-based searches\nRule-based searches\nGenetic optimization based searches\n\n\n\n\nAdvanced optimization\n\nAdaptive optimization\nMulti-objective optimization\nConstrained optimization\nBlack box optimization\nGrid-based optimization\nParameter sensitivity analysis\n\n\nAdvanced signal analysis\n\nMAE, MFE, Edge-related metrics\nStop losses, profit targets\nSignal value identification\nExit optimization vs. value identification\n\n\nSignal validation\n\nStatistical tests\nWalk-forward optimization\nRobustness testing, noise testing\nVariance testing\nCross-market simulations\nMonte Carlo simulations\nOther methods\n\n\nExecution mechanisms\n\nMitigating execution costs\nSpread analysis & prediction\nOrder aggregation, internalization, A & B books\n\n\nMeta-strategies\n\nExecution optimization\nLow latency operations & HFT Layering\nAdvanced turnoff mechanisms\n\n\nAdvanced risk management\n\nKelly Criterion\nAdvanced decorrelation (Pearson based)\nAdvanced portfolio generation (Mean-Variance optimization vs. Black-Litterman)\n\n\nMachine Learning in Algorithmic Trading\n\nML-based signal generation\nML-based validation systems\nML-based execution systems\n\n\n\nPrerequisites\nBackground or hands-on experience in quantitative financial research and algorithmic trading, or successful completion of 04-800-H Quantitative Financial Analytics and Algorithmic Trading, with delivering the requirements specified in a passing repository.\nFaculty\nPatrick McSharry and Ben Racz\n\n',
 '\n\n\n04-800-AG \xa0 Business Fundamentals for Engineers\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nParticipating as an executive in a successful technology business requires familiarity with several fundamental business functions:\n\nStrategic planning\nFinance (including accounting)\nProduct development and innovation\nMarketing\nOperations\nSales\nHuman resource management\n\nFurthermore, it requires understanding that all businesses operate in the context of a larger economy influenced by government regulations.The goal of this course is to give students the foundational knowledge they need to understand how technology businesses operate and the environment in which they do so. The course will include textbook readings, article readings, class discussions, and hands on exercises using various free digital tools. Although the emphasis will be on technology companies, much of what is learned will be applicable to businesses in general.\nLearning objectives\nStudents will acquire an executive perspective for thinking about technology businesses. They will:\n\nUnderstand the broader economic environment in which businesses operate, and how governmental regulation can affect the business environment\nUnderstand basic accounting principles and the key financial statements used to assess a company’s financial performance: the balance sheet, the income statement, and the cash flow statement\nKnow that strategic planning involves analyzing a business’s current situation, developing a vision for the business’s future, creating a strategy to achieve that vision, and an execution plan to operationalize the strategy\nUnderstand key marketing concepts such as product positioning, competitive analysis, branding, and pricing strategy\nKnow how to analyze the tradeoffs involved between in-house product development and outsourcing. Know the role of core competencies and how to develop and maintain them\nUnderstand the roles of sales, marketing, HR, and operations in an organization\nGrasp basic managerial principles and appreciate managerial challenges\nBe able to competently engage in wide-ranging discussions about business issues\n\nOutcomes\nAfter completing the course, students will be able to do the following:\n\nCompetently engage with employees of diverse technology businesses and understand the business issues they confront\nRead business literature, such as articles from the Harvard Business Review, and extract lessons from it that are relevant to their business\nUse Quickbooks or a similar free tool (e.g. ZipBooks or gnucash) to track a company’s financial transactions and generate financial statements\nUse a free CRM tool, such as HubSpot CRM, to manage customer contacts\nCreate the agenda for a strategy planning session and conduct such a meeting\nCreate a presentation describing a product’s market position relative to competitors\nCall on a customer and conduct a sales meeting\nApply managerial principles in common business situations\n\nContent details\nCourse content will comprise selections from the following sources (and others):\n\nOpenstax textbook: "Introduction to Business"\n"Little Red Book of Selling"\nHarvard Business Review articles\nWSJ and other current events sources\n\nMicrotopics reinforcing the above objectives and enabling the listed outcomes include:\n\nMacro and micro economics and competition in a free market\nThe importance of specialization, productivity, innovation, and trade for economic growth and business success.\nThe role of trade\nCorporations and the concept of limited liability\nOrganizational structures\nEmployee compensation, training, and managing conflict\nThe production process and operations management\nMarket segmentation, the product life cycle, buyer behavior, and pricing strategies\nAccounting principles: T-accounts, chart of accounts, financial statements\nReturn on investment, interest rates, raising capital\nSelling strategies and the role of advertising\n\nPrerequisites\nNone\nFaculty\nMichael Perkins\n\n',
 '\n\n\n04-801-A1 \xa0 Deep Learning Systems: Hardware, Compilers, and Algorithms\n Location: Africa \n           Units: 6\n           Semester Offered: Fall\n\n\n',
 "\n\nCourse description\nThis course examines the algorithms, compilers, and processor components to efficiently train and deploy deep learning (DL) models for commercial applications. The course details advancements and adoption of DL models in industry, explains the training and deployment process, describes the essential hardware architectural features needed for today’s and future models, and details advances in DL compilers to efficiently execute algorithms across various hardware targets.\nLearning objectives\nThe course's primary goal is for students to gain a solid understanding of: \n\nThe design, training, and applications of DL algorithms in industry \nThe compiler techniques to map deep learning code to hardware targets \nThe critical hardware features that accelerate DL systems\n\nContent details\n\nDL primitive functions, models, and commercial applications\nDesigning, debugging, and training a model; distributed training\nNumerical formats and model compression\nHardware (HW) architectural features: transistors, processors, physical networks\nCommercial DL HW platforms\nDL compiler techniques and existing commercial DL compilers\nUsing ML to improve DL systems\nChallenges and open areas of research\n\nOutcomes\nAt the end of this course, the students will be ready to engage engineers in industry working across the DL system stack.\xa0\nFaculty\nAndres Rodriguez\n\n",
 '\n\n\n04-800-B \xa0 Recommender Systems\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nInformation overload is a characteristic of our society today. This has made decision-making more complicated than ever before. For example, choosing which restaurant to go to for the day’s meal is further complicated by a variety of dishes on the same menu. In the entertainment industry, one has to choose whether to read a book or watch a movie and, if so, which one. Recommender systems have come in handy as far as overcoming such challenges is concerned. Recommender systems are now largely used, particularly in eCommerce websites, for easing the information search and discovery processes and increasing customer fidelity and conversion rates. They attempt to guide people into making decisions based on their preferences and personalities and by mimicking the choices of people similar to them.\nRecommendation systems are part of machine learning or artificial intelligence (AI) algorithms. Students should gain basic knowledge about the field of web recommendation systems and other main recommender systems methods and tools as well as their theoretical foundations. The students will familiarize themselves with the concept of recommender systems and the scientific underpinnings of the latter in different domains.\nStudents will also gain the necessary tools and techniques to analyze visual and statistical data, build models, and present findings to support data-driven decisions as data science engineers. Students will be involved in hands-on projects such as choosing a topic to work on and getting corresponding data and sources. For example, students can choose from recommender systems in transformer-banking products, healthcare, restaurants, fashion, books, movies, music, and more. For the final project, students will work on RecSys challenges organized by members of the ACM Conference on Recommender Systems. This experience will also give students the skills required for positions in academia and research institutes as well as roles involving network analysis in entrepreneurship and commercial research.\nLearning objectives\nStarting from basic information retrieval concepts, we will investigate basic techniques for information filtering in recommender systems. We will provide the student with a rich and comprehensive catalog of information search tools that can be exploited in the design and implementation of a specific website such as eCommerce or eGovernment applications for travel, health, or tourism.\nOutcomes\nUpon completing this course, students will be able to:\n\nUse the necessary tools and techniques to analyze visual and statistical data, build models, and present findings to support data-driven decisions\nDescribe the concepts of Recommender Systems and explain the challenges involved\nRecommend appropriate techniques when faced with a recommendation task, as they will have acquired important data science engineering skills\nObtain hands-on experience implementing existing methods and evaluating them over real datasets\n\nContent details\nModule 1: Introduction and Basic Concept in RS\n\nProblem domain\nPurpose and success criteria\nRatings vs. Implicit feedback\n\nModule 2: Paradigms of Recommender Systems\n\nCollaborative Filtering\nContent-based Filtering\nAdvanced Topics in Collaborative Filtering\nKnowledge-Based Recommendations\n\nModule 3: Social-based Recommender Systems\n\nThe basic concept of Social Network Analysis\nRecommender Systems with social regularization\nTrust-aware recommender systems\nOnline Consumer Decision Making\n\nModule 4: Group Recommender Systems\n\nIntroduction to group recommender systems\nRecommending sequences\nModeling satisfaction\nIncorporating group attributes\nExplaining group recommendations\nEvaluating group recommender systems\xa0\n\nModule 5: Other Approaches\n\nConstraint-based Recommenders\nHybrid recommendation approaches\n\nModule 6: Hands-on Sessions (Project)\n\nDesigning Real-World Recommender Systems\nBuilding a Recommender System\xa0\n\nModule 7: Deep Learning for Recommender Systems\n\nThe basic concept of Deep Learning\nThe deep learning era of RecSys\nMatrix factorization as embedding learning\nLearning item embeddings\nWord2Vec, Paragraph2vec, doc2vec and Prod2Vec models\nDeep collaborative filtering and CF with Neural Networks\nAutoencoders for recommendation\n\nPrerequisites\xa0\nNone\nFaculty\nCarine Pierrette Mukamakuza\n\n',
 '\n\n\n04-800-C \xa0 User Experience and User Interface Engineering\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse discipline\nMSIT\nCourse description\nThere are over 1 billion websites and 3 million mobile apps in the world. How can you design a website or application that can compete to attract users and gain their loyalty when the average app loses 77% of users 3 days after being installed? This course provides a practical introduction on what constitutes good and bad user experiences and how to use design (interfaces, interactions, content) to provide engaging experiences. Students will learn about the human decision-making process, standards, and guidelines on interface and user experience design, user research methods, and techniques for prototyping and evaluating interface designs and user experiences. The course will be taught through lectures, design labs, and group discussions on scientific papers, case studies, and industry reports. Students will also undertake a group project that involves user research and iterative software development and user testing.\nLearning objectives\nStudents will be introduced to the field of user experience and user interface design. They will learn about how people make decisions and how the layout of an application or website can influence the actions that people take and how choices such as interruption through notifications and personalization can alter the overall experience with an application. Papers on in-the-wild deployments of various applications will be read individually and discussed in class to shed light on how people perceive different design choices (e.g., incorporating game elements in serious apps) and to debate the usefulness of these choices. Students will also learn about developing an application vision or goal after conducting research on the users’ values and current practices to identify gaps/needs. The ethical considerations in undertaking such human-centered research will be covered. Students will then practice how to use storyboards, personas, and use case descriptions to design an application that meets this vision and how to apply various prototyping techniques such as paper drawings, wizard-of-oz, and programmed applications to assess the design choices made through the group project, which requires user experiments. Heuristic methods (form-based) of user interface design will also be introduced and students will practice these skills in class by analyzing existing websites or applications. User interface design is evolving with techniques such as artificial intelligence being used both to propose new designs and to personalize interfaces based on the user’s context. There is growing interest and research in augmented and virtual reality, speech-based interfaces, and transmitting the sense of touch (haptics). These emerging research areas and their use cases will be covered through paper readings and a write-up of a mini literature review.\nOutcomes\nAfter completing this course, students should be able to:\n\nDescribe the psychological influences behind human decisions and behaviors\nExplain the different components of the User Experience Honeycomb\nDesign and conduct qualitative and quantitative user research studies to identify user needs\nDevelop and use low to high-fidelity prototypes as part of the product design process\nApply empirical and heuristic techniques for user interface and user experience analysis and evaluation\nDescribe the evolution of user interfaces and HCI research from past to present and emerging interfaces and interactions paradigms (e.g., interfaces that convey the sense of touch (haptic) and speech-based interfaces)\nCritically review literature to identify knowledge gaps and write a concept note for proposed future research\n\nContent details\n\nIntroduction to human decision-making process and user experience (UX) and user interface (UI) engineering\nEvolution of user interfaces and interaction paradigms\nConducting user research for requirements gathering\nDeveloping an application concept: storyboards, personas, use cases\nPrototyping techniques and tools\nUser evaluation of interface design\nUser experience evaluation (laboratory and in the wild)\nHeuristic methods of interface evaluation\nStandards and guidelines for UI/UX design\n\nFaculty\nEdith Luhanga\n\n',
 '\n\n\n04-800-E \xa0 Foundations of Entrepreneurship\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nEntrepreneurship in a broad sense consists of developing a product or service for a paying market, accepting risk in order to profit. This often includes the intention to scale (whether as its own business, licensed to an existing business, etc.). This course gives an introduction to the practice of entrepreneurship and focuses on its earliest stages: identifying opportunities and needs, researching and quantifying markets, and developing a marketable and scalable solution. Important in this process is testing and showing which customers will pay for the solution and what revenue models will fit the customers and the business. The course will help students develop a value-creation and business mindset, while its lessons may also be useful for developing non-profits and other entities/groups.\nLearning objectives\nStudents will learn and practice entrepreneurial ways of thinking and identifying needs in a market of interest. They will learn how to look critically at existing companies and their business models, perform customer discovery, evaluate customer needs, and construct a lean model canvas for developing a product/service concept into a profitable business. Students will be introduced to introductory topics in accounting, unit economics, and financing/investment options for early-stage businesses. Students will learn how to pitch a startup concept and construct an initial pitch deck to engage potential customers and investors.\nOutcomes\nBy the end of this course, students should be able to:\n\nPerform market research based on a selected customer category\nIdentify B2B and B2C business models being used by established companies\nComplete customer discovery surveys and interviews to gauge customer needs, interests, and willingness to pay for different solutions\nApply lean startup methodology in developing a business concept, including the pursuit of a minimum viable product that demonstrates product/market fit\nPut together a lean canvas model for a product, service, or business concept\nIdentify and set up the three primary financial statements: profit and loss (or income) statement, balance sheet, and cash flow statement\n\nContent details\nBasic microeconomic and accounting concepts will also be covered for use in early-stage businesses. This course focuses on revenue-driven business models.\nPre-requisites\xa0\nNone\nFaculty\nJesse Thornburg\n\n',
 '\n\n\n04-800-F \xa0 Educational Technology Design\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 "\n\nCourse description\nThis course focuses on education technology design while applying learning science and learning engineering. It covers e-learning platform design with a focus on the personalization of online learning, collaboration, and gamification. The learning materials’ design follows instructional design principles by focusing on multimedia principles, universal design for learning principles, and others. This provides an opportunity to use a data-driven approach for iterative improvement of learning outcomes. Furthermore, this course will provide the application of various emerging technologies into teaching and learning such as blockchain, digital twin, and others. During this course, students will have the opportunity to interact and practice with:\n\nRwandaEquip, a national program that is implementing data-driven teaching and learning in Rwandan Primary schools\nKinagames, a company that implements virtual science laboratories and learning digital games for Rwandan secondary schools\nCreativity lab that implements coding and robotics programs in Rwandan secondary schools and others\n\nThis course is a mixture of theoretical knowledge and hands-on skills in educational technology for teaching and learning processes.\nLearning objectives\nThis course aims at providing a systematic way of using technology to create and use tools for teaching and learning to improve learning outcomes. It will build the students' capacity to design desirable and personalized e-learning as well as teaching and learning digital materials without leaving behind e-assessments. It will provide knowledge and skills to students so that they can follow an Educational Technology career with the right skills.\nOutcomes\nUpon completing this course, students will be able to:\n\nUnderstand e-learning design principles\nDesign a desirable and contextualized e-learning\nApply multimedia principles in designing digital learning materials\nDesign online collaborative tools\nApply universal design for learning principles to design digital learning materials\nApply emerging technology to education\nUse data-driven knowledge for tracing to improve learning outcomes\n\nContent details\nUnit 1: Learning fundamentals\n\nLearning engineering\nUncovering implicit knowledge with cognitive task analysis\n\nUnit 2: UNESCO ICT Competency Framework for Teachers (CFT)\n\nGeneral ICT-CFT\nContextualized ICT CFT\nA talk from the expert of ICT CFT in African Context\n\nUnit 3: E-learning\n\nE-learning design\nInstructional technology\nGamification\nMultimedia principles\nPractical exercise on open source e-learning customization such as Moodle, ATutor, Open Learning Initiative-OLI, etc.\n\nUnit 4: Learning design principles\n\nUniversal design for learning principles\nInclusive digital learning\nEvidence backward design\n\nUnit 5: Culture and Epistemology\n\nContextualizing the continent/countries into the educational technology\nAdapt the e-learning and instructional materials to the context\n\nUnit 6: Virtual collaboration\n\nDesigning collaborative tools\nVirtual collaboration\n\nUnit 7: Foster enriching active learning\n\nUX design for effective learning\nSegmenting and Pretraining Principles\nPersonalized online learning\n\nUnit 8: Edutainment for learning\n\nDesigning learning games using an open-source tool\nCartoon digital content design\nIndustrial experiment with Rwanda Basic Education Board Edutainment Studio and Laboratory\n\nUnit 9: Virtual learning content\n\nVirtual learning laboratories\nSimulation\nDigital twin technology\nDesigning of virtual laboratories using simulation, virtual reality, as well as digital twin technology\nIndustrial experiment with Kinagames\n\nUnit 10: Blockchain application in education\n\nDesign a prototype blockchain technology (e.g., students’ records access, educational material access, etc.)\n\nUnit 11: Robotics in learning science courses\n\nDesigning a robot prototype for a science subject learning (e.g., Kinetic Energy demonstration)\nIndustrial experiment with Creativity lab\n\nUnit 12: Data-driven knowledge tracing to improve learning outcomes\n\nAI in education\nIntelligent Tutor Development for Non-programmers\nIndustrial experiment with RwandaEquip\n\nPrerequisites\xa0\nNone\nFaculty\nChristine Niyizamwiyitira\n\n",
 '\n\n\n04-800-G \xa0 Humanoid Robotics and Cognition\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis course explores the physical and cognitive dimensions of humanoid robots, robots that seek to mimic humans both in terms of their form and function. The course will introduce students to artificial intelligence (AI) and Machine Learning (ML) algorithms that enable robots to mimic human actions and behavior. The course will focus on the cognitive dimension of humanoid robotics which includes algorithms pertaining to scene/context understanding, human emotion recognition and understanding, humanoid behavior generation, and out-of-distribution-learning, to name a few. Enabling technologies such as meta-humans/meta-environments will be studied in order to understand the role of AI-driven physics simulations in accelerating the learning rate of humanoid robots.\xa0\n\xa0\nThe course will explore the technical, ethical, and philosophical dimensions of what it means for a robot to mimic human form and function and how these capabilities may shape future human-machine co-creation and interactions. This is a primarily project-based course where students will work in teams to explore the critical dimensions of humanoid robots.\nLearning objectives\nHumanoid\n\nMotivation for embodying the human form for robotics\nImitating human behavioral characteristics (gait, facial expressions, etc.)\nIntelligence transcending embodiment (e.g., virtual reality for controlling virtual humanoids)\n\nCognition\n\nLearning without an explicit ground truth/class variable\nMaking causal inferences/hypotheses generation and testing\nLearn how to evaluate the quality of AI models and the level of bias\n\nPrerequisites\xa0\nNone, although students are expected to have completed a first-level graduate course in Machine Learning and to be able to program in Python.\nFaculty\nConrad Tucker\n\n',
 '\n\n\n04-800-H \xa0 Quantitative Financial Analytics and Algorithmic Trading\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nAlgorithmic trading serves as a practical application of software engineering and data science methodologies and quantitative analysis techniques within the context of financial markets. This project-based course offers an introduction to algorithmic trading and the principles behind it, while emphasizing universally applicable engineering concepts and data-driven methodologies.\nStudents will gain an understanding of the fundamentals of financial markets and trading systems, learn how to manage data, generate signals, backtest strategies, and use APIs to execute trades. Additionally, they will apply risk management principles, position sizing, and software development best practices such as unit testing in Python. Most importantly, the course will teach students specific thinking patterns and data science methodologies that can be applied across various engineering and data analysis fields. Students will be equipped with a toolbox needed to continue researching trading strategies, predictive analytics, or other data science-related topics independently.\nFollowing condensed lecture videos, the course will emulate a professional environment through a series of individual assignments culminating in a functional project. Delivery of the project will be guided by direct instruction, Q&A calls, and an online chat group with the lecturers, similar to a real workplace. Students will deliver a functional project in Python, according to a specification, while also taking exams on the theoretical materials covered in the lectures.\nStudent progress is assessed through the delivery of practical projects according to a specification and evaluation criteria. While there are no prerequisites for this course, an understanding of statistics, probabilities, hypothesis testing, measures of spread, confidence intervals, and related topics is assumed.\nLearning objectives\nStudents will develop a strong foundation in universally applicable data engineering principles through the lens of algorithmic trading. They will gain insights into the nature of algorithmic trading in financial markets, various types of orders, and instruments while emphasizing the engineering and research principles that underpin the development of robust trading systems. Students will learn to apply these principles when creating signal processing systems, managing data, and performing hypothesis testing.\nAdditionally, they will acquire the skills to design execution infrastructure using API libraries, learn about risk management techniques, and adhere to best practices in software development to deliver high-quality code. Throughout the course, students will utilize Python programming and various libraries, emphasizing the importance of universally applicable engineering and research principles in creating, testing, and optimizing algorithmic trading strategies, while gaining hands-on experience in addressing real-world challenges.\nOutcomes\nBy the end of this course, students will be able to:\n\nUnderstand the fundamental concepts of financial markets and trading systems, which can be applied to various fields of engineering and data analysis.\nAnalyze and select appropriate data sources for various engineering and research applications, considering optimization, data mining, and model robustness.\nDevelop and evaluate data-driven strategies and signals, applying a range of data types and indicators across different engineering and research disciplines.\nDesign and implement a research infrastructure for data analysis, focusing on data management, validation, hypothesis testing, and handling specifics of different data sources.\nUtilize various APIs and libraries to develop execution infrastructure for data-driven applications, including the execution management of algorithmic trading strategies.\nUnderstand the principles of risk management and decision-making in various engineering applications, including exposure management and decorrelation techniques in algorithmic trading.\nDevelop and maintain high-quality code and documentation, adhering to best practices in unit testing, code style, exception handling, and user-friendly error handling across different engineering projects.\nAdopt a systematic approach to data analysis by focusing on specific metrics generated by tests on various data slices, improving the stability of performance and predictive capacity across multiple applications.\nDevelop and apply professional validation procedures to minimize overfitting, emphasizing a systematic approach rather than solely focusing on signal analysis and hypothesis testing.\n\nContent details\nThe delivery of the course will happen in 4 phases:\n\nPhase I: Introductory lectures (10%),\xa0\nPhase II: Research Infrastructure phase (60%),\nPhase III: Research phase (20%),\nPhase IV: Execution phase (10%).\n\n\xa0\nIn Phase I, short, condensed lectures will be delivered, clarifying main concepts. The topics covered in Phase I will be the following:\nIntroduction to Algorithmic Trading\n\nOverview of financial markets and how trading systems generate profits\nTypes of orders, bid and ask spread, long and short positions\nTrading entries and exits, trading costs, liquidity and volatility\nThe order book and the matching engine, market microstructure\nOverview of different instrument types\nPrinciples of evidence-based technical analysis\n\nChoosing Instruments and Periods without Directional Bias\n\nOptimization spaces, data mining\nRobustness versus specificity, overfitting and underfitting\nModel fitness expectancy\n\nSignal Generation\n\nCapturing alpha and testing trading ideas from academic papers, books, and magazines\nTypes of signals and strategies (mean reverting, momentum, breakouts, delta neutral, etc.)\nCharacteristics of signals (stability, hold time, capacity, etc.)\nTechnical indicators, data types (fundamentals, economic data, price data, alternative data)\n\nResearch Infrastructure\n\nData Management\nTime series databases, tick data, OHLC, volume, resampling\nGaps in data, time zones, sessions\nSpecifics of different instruments (stock splits, fragmented FX, biases of indices, contract expiry for futures…)\nBacktesting\nAssumptions (buys on the ask, sells on the bid, OHLC vs. tick, capacity, latency, costs, etc.)\n\nExecution Infrastructure\n\nAPI-s (FIX & Others)\nBasic Python execution using FIX API libraries\nPaper trading\nOrder Routing & Execution Management\nReporting\n\nRisk Management\n\nPosition Sizing\nSeparating alpha from sizing\nMartingale (avoid), fixed fractional, compounding, others\nTurnoff Mechanisms\nExposure management\nDecorrelation and portfolio dynamics (MPT)\n\nDelivering Excellence\n\nUnit tests,\xa0\nPEP8, PEP20\nException handling\nUser-friendly error handling\nComments, docstrings, documentation\n\nIn the project implementation phases support and oversight will be given to students in Q&A sessions.\nPre-requisites\nNone\nFaculty\nMartin Saint,\xa0Patrick McSharry, and Ben Racz\n\n',
 '\n\n\n04-800-I \xa0 Introduction to Systems Software Engineering\n Location: Africa \n           Units: 12\n           Semester Offered: Intermittent\n\n\n',
 '\n\nCourse description\nSystem software is software that provides a platform for other software. Examples include operating systems, language environments like a Python interpreter, game engines, and most of the servers that power the Internet.\xa0 A deep understanding of system software is of high value for students interested in careers in software development, cloud programming, embedded devices, or robotics.\xa0\n\xa0\nIn addition to its commercial importance, system software also provides an ideal vehicle to develop mastery of many key concepts in computer science, such as data structures, memory management, and parsing theory. As a result, this course provides an ideal foundation for further study of professional software development of all kinds.\n\xa0\nThe course will maintain a strong hands-on focus with roughly biweekly individual programming assignments. Student progress is assessed by performance on the assignments and classroom participation. The course will be taught using the C language, but no prior experience with C is needed.\xa0\nLearning objectives\nStudents will learn how to decompose a problem into its constituent parts and develop a ground-up software implementation with appropriate encapsulation. Students will also learn strategies for testing and debugging.\xa0\n\xa0\nThe course will introduce students to the C language, beginning with language basics and array manipulation, and moving to an understanding of pointers, data structures, and dynamically allocated memory.\xa0\n\xa0\nInterspersed with these concepts will be lessons on common operating system concepts, including kernel and user space, filesystems, I/O redirection, shells and basic shell scripting, regular expressions, and simple lexical analysis. By the completion of the course, students will implement a simple command line shell for Linux.\nOutcomes\nUpon completing this course, students will be able to:\n\nDecompose problems into a sequence of steps, implement those algorithms in C with appropriate encapsulation, and ensure the correctness of their implementation through the development of appropriate testing\nExplain key operating concepts, including kernel space and user space, users and permissions, processes and threads, and I/O redirection\nDesign and implement an appropriate data representation for a given problem.\nDevelop system programs in C, including mastery of concepts such as dynamically allocated data structures, lexing and parsing, and fork/exec and input redirection\nExplain in detail how an operating system shell (or any other interpreter) is implemented\n\nContent details\n\nIntro to C programming\nApproaches to problem decomposition\nHow to find an appropriate level of abstraction in implementing software and how to work at different levels of abstraction\nData structures: structs, arrays, linked lists\nObject encapsulation\nEffective testing and debugging\nOverview of operating systems\nI/O redirection and the “file” abstraction\nUse of dynamic memory allocation\nLexical analysis and parsing\n\nPrerequisites\n\xa0None\nFaculty\nHowdy Pierce\n\n',
 '\n\n\n04-800-J \xa0 Cloud Infrastructure and Computing\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis course covers the fundamentals of cloud computing, including servers, storage, databases, networking, software, analytics, and intelligence accessed over the internet. The course will cover the main cloud computing models, including Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS). You will also learn about the different deployment models, such as public, private, and hybrid clouds.The course provides hands-on experience using cloud computing platforms such as Amazon Web Services (AWS), Microsoft Azure, and Google Cloud Platform (GCP). You will learn how to deploy, manage, and scale cloud-based applications, as well as how to secure your cloud infrastructure. Other topics include cloud storage, virtualization, containerization, and serverless computing.\nLearning objectives\nThe objective of this course is to give students an overview of the field of Cloud Computing, its underlying enabling technology, and interact with cloud computing to gain hands-on skills through projects. Specifically, the course has the following objectives:\nStudents will learn:\n\nthe fundamental ideas behind Cloud Computing, the evolution of the paradigm, its applicability, benefits, as well as current and future challenges.\nthe basic ideas and principles in data center design; cloud management techniques and cloud software deployment considerations.\ndifferent CPU, memory and I/O virtualization techniques that serve in offering software, computation and storage services on the cloud; Software Defined Networks (SDN) and Software Defined Storage (SDS); Cloud Orchestration with Openstack testbed.\nCloud storage technologies and relevant distributed file systems, NoSQL databases and object storage\n\nOutcomes\nAfter completing this course, students will be able to do the following:\n\nExplain the core concepts of the cloud computing paradigm: how and why this paradigm shift came about, the characteristics, advantages and challenges brought about by the various models and services in cloud computing.\nUnderstand and apply Virtualization (hypervisors for bare metal, and hosted, container)\nDeploy and use application on Cloud computing models, IaaS, PaaS, SaaS\nDiscuss system, network and storage virtualization and outline their role in enabling the cloud computing system model.\nProgramming models for the cloud computing\nUnderstand consistency Availability and Partition Tolerance (CAP) theorem\nApply distributed application in the cloud computing\nCalculation of Power usage effectiveness (PUE) to determine the energy efficiency of a data center\nUnderstand the cloud compliance, the Service Level Agreement (SLA), Service Level Objective (SLO), Service Level Indicator (SLI)\n\nContent details\nIntroduction\n\nDefinition and evolution of Cloud Computing\nEnabling Technologies, Service and Deployment Models Popular Cloud Stacks and Use Cases\nBenefits, Risks, and Challenges of Cloud Computing\n\n\xa0\nVirtualization\n\nVirtualization (CPU, Memory, I/O),software & storage defined network\nHosted hypervisor\nBare metal hypervisor\nDocker\xa0\n\n\xa0\nCloud Infrastructure\n\nHistorical Perspective of Data Centers\nExplain the fundamental principles and methods for autonomic computing system\nHow is a data center operated in a self-managed\xa0\nApply fundamental principles and methods of autonomic computing to management of data centers and cloud services.\nAnalyze the impact of autonomic systems on system lifecycle management\xa0\nDesign and implement algorithms for autonomic management of data center resources\nOrchestration of Cloud, OpenStack testBed\n\n\xa0\nCloud Storage\n\nIntroduction to Storage Systems Cloud Storage Concepts\nCloud programming models\nDistributed File Systems\xa0\nDistributed Databases\nPower efficiency\nPower efficient computing\nHeat management\nHow much power is used for running a server\nMeasure Web server power-performance tradeoff\nOptimize (self-manage) power-performance\nUse autonomic management method(s)\n\n\xa0\nCompliance and security\xa0\n\nService level SLA, SLO, SLI\nCloud security\n\nPre-requisites\n04-641 Fundamentals of Telecommunications and Computer Networks (may be taken concurrently); or similar class.\nFaculty\nEmmanuel Ndashimye and Christine Niyizamwiyitira\n\n',
 '\n\n\n04-800-K \xa0 AIOps: Continuous and Automated IT and AI Monitoring\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis course builds on and integrates S/W engineering, AI/ML, and IT skills in support of automated methods for assuring the highest level of system availability and resilience.\xa0 Students will apply tools including Docker, Kubernetes, and AI-based models for anomaly detection to monitor and correct hybrid cloud applications as they experience simulated disruptions and outages.\xa0 Lab exercises will deploy such monitoring tools in continuous integration/delivery pipelines for proactive control as opposed to traditional reactive and manual incident response.\nThe course will focus on automated monitoring of both IT components (e.g. code-based implementations of a distributed application) and AI/ML components (e.g., models and their associated pre- and post-deployment pipelines).\nThe course will review basic concepts of DevOps including Docker, CI/CD pipelines, and the microservices architectures used in hybrid cloud deployments. This background provides preparation for deep dives into real-time operational data gathering and the automated tools available for anomaly detection, reporting, and even self-correction.\nFor IT monitoring, multiple types of performance data will be used in automated monitoring including structured metrics such as CPU, memory, and network utilization as well as emerging methods for analyzing unstructured content such as textual information in application logs.\nFor AI monitoring, extensions of DevIOps methods for AI will introduce ModelOps and its application to multiple types of quality metrics for automated model monitoring.\xa0 Model accuracy, precision, recall, and bias will be evaluated for initial deployment and tracked for post-deployment drift over time leading to predicted violation of quality standards.\nHands-on lab work will include tools for configuring and executing pipelines for continuous integration and delivery, deploying applications as microservices with embedded monitoring instrumentation, dashboards for collecting performance data, and multiple methods for real-time tracking of such data with automated anomaly detection and repair.\nThe course consists of weekly hands-on assignments as well as a final project to integrate the project methods covered in the class.\nLearning objectives\nIn this course, we will:\n\nDiscuss the new role of Site Reliability Engineer (SRE) and the motivation for its introduction.\nHave students understand and use CI/CD tools to configure and run pipelines for a sample project.\nDeploy applications into a microservices orchestration platform based on the de-facto standard Kubernetes runtime.\nUnderstand the methods available for collecting real-time performance data for services and models.\nAcquire techniques for identifying deviations in performance of both IT and AI/ML-based components.\n\nOutcomes\nBy the end of this course, you will be better able to:\n\nUnderstand the need for automated methods in maintaining a high level of service availability\nConfigure and deploy CI/CD pipelines\xa0\nDeploy and manage containerized components and models in a microservices runtime\nInstrument components and models for real-time data collection for analysis and visualization\nApply AI methods for IT component anomaly detection\nApply AI methods for AI model drift detection\n\nContent details\nThe class is taught through weekly lectures and assignments according to this general schedule:\n\nMonth 1: Background and practice with CI/CD, Docker, and Kubernetes\nMonth 2: Automated methods for IT data collection and anomaly detection\nMonth 3: Extensions of DevOps for ModelOps: model metric data collection and automated drift analysis\n\nGrading is based on written assignments, a final portfolio of work, participation, and attendance\nPrerequisites\nStrong background in Python programming and exposure to DevOps and Cloud platforms such as Docker and microservices.\nFaculty\nCharles Wiecha\n\n',
 '\n\n\n04-801-M3 \xa0 Cloud Networking\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis course aims to give an advanced understanding of the concept of communication of various networked devices in a cloud computing environment. Through simulations, students will understand cloud networking principles and the challenges to make an operational virtual network.\nLearning objectives\nStudents will learn cloud networking principles through lectures and simulated projects. Students will complete weekly labs that require them to implement a specific virtual network configuration. Students will get familiar with virtual networking components through intensive lab work and projects.\nOutcomes\nAfter completing this course, students will be able to:\xa0\n\nDesign a Software Defined Network (SDN)\nOptimize the Network Function Virtualization (NFV)\nOverlay networks\xa0\nCreate and deploy dockers and kubernetes\n\nContent details\n\nSDN and Cloud\nOverlay Network\nRouting Overlay Network\nResilient Overlay Networks\nNetwork Function Virtualization\nDockers\nKubernetes\n\nPrerequisites\n18-859-R Networking Lab\xa0or 04-641 Fundamentals of Telecommunications and Computer Networks (may be taken concurrently)\nFaculty\nEmmanuel Ndashimye\n\n',
 '\n\n\n04-801-N1 \xa0 Electronic Business and Technology\n Location: Africa \n           Units: 6\n           Semester Offered: Intermittent\n\n\n',
 '\n\nCourse description\nThe coursework includes in-class discussions and a final course project: constructing and implementing a small online shop for a digital platform business model. Students will group in teams of 2-3 students. It is essential to begin work on the course project at the start of the course. The students will be divided into teams of 3. Every team is required to build a small online shop for certain products or services of their choice and present their group work during the last meeting of the class.\nStudents will be provided access to a certain widely used online shop tool (e.g., WordPress/WooCommerce). Each team has to make a proposal for an online shop, which will be discussed in class. Then each team shall construct a prototype using the provided online shop tool. Aside from the technical realization, business aspects such as product categories, SEO-optimized descriptions, and pictures are to be covered. The project and prototype will be presented in the last meeting.\nPlatform business models are widely covered in the news and in scientific articles as well. They can be found in various industries and variations, some of the most successful companies in the world make extensive use of a platform business model (e.g., Uber (USA), Meta (USA), Byte dance (PRC), Vuba Vuba (RW)). Different kinds of platforms can be found, among them aggregation platforms, social platforms, mobilization platforms, and learning platforms (Hagel 2015). Platform businesses refer to a business model (not a technology infrastructure) that focuses on helping to facilitate interactions across many participants. Typically, the role of the platform business is to provide a governance structure and a set of standards and protocols that facilitate interactions at scale so that network effects can be unleashed. Students work on a platform business model and realize a platform prototype.\nLearning objectives\n\nA structured way of thinking is essential as the students have to analyze an enterprise use case and develop a platform business model and a prototype solution.\nStudents will be able to identify, formulate, and solve complex engineering problems by applying principles of engineering.\nAs the prototype, which will be developed by the students in this course, is a real-world company example, students will be able to apply engineering design to produce solutions that meet specified needs with consideration of cultural and economic factors.\nStudents will be able to communicate effectively with a range of audiences as there will be extensive in-class discussions in this course.\nAs students will work in teams of 2-3, they will be able to function effectively on a team whose members together provide leadership, create a collaborative and inclusive environment, establish goals, plan tasks, and meet objectives.\nDuring this course, students will develop a prototype, which will improve their ability to develop and conduct appropriate experimentation, analyze and interpret data, and use engineering judgment to draw conclusions. As students will improve their knowledge of platform business models and their realization with standard tools, they will be able to acquire and apply new knowledge as needed, using appropriate learning strategies.\n\nOutcomes\nAfter completing this course, students will be able to:\n\nExplain the importance of platform business models and their use in enterprises.\nDescribe the advantages and disadvantages of platform business models used in enterprises.\nAssess the business value of the platform business models use.\nDevelop a prototype using web-based software (e.g., WordPress/WooCommerce) for use in an enterprise use case.\nPresent and discuss their results with students in class and faculty.\n\nContent details\n\nOverview of platform business models\nFeatures of platform business models and corresponding software tools\nAdvantages and disadvantages of platform business models\nUse cases for the application of platform business models in enterprises\nDevelopment of a platform business model and prototype using a web-based software\nPresentation and discussion of the results\n\nPrerequisites\nNone\nFaculty\nBernhard Ostheimer\n\n',
 '\n\n\n04-801-O3 \xa0 No/low-code For Electronic Business\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThe coursework includes in-class discussions and a final course project: constructing and implementing a prototype of a no-code/low-code tool for a specific use case in a company. Students will group in teams of 2-3 students. It is essential to begin work on the course project at the start of the course. The students will be divided into teams of 2-3. Every team is required to build a prototype using a no-code/low-code platform for a certain enterprise use case and present their group work during the last meeting of the class.Students will be provided access to a certain widely used no-code/low-code tool (e.g., Tulip). Each team has to make a proposal, which will be discussed in class. Then each team shall construct a prototype using the provided no-code/low-code tool. Aside from the technical realization, business aspects such as business process considerations, process documentation, and others are to be covered. The project and prototype will be presented in the last meeting. No-code/low-code tools enable companies to rapidly build portals, reuse interfaces, and tailor functionality to specific experiences for internal and external users. No-code/low-code platforms provide employees the ability to build applications with an intuitive and easy-to-use design interface. This enables employees to build apps without any extensive programming knowledge (sometimes referred to as “democratize application development”). “Low-code” refers to a modular software development approach that picks and connects blocks of code to build an application. Low-code development platforms are the ones that demand a level of coding but make it extremely easy for the low-code and no-code app builders to develop new apps in the least turnaround time. “No-code” development extends the low-code approach in a way that requires essentially no coding knowledge(usage of drag-and-drop). Applications are assembled with the help of functional, reusable building blocks. Gartner (2019) estimates that low-code app platforms would account for over 65% of development by 2024. Typical advantages of the use of no-code/low-code tools are rapid application development, cost-effectiveness, and enabling new revenue streams and business models. During the course, guidance will be given by the instructor (Prof. Dr. Bernhard Ostheimer, CMU-Africa) and an industry partner as well. Part of the course will be delivered in person at CMU-Africa, and part of the course will be delivered via Zoom.\nLearning objectives\nA structured way of thinking is essential as the students have to analyze an enterprise use case and develop a no-code/low-code-based solution. Students will gain the ability to identify, formulate, and solve complex engineering problems by applying principles of engineering. The prototype, which will be developed by the students in this course, is a real-world company example, students will gain an ability to apply engineering design to produce solutions that meet specified needs with consideration of cultural and economic factors. Students will gain an ability to communicate effectively with a range of audiences as there will be the integration of an industry partner in this course. As students will work in teams of 2-3, they will gain the ability to function effectively on a team whose members together provide leadership, create a collaborative and inclusive environment, establish goals, plan tasks, and meet objectives. During this course, students will develop a prototype, which will improve their ability to develop and conduct appropriate experimentation, analyze and interpret data, and use engineering judgment to draw conclusions. As students will improve their knowledge on no-code/low-code platforms, they will be able to acquire and apply new knowledge as needed, using appropriate learning strategies.\nOutcomes\nAfter completing this course, students will be able to do the following:\n\nExplain the importance of no-code/low-code platform use in enterprises\nDescribe the advantages and disadvantages of no-code/low-code platforms in enterprises\nAssess the business value of the no-code/low-code platform use\nAnalyze business processes concerning their suitability for the use of no-code/low-code tools\nDevelop a prototype using a no-code/low-code platform for use in an enterprise use case\nPresent and discuss their results with students in class, faculty, and industry partners\n\nContent details\n\nOverview of no-code/low-code platforms\nFeatures of no-code/low-code platforms\nAdvantages and disadvantages of no-code/low-code platforms\nUse cases for the application of no-code/low-code tools in enterprises\nAnalyzing a business process for the development of a no-code/low-code prototype\nDevelopment of a no-code/low-code prototype\nPresentation and discussion of the results\n\nPrerequisites\nNone\nFaculty\nBernhard Ostheimer\n\n',
 '\n\n\n04-801-O4 \xa0 Model-driven Software Engineering\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse discipline\nSoftware engineering\nCourse description\nModel-driven Software Engineering (MDSE) practices have proved to increase efficiency and effectiveness in software development. The aim of this course is to introduce the students to the MDSE world, thus allowing them to understand and apply its basic principles and techniques. The course is organized into two main parts. The first part discusses the foundations of MDSE in terms of basic concepts. The second part covers the technical aspects of MDSE: how to build a domain-specific modeling language, the description of Model-to-Text and Model-to-Model transformations, and the tools that support the management of MDSE projects.\nLearning objectives\n\nTo learn the basic principles and techniques of Model-Driven Software Engineering\nTo put them at work on widely available Eclipse-based tools\n\nContent details\nPART 1:\xa0Foundations of MDSE\n\nIntroduction to MDSE\nUML usage (recap)\nSysML\nOCL\nMDSE Principles\nFeatures of Modeling Languages\nMDSE Use Cases\nModel-driven Architecture (MDA)\nIntegration of MDSE in the software development process \n\nPART 2:\xa0Technical aspects of MDSE\n\nHow to develop a modeling language\nAgile development\nModel-to-model transformations (ATL)\nModel-to-text transformations, code generation\nManaging models\n\n\xa0Prerequisites\n\nKnowledge of object orientation \nBasic knowledge of IDEs\nBasic knowledge of UML\nProgramming capabilities in object-oriented languages\n\nFaculty\nEric Umuhoza\n\n',
 '\n\n\n04-801-R3 \xa0 Special Topics in ICT: Secure Coding Practice\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse discipline\nMSIT\nCourse type\nMini\nCourse concentration\nSoftware Engineering/Software Development/Cybersecurity\nCourse description\nSoftware systems are ubiquitous in the modern environment, and it is important that the systems are safe, reliable, and secure. The course recognizes that many security problems are indeed software bugs and will seek to develop the practical skills to minimize such bugs.To this end, the course will cover fundamentals, principles, and the practice of secure coding. The course covers both theory and practice but puts more weight on practice. Carefully selected practical examples, practical exercises, mini-projects, and case studies will be used to reinforce the learning and to present students with an opportunity to acquire secure coding knowledge and high-level practical skills.\nLearning objectives\nThe goal of this course is to enable learners to develop safe, reliable, and secure software systems by incorporating secure coding practices in the software lifecycle.\nOutcomes\nAt the end of the course, the students should be able to:\n\nDescribe the challenges and threats to building secure software systems.\nAnalyze and select appropriate strategies that can be applied to develop secure software systems.\nApply their knowledge of secure coding to create software systems that are safe, reliable, and secure as measured by objective criteria.\nApply static and dynamic code analysis tools to discover coding flaws and vulnerabilities.\n\nContent details\n\nCommon software security vulnerabilities, threats, and attack surfaces\nAnti-patterns in software security\nSecure coding principles and practice\nSecure coding standards and conventions\nStrategies for secure coding:\n\nuse of patterns and frameworks in software design and architecture\ndefensive programming\ninput validation\ndata sanitization\nexception handling\nsecurity by design\n\n\nSoftware lifecycle secure coding approach: secure coding practice in\n\ndesign and architecture\nimplementation\ntesting\noperations\n\n\n\nFaculty\nGeorge Okeyo\n\n',
 '\n\n\n04-801-S3 \xa0 Planning for Digital Transformation\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nA basic mechanism by which ICT impacts the real world is through the transformation of enterprises and organizations towards conducting their business or offering their services more efficiently by adopting various digital technologies and strategies. This course is structured as a reading seminar where students study and discuss essential components of this “digital transformation” as both a technological activity and in terms of institutional culture, business, and industrial management. Students will be graded on the quality of their weekly assignments and their participation in classroom discussions.\nLearning objectives\nThe main objectives of this course are to:\n\nUnderstand the definition and management of transformation.\nDevelop a focus on business processes and customer needs.\nGain familiarity with the methods and techniques used to develop and refine digital and non-digital products.\nAppreciate underlying concerns such as data governance, regulatory compliance, and ethics.\n\nOutcomes\nUpon successful completion of this course, students should be able to:\n\nEvaluate the potential impact of advances in ICT on organizations.\nIdentify critical factors behind technology’s effectiveness on users.\nDevelop rational and objective categorizations of innovation including via exploitation of efficiencies, competition, and disruption.\n\nContent details\n\nDefining Digital Transformation (DT)\nDT and products\nDT within companies\nDT in industries\nDT in government and society\nDT in a focus area to be selected\n\nPrerequisites\nNone. Open to all CMU-Africa students with a math and programming background in IT, engineering, or AI.\nFaculty\nAhmed Biyabani\n\n',
 '\n\n\n04-801-S4 \xa0 Project in Digital Transformation\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis is a project-oriented course where teams of students apply their learning in the companion Planning for Digital Transformation (DT) course, their degree program, or commercial experience, to propose a DT project in one of several topics. Business areas that students may focus on will include but are not limited to retail, manufacturing, logistics, healthcare, education, government, and non-governmental organizations. Suggested transformations may apply in different stages of the company life cycle from disruptive innovators to mature or faltering and in need of restructuring. There will be weekly assignments leading up to a final presentation.\nLearning objectives\nThe main objectives of this course are to:\n\nApply the principles of DT to identify specific use cases\nDefine the scope and develop a detailed plan for executing DT\nAccount for practical considerations such as electronic tools, the integrity of data sources, data governance, and regulatory compliance\nAddress the issue of fundamental value creation\n\nOutcomes\nUpon successful completion of this course, students should be able to:\n\nEngage in the planning and implementation of DT in their organization\nHelp develop new products for or improve the performance of an enterprise\nEffectively communicate business recommendations\n\nContent details\n\nCase selection and project proposal using DT principles\nQuantitative justification or simulation or implementation of a prototype\nExercise in verification and validation against specified criteria\nPresentation of DT plan and defense thereof\n\nPrerequisites\n04-801-S3\xa0Planning for Digital Transformation or by permission of the instructor\nFaculty\nAhmed Biyabani\n\n',
 '\n\n\n04-801-T3 \xa0 Applications of AI in Healthcare\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis course introduces the principles and practices underlying the application of AI in healthcare. Students will survey the opportunities and challenges of using AI to improve healthcare, particularly in Africa. Students will study the potential impact of AI on broad groups of users including patients, providers, and health-related industries via domains such as medical image analysis, electronic health records (EHR), and customized drugs. Topics include, but are not limited, to neural networks and deep learning models for multimodal analysis as well as the use of time-series data. Practical questions around privacy and inclusiveness, and technical challenges of integration with existing systems will also be presented. Students will be assessed on weekly readings and homework assignments.\nLearning objectives\nThe main objectives of this course are to:\n\nDistinguish the main domains within healthcare and become familiar with the types of data and machine learning algorithms used therein\nExplore clinical topics incl. risk classification, modeling of disease progression, and drug customization\nExplore mathematical topics incl. graphical models, time-series analysis, causality\nUnderstand the significance of related topics such as workflow design, algorithmic fairness\n\nOutcomes\nUpon successful completion of this course, students should be able to:\n\nStart working with healthcare data\nTranslate healthcare problems to machine learning problems\nSelect appropriate learning algorithms\nRecognize limits and opportunities in applying machine learning (ML) to healthcare\n\nContent details\n\nIntroduction to clinical data and EHR\nMonitoring patients\nSignal prediction\nML techniques commonly used in healthcare\nTime-varying and multi-trait data\nRegulation and governance\n\nPrerequisites\nNone. Open to all CMU-Africa students with a math and programming background in IT, engineering, or AI.\nFaculty\nAhmed Biyabani\n\n',
 '\n\n\n04-801-T4 \xa0 Project in AI for Healthcare\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis is a practical course where students who have taken the companion 04-800-T3 mini-course, or who come with at least some artificial intelligence (AI) or machine learning (ML) background, tackle the challenges of working with real data to improve healthcare, particularly in Africa. While ML is applicable to a wide variety of problems in the different biosciences, this course focuses on the use of clinical data. Clinical topics that students may focus on will include risk classification, modeling of disease progression, customized diagnosis and medication; subtype discovery; clinical workflow improvement. Mathematical topics that students may focus on include graphical models, time-series analysis, deep learning and transfer learning, causality, interpretability, and algorithmic fairness. Students will be assessed on structured assignments integrated into a final project.\nLearning objectives\nThe main objectives of this course are to:\n\nApply relevant AI and MLalgorithms to solve problems in specific use cases in healthcare\nDefine the scope and develop a detailed plan for executing a feasible healthcare project\nAccount for practical considerations such as electronic tools, the integrity of data sources, data governance, and regulatory compliance\nAddress the issue of fundamental value creation\n\nOutcomes\nUpon successful completion of this course, students should be able to:\n\nEngage in the usage and/or implementation of AI for healthcare in their institution\nHelp develop new products for or improve the performance of a healthcare concern\nEffectively communicate technical recommendations\n\nContent details\n\nHealthcare case selection and AI project proposal\nSimulation or implementation of a prototype\nExercise in verification and validation against specified criteria\nPresentation of AI project plan and defense thereof\n\nPrerequisites\n04-801-T3 Applications of AI in Healthcare or by permission of the instructor.\nFaculty\nAhmed Biyabani\n\n',
 '\n\n\n04-801-U3 \xa0 Technical Writing and Communication Skills\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis course aims to improve students’ ability to produce clear and accurate technical texts such as lab reports, scientific papers, process flows, knowledge-based articles, as well as giving technical presentations.Note that this course is intended to only be offered & taken PASS/NO PASS.\nLearning objectives\n\nStudents will gain an introduction to technical writing and be able to plan and create technical communication.\nThey will become aware of genre requirements such as: arrangement, emphasis, clarity, conciseness, tone and ethos.\nThey will become aware of the process of technical writing, i.e.: audience profiling; user task analysis; information architecture; content development; technical and editorial reviews; formatting and publishing (publish the document).\nThey will be able to produce good quality technical reports that meet the requirements of their brief.\nThey will also be able to deliver more impactful presentations.\n\nOutcomes\nStudents will be able to produce a range of technical documents to a high professional standard, showing an awareness of audience, purpose and context.They will be able to apply these concepts to both written and oral communication.\nContent details\n\nCritical thinking\nAcademic writing skills\nPresentation skills\nSeminar discussion skills \n\nPrerequisites\nFor CMU Africa students only. Not suitable for students studying 04-606 in the same semester.\nFaculty\nGlen Thompson\n\n',
 '\n\n\n04-900 \xa0 MSIT Practicum\n Location: Africa \n           Units: 24\n           Semester Offered: Fall, Spring\n\n\n',
 "\n\nCourse description\nThe MSIT practicum provides an opportunity for students to apply the knowledge and skills learned in their classes to solve a real-world problem in information and communication technology offered by an industry client. In collaboration with a faculty mentor, each team of students works with an industry client to understand the problem to be addressed and develop a strategy to create a solution in one semester. A plan and schedule are developed, tasks are assigned, and progress is monitored through regular meetings. The solution is presented to the industry client who joins the faculty supervisor in evaluating and grading the practicum project.\nLearning objectives\n\nTo learn professional ethics\nWorking as a team member\nEngaging with a client\nIdentifying a problem, understanding the client's needs, developing, and assessing alternative solutions\nDeveloping a work plan with the client to implement, deploy, and assess a quality solution on time\nReflecting on and developing your professional skills\nDelivering clear, well-structured client presentations\nDeveloping and refining communication and presentation skills\n\nOutcomes\nAfter completing this course, students should be able to:\n\nAcquire and assess requirements with a client\nMake effective trade-offs in a project to realize a product that satisfies the client’s objectives\nDefine roles and tasks within a team and carry out a team project effectively\nMake a project schedule and adapt throughout the project to deal with unforeseen contingencies\nApply research and observations on teamwork and professional skills to improve your own skills\nApply effective written communication skills to produce high-quality reports\nDemonstrate effective presentation skills for diverse audiences\n\nPrerequisites\n2nd-year MSIT standing\nFaculty\n\xa0George Okeyo\n\n",
 '\n\n\n04-910 \xa0 Entrepreneurship Project\n Location: Africa \n           Units: 24\n           Semester Offered: Fall, Spring\n\n\n',
 '\n\nCourse discipline\xa0\nMSIT\nCourse description\nThe IT Entrepreneurship Project class is an opportunity for students to build and practice skills in developing information technology ideas into innovations that create value for a selected set of customers. Working in small teams, students work on a concrete project to bridge the gap between entrepreneurial theory and practice.This highly selective course combines both independent team study and working with technical and professional mentors to apply concepts in the creation of a new information technology venture. Mentors can include faculty members as well as appropriate individuals from industry.This course will also involve collaboration with the CMU-Africa Industry Innovation Lab (IIL), corporate, and/or other organizations in the domain that will provide project support and feedback. The natural outcome of this project could be the continuation of its development in the IIL, with possible funding opportunities to create a startup at CMU-Africa.Prior to being admitted into this course, a team of a minimum of two students is required to submit a project for a new venture to be approved by CMU-Africa Entrepreneurship faculty. If approved, the team and a faculty advisor under the guidance of the course instructor will create and execute a semester-long development plan.\nLearning objectives\n\nProfessional ethics\nWorking as a team member\nUnderstanding all angles of a startup: people, technology, finance, and legal\nEngaging with potential customers\nIdentifying a problem, developing and assessing alternative solutions\nDeveloping a work plan to implement, deploy, and assess a quality solution on time\n\n\xa0Outcomes\n\nAcquire and assess the requirements of customers\nMake effective trade-offs in a project to realize a product that satisfies the customers’ needs\nDefine roles and tasks within a team and carry out a team project effectively\nMake a project schedule and adapt it throughout the project to deal with unforeseen contingencies\nApply research and observations on teamwork and professional skills to improve your own skills\n\nContent details\n\nProduct/service design\nAgile development methodology, scrum methodology\nHuman-centered design: requirement collection, user interface\nMarket and competitor’s data collection and analysis\nSecuring strategic partners and collaborators\nSales persuasion and communication with the corporate world\nProject management\nCase studies\nIT scaling up, IT procurement\n\nPrerequisites\n\n2nd-year MSIT standing\nWhile there are no prerequisites, students are strongly recommended to take:\n\n04-613 ICT Business Economics and Finance\n04-802 Entrepreneurship Seminar\xa0\n\n\n\nFaculty\nJesse Thornburg\n\n',
 '\n\n\n04-950 \xa0 Engineering Artificial Intelligence Capstone\n Location: Africa \n           Units: 12\n           Semester Offered: Fall, Spring\n\n\n',
 '\n\nCourse description\nThe capstone is an opportunity in the CMU curriculum for students to refine and reinforce the skills they have acquired during the first year of their master’s degree program. Students exercise these skills through a one-semester, real-world project provided by an outside sponsor. The sponsor is an organization that agrees to support a CMU capstone project. They provide the project definition and necessary resources to complete the project. The sponsor designates an individual to be the project client who works directly with a student team. The Team is expected to perform as if they are a contract team that negotiates with the client the scope and details of the project. The project is then worked on by the team with the client to achieve the negotiated deliverables over the course of the semester. Each team is overseen by a faculty advisor whose role is to check on student progress and evaluate the academic performance of the students. Faculty advisors are not directly involved with the client or the project.\n\xa0\nThe capstone course consists of two parallel activities. The first is the capstone project which involves the\nsponsor, client, and team as described above. The second is the capstone as a graded 12-unit academic\ncourse. This involves the team and the faculty mentor with classes and assignments. The faculty member\nassesses the team based on project reports, professionalism, project execution, and client feedback.\nLearning objectives\nTo provide an opportunity for students to demonstrate that they can apply what they have learned in their courses including:\n\nTechnical skills\nProfessional skills\nCritical thinking and problem-solving skills\n\nTo provide an opportunity for students to acquire practical skills by working on artificial intelligence and machine learning projects including:\n\nEngaging with a client\nDeveloping a work plan based on client requests and assessments of project constraints\nApplying project management and Agile methodology\n\nOutcomes\nAfter completing this course, students should be able to:\n\nAcquire and assess requirements with a client\nMake effective trade-offs in a project to realize a product that satisfies the client’s objectives\nDefine roles and tasks within a team and carry out a team project effectively\nMake a project schedule and adapt throughout the project to deal with unforeseen contingencies\n\nCourse structure\nThe project side of the course consists of four phases:\n\nProject assignments, team-forming, agreements\nProject scoping and statement of work\nWork execution\nFinal project delivery\n\nThe assignment of students to projects considers student preferences and skill sets compared to the requirements of the proposed project. Agreement is where all parties sign educational project agreements.\n\nProject scoping and statement of work is where each team works with the client to develop a general\napproach as well as an initial project statement of work. Teams make a presentation to other capstone teams\nand faculty advisors to get initial feedback.\n\xa0\nWork execution is where teams spend the bulk of their time on the project working with the client. Here they follow the statement of work and make modifications to the statement of work as they make progress. Deliverables are submitted to the client per the statement of work. Teams make a presentation to other\ncapstone teams and faculty advisors to be sure that they are on track.\n\xa0\nIn the final week, students make project presentations to the client, fellow students, and academic advisers. They submit their final project deliverables for client evaluation.\n\xa0\nThe academic side of the course consists of three activities, course instruction, assignments, and final assessment. Course instruction happens for approximately one hour every week to provide information that complements the project methods and other classes as well as having working sessions on project-related issues.\n\xa0\nOver the semester students will have periodic assignments that will be turned in for credit.\n\xa0\nThe final assessment will gather information from the client, the faculty advisors, and the teams to assign a final grade for each student.\nAgile methodology\nEach team is expected to use agile methods including hills, epics, user stories, standups, sprints, backlogs,time tracking, burndown charts, etc. Tools from GitLab will be used to support this part of the project.\nEngineering notebook\nEach team will maintain a team engineering notebook, which is due at the end of the project with the Final Deliverables. Here teams document each major project decision (e.g., organization choice, tool selections, etc.). For each decision entry in the notebook, teams are to list the final decision, the justification for that decision, and one or two alternatives not chosen. The engineering notebook should be updated on a daily basis throughout the project. Students are expected to use a Wiki page in GitLab to maintain their engineering notebook\nPrerequisites\nCorequisite of 04-653 Engineering Artificial Intelligence Project Methods\nFaculty\nCharles Wiecha and Tim Brown\n\n',
 '\n\n\n04-980 \xa0 Engineering Independent Study\n Location: Africa \n           Units: Variable\n           Semester Offered: Fall, Spring\n\n\n',
 '\n\nCourse description\nStudents can undertake an independent study project during any semester after their first semester under the guidance of a faculty member. The student and faculty member should define the nature and scope of the project, and agree upon the expectations, deliverables, and the number of units to be earned for the project.\xa0\nIndependent study of a topic unfamiliar to the student and not covered in an existing course, as well as original project work, can be undertaken as an Engineering Independent Study. A brief description of the project signed by both the faculty member and the student should be submitted and approved prior to the start of the semester.\nIt is the responsibility of the faculty member to monitor the progress of the student and grade the project at the end of the semester. The number of units can be 3-15 units for the semester. Up to 15 total units of Engineering Independent Student credit can be counted toward the degree.\nStudents selecting this course cannot take 04-990 Engineering Research Project.\nCourse registration\nThe Independent Study Approval Form should be submitted to the Director before the end of the second week of the semester with the following information:\xa0\n\nNames and email addresses of the student and study advisor (a CMU-Africa faculty member).\xa0\nThe number of units (3-15) and the total expected hours to be worked over the semester.\xa0 The number of units should correspond to the average number of hours to be worked over the entire semester (15 weeks), but the student can allocate the hours of work as agreed upon with the faculty member.\xa0\nThe study objectives, methods, and anticipated results.\nSignature of the student and the study advisor.\xa0\n\nThe Director will review each study proposal and send an email to the student and study advisor confirming that the study has been accepted, or will send suggestions for changes that should be made to the study proposal to make it acceptable.\nStudent assessment\nStudents will be required to do a public presentation of the results of their study at the end of the semester.\nPrerequisites\nFirst semester completed\n\n',
 '\n\n\n04-990 \xa0 Engineering Research Project\n Location: Africa \n           Units: Variable\n           Semester Offered: Fall, Spring\n\n\n',
 '\n\nCourse description\nThis course offers a research opportunity for students interested in pursuing a research or academic career or Ph.D. study. The research project is conducted under the supervision of a faculty research adviser who first approves it based on the student’s skills and mutual interest. The research\xa0adviser and the student define and approve a study plan appropriate for the research.\nThe research will lead to the presentation and defense of a mini-thesis in front of a research committee that may lead to the publication of a scholarly paper or papers. The research committee consists of three members including the advisor, and may include one external member.\nThe student must complete 36 units of research over one or two semesters and may count 6 units of 04-701 Research Methods in Engineering toward the total. The variable units (12-36) allow the students to spread the research project over two semesters.\nCourse registration\nA brief (no more than four pages) document should be submitted to the Director of Academics at least two weeks before the beginning of the project. Get more information about registration.\nStudent assessment\nStudents will be required to present and defend their research thesis in front of a research committee (public invited). The research committee consists of 3 members including the adviser, and may include one external member.\nPrerequisites\nCompletion of two semesters of study. Students selecting this course cannot take 04-980 Engineering Independent Study.\n\n',
 '\n\n\n04-622 \xa0 Applied Cryptography\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse discipline\nMSIT\nCourse description\nCryptography is literally thousands of years old because it has always been important to secure information in a manner that only the intended recipient can access it. One famous cipher, Caesar\'s cipher, was apparently used by the Romans. Today, cryptography is essential for e-commerce and communication. But cryptography is more than just encrypting data. Cryptographic techniques address other system-level problems too, including but not limited to:\n\nHow do I know I\'m talking to the person I think I am?\nHow can I securely verify that the person I\'m talking to knows a shared secret?\nHow can I electronically "sign" a document I produce in a way that anyone can verify it came from me, but no one can produce a forgery?\nHow can I securely exchange encryption keys with a friend?\n\nIn this course, students will learn the foundations of modern cryptography, and how they are used to solve such problems.\nLearning objectives\nStudents will learn:\n\nThe difference between symmetric and asymmetric encryption\nWhat hash functions are and how they are used in cryptographic applications\nThe purpose of message authentication codes and how they are used\nHow cryptographic systems work mathematically\nHow a system\'s security can be mathematically defined and estimated\nWhy it is important that the same message be encrypted differently if it is sent twice, and how nonces are used to make that possible\nPublic key infrastructure and the role of certificates\n\nOutcomes\nAfter completing this course, students will be able to:\n\nRead and understand protocols and system documentation that employ cryptography.\nMake informed decisions about how to use cryptography in systems.\nWrite Python code using public libraries to perform cryptographic operations.\nUnderstand and explain the mathematical underpinnings of several cryptographic systems.\n\nContent details\n\nBlock ciphers and stream ciphers\nPermutation and substitution networks\nKey expansion\nAES\nMultiplicative groups, testing for primality\nDiffie Hellman key exchange\nEl Gamal public key / private key cryptography\nRSA public key / private key cryptography and digital signatures\nSha-256\nKeyed message authentication codes\nSchnorr identification\nPKI and certificates\nCase study: how WhatsApp does encryption\nHow bitcoin works and its cryptographic underpinnings\n\nPrerequisites\nNone\nFaculty\nMike Perkins\n\n',
 '\n\n\n11-611 \xa0 Natural Language Processing\n Location: Pittsburgh \n           Units: 12\n           Semester Offered: Fall, Spring\n\n\n',
 "\n\nCourse description\nThis course is about a variety of ways to represent human languages (like English and Chinese) as computational systems and how to exploit those representations to write programs that do neat stuff with text and speech data, like:\n\ntranslation\nsummarization\nextracting information\nquestion answering\nnatural interfaces to databases\nconversational agents\n\nThis field is called Natural Language Processing or Computational Linguistics, and it is extremely multidisciplinary. This course will therefore include some ideas central to Machine Learning and to Linguistics.\nWe'll cover computational treatments of words, sounds, sentences, meanings, and conversations. We'll see how probabilities and real-world text data can help. We'll see how different levels interact in state-of-the-art approaches to applications like translation and information extraction.\nFrom a software engineering perspective, there will be an emphasis on rapid prototyping, a useful skill in many other areas of Computer Science.\nPrerequisites\nCS courses on data structures and algorithms and strong programming skills\nFaculty\nDavid R. Mortensen\xa0and\xa0Golan Levin\n\n",
 '\n\n\n11-785 \xa0 Introduction to Deep Learning\n Location: Pittsburgh \n           Units: 12\n           Semester Offered: Fall, Spring\n\n\n',
 '\n\nCourse description\n“Deep Learning” systems, typified by deep neural networks, are increasingly taking over all AI tasks, ranging from language understanding, and speech and image recognition, to machine translation, planning, and even game playing and autonomous driving. As a result, expertise in deep learning is fast changing from an esoteric desirable to a mandatory prerequisite in many advanced academic settings, and a large advantage in the industrial job market.In this course, we will learn about the basics of deep neural networks and their applications to various AI tasks. By the end of the course, it is expected that students will have significant familiarity with the subject, and be able to apply Deep Learning to a variety of tasks. They will also be positioned to understand much of the current literature on the topic and extend their knowledge through further study.\nIf you are only interested in the lectures, you can watch them on the YouTube channel.\nSee the original course description for the most recent information.\nPrerequisites\n\nWe will be using Numpy and PyTorch in this class, so you will need to be able to program in python3.\nYou will need familiarity with basic calculus (differentiation, chain rule), linear algebra, and basic probability.\n\nFaculty\nBhiksha Ramakrishnan and Rita Singh\n\n',
 '\n\n\n14-735 \xa0 Secure Coding\n Location: Pittsburgh \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis course will enable students to understand how software coding defects lead to software vulnerabilities, develop secure software, and manage teams that develop secure software. This course provides a detailed explanation of common programming errors in C and C++ and describes how these errors can lead to code that is vulnerable to exploitation. The course covers secure software development tools and processes while focusing on low-level technical security issues intrinsic to the C and C++ programming languages and associated libraries. The course relies on "learning-by-doing", where students practice hands-on sophisticated secure coding concepts through continuous debugging and creative approaches. Many aspects of the assignments mimic the challenges developers face in a real-world software system. Some assignments will introduce students to a programming language that they might have never seen before such as JavaScript and Rust.\n\xa0\nFor more information about the course, please see https://www.cylab.cmu.edu/education/course-list/secure-coding.html\n\xa0\nFaculty\nHanan Hibshi\n\n',
 '\n\n\n14-817 \xa0 Cyber Risk Modeling\n Location: Pittsburgh \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThere are too many cybersecurity risks to manage them all informally. You need a plan! Risk management and threat analysis are structured to craft better organizational security decisions. This course helps you learn how to prioritize risks, secure data assets, and to communicate your security knowledge. This is not a programming class but requires basic statistics (e.g. Monte Carlo analysis, which you will learn or review.) Major topics include: legal compliance, threat modeling, Mitre ATT&CK, the Common Vulnerabilities and Exposures database, and popular risk frameworks (STRIDE, PASTA, NIST, etc.) Those seeking roles where they will work with or become a CSCO, risk officer, or risk analyst will most benefit from this course.\nOutcomes\nBy the end of the course, students should be able to:\n\nCommunicate the strengths, weakness, and limitations of a risk-based approach to security management both to other security professionals as well as to non-technical decision makers.\nPrioritize the most important assets to defend against attacks within a given system or organization.\nCategorize the likelihood of types of risks. Work with uncertainty, estimations, and probabilistic models based on qualitative and quantitative data.\nPerform threat analysis for common computing scenarios with tools like PASTA and NIST frameworks.\nOver time, validate, monitor, update, and iterate plans to address risks.\nMake appropriate recommendations to accept, mitigate, or insure against risks, with accompanying written analysis to support your recommendations.\nDemonstrate understanding of security within the broad context of an organization by role playing concerns from different stakeholders.\nPresent a request for resources from your fictional management in order to address threats including financial modeling, clear presentation of the relative probabilities of different threats, the magnitude of threats, and specific mitigation plans. Develop the ability to convey technical concepts to non-technical stakeholders and understand likely concerns.\n\nPre-requisites\n\xa0None\xa0\nFaculty\nJoanne Peca\n\n',
 '\n\n\n15-619 \xa0 Cloud Computing\n Location: Africa \n           Units: 12\n           Semester Offered: Fall, Spring\n\n\n',
 '\n\nCourse description\nThis online course gives students an overview of the field of Cloud Computing, its enabling technologies, main building blocks, and hands-on experience through 4 projects utilizing a public cloud (Amazon Web Services). Cloud computing services are being adopted widely across a variety of organizations and in many domains. Simply, cloud computing is the delivery of computing as a service over a network, whereby distributed resources are rented, rather than owned, by an end user as a utility.\n\xa0\nThe course will introduce this domain and cover the topics of data centers, virtualization, cloud storage, and programming models. As an introduction, we will discuss the motivating factors, benefits, challenges, and service models. Modern data centers enable many of the economic and technological benefits of the cloud paradigm; hence, we will describe several concepts behind data center design and management. Next, we will focus on virtualization as a key cloud technique for offering software, computation, and storage services. We will study how CPU, memory, and I/O resources are virtualized, with examples from Xen and VMWare, and present real use cases such as Amazon EC2. Subsequently, students will learn about different cloud storage concepts including data distribution, durability, consistency, and redundancy. HDFS, PVFS, HBASE, Cassandra, and S3 will be presented as case studies.\xa0\n\nStudents will understand the details of the MapReduce programming model and gain a broad overview of alternative programming models such as Pregel, and GraphLab. Students will work with Amazon Web Services, use them to rent and provision compute resources and then program and deploy applications that run on these resources. Students will develop and evaluate scaling and load-balancing solutions. In addition, students will work with cloud storage systems and learn to develop applications in the MapReduce programming paradigm. Students will have to complete a project to design and implement a complete web-service solution for querying big data. For this project, the students are evaluated based on the cost and performance of their web services.\nLearning objectives\nThe goal of this class is to give students an overview of the field of Cloud Computing and an in-depth study of its enabling technologies and main building blocks. Students will gain hands-on experience solving relevant problems through projects that will utilize existing public cloud tools. It is our objective that students will develop the skills needed to become a practitioner or carry out research projects in this domain. Students will learn:\n\n\nthe fundamental ideas behind Cloud Computing, the evolution of the paradigm, its applicability; benefits, as well as current and future challenges\nthe basic ideas and principles in data center design and management\ndifferent CPU, memory, and I/O virtualization techniques that serve in offering software, computation, and storage services on the cloud\nabout cloud storage technologies and relevant distributed file systems\nthe variety of programming models and develop working experience in one of them\n\n\nOutcomes\nAfter completing this course students will be able to:\n\n\nExplain the core concepts of the cloud computing paradigm: how and why this paradigm shift came about, the characteristics, advantages, and challenges brought about by the various models and services in cloud computing\nApply the fundamental concepts in data centers to understand the tradeoffs in power, efficiency, and cost\nDiscuss system virtualization and outline its role in enabling the cloud computing system model\nIllustrate the fundamental concepts of cloud storage and demonstrate their use in storage systems such as Amazon S3 and HDFS\nAnalyze various cloud programming models and apply them to solve problems on the cloud\nBuild cloud services that apply these concepts\n\nPrerequisites\nKnowledge of computer systems and Java programming\n\nCourse format\nOnline\nFaculty\nMajd Sakr\n\n',
 '\n\n\n17-734 \xa0 Usable Privacy and Security\n Location: Pittsburgh \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThere is growing recognition that technology alone will not provide all of the solutions to security and privacy problems. Human factors play an essential role in these areas, and it is important for security and privacy experts to have an understanding of how people will interact with the systems they develop. This course is designed to introduce students to a variety of usability and user-interface problems related to privacy and security and to give them experience in understanding and designing studies aimed at helping to evaluate usability issues in security and privacy systems. The course is suitable both for students interested in privacy and security who would like to learn more about usability, as well as for students interested in usability who would like to learn more about security and privacy. All students will work in small teams on a group project throughout the semester.\nStudents enrolled in this course will be required to read and comment on a research paper each week in addition to the other assignments.\nLearning objectives\n\nGain an appreciation for the importance of usability within security and privacy\nLearn about current research in usable privacy and security\nLearn how to conduct usability studies\nLearn how to critically examine UPS studies\n\nPrerequisites\nThe course is open to all students who have at least some technical background (e.g. an undergraduate computer programming course).\nLearn more\nFaculty\nLorrie Cranor\n\n',
 '\n\n\n18-662 \xa0 Principles and Engineering Applications of AI\n Location: Pittsburgh \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThe course will review the basic principles of AI. Some of the specific topics that will be covered are the following:\n\nIntelligent Agents\nSingle-Agents and Multi-Agent Systems (MAS)\nUncertain Knowledge and Reasoning (Probabilistic Reasoning and Probabilistic Reasoning over Time, Bayesian Networks, Dynamic Bayesian Networks, Hidden Markov Models, Kalman Filters, MCMC algorithms, etc.)\nLearning\nCommunicating, Perceiving, and Acting\nRobotics\n\nThe course will involve completing a set of challenging engineering applications of AI that will include: medical applications, video games, autonomous driving, autonomous robots, finance and economics, military, art, and advertising. Students should have a good background in basic probability theory, maturity in mathematical topics, and good programming skills. permission will be required.\nSee the original course description for the most recent information.\nPrerequisites\n18-751 Applied Stochastic Processes\xa0with a minimum grade of B.\nFor seniors who would like to take the course but do not have the necessary prerequisites, instructor’s\nFaculty\nOzan Tonguz and\xa0Ahmed Biyabani\n\n',
 '\n\n\n18-631 \xa0 Introduction to Information Security\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nOur growing reliance on information systems for daily activities, ranging from remote communications to financial exchanges, has made information security a central issue of our critical infrastructure. The course introduces the technical and policy foundations of information security. The main objective of the course is to enable students to reason about information systems from a security engineering perspective, taking into account technical, economic, and policy factors. Some topics covered in the course include elementary cryptography; access control; common software vulnerabilities; common network vulnerabilities; policy and export control laws in the U.S., Japan, and elsewhere; privacy; management and assurance; economics of security; and special topics in information security.\nLearning objectives\nThis course primarily aims at providing a level of literacy in information security adequate enough to understand the security implications on a number of diverse domains including software engineering; networking; privacy; and policy.\nA secondary objective is to provide a working knowledge of topics such as cryptography, privacy, network security, and infrastructure management so that students can acquire the necessary background for more advanced security courses.\nOutcomes\nAfter completing this course, students should be able to reason about systems from the perspective of a security engineer. That is, they should be able to define the system to protect; determine the desired security properties for this system; identify the possible threats to these security properties and their likelihood of occurrence; and consider possible mitigations against these threats.\nContent details\nThe course will cover the following topics:\n\nThreat models\nBasic security properties\nBasic policy overview\nCryptography I: history, private key algorithms\nCryptography II: DES, stream cyphers\nCryptography III: public key algorithms\nCryptography IV: unkeyed algorithms, hashes\nPKI\nAccess control I: Operating systems\nAccess control II: Multilevel & multilateral security\nBuffer overflows and software vulnerabilities\nSecurity protocols\nSSL, Networks I: TCP vulnerabilities\nNetworks II: DDoS attacks\nNetworks III: Anonymity\nGuest lecture/Applications: TBD\nWireless Security, Intelligent Jamming\nElements of Web Security\nCopyright law and P2P\nSecurity economics\nManagement, assurance\n\nPrerequisites\nThe course assumes a basic working knowledge of computers, networks, C, and UNIX programming as well as an elementary mathematics background. But, it does not assume any prior exposure to topics in computer or communications security. Students lacking technical background (e.g., students without any previous exposure to programming) are expected to catch up through self-study.\nFaculty\nJema Ndibwile\n\n',
 '\n\n\n18-641 \xa0 Design Patterns for Smartphone Development\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\n\nThis course provides an intensive exploration of computer programming by reviewing the basics of Object-Orientated programming and moving quickly to advanced programming using design patterns and a multi-tiered architecture. Students will learn smartphone development and how to apply the learned programming techniques to create extensible, reusable, and quality software as part of the coursework.\n\n\nPrerequisites\nSome prior, but perhaps limited, programming experience in Java or another object-oriented programming language\nFaculty\nEric Umuhoza\n\n\n',
 '\n\n\n18-652 \xa0 Foundations of Software Engineering\n Location: Africa \n           Units: 12\n           Semester Offered: Fall, Spring\n\n\n',
 '\n\nCourse description\nThis course will teach you about software engineering paradigms that have shaped the software industry over the past few decades. You will be exposed to fundamental disciplines of software engineering as well as engineering practices that crosscut system, project, and user perspectives. You will learn to define requirements iteratively, and architect, design, implement, integrate, test, and deploy a solution. You will work on self-organizing teams and manage the work collaboratively. You will also learn to solve a real problem subject to multiple constraints while keeping the stakeholders involved throughout the lifecycle and balancing the underlying engineering tradeoffs. The topics are applied in the context of a semester-long group project.\nPrerequisites\nBasic software development experience with proficiency in at least one modern programming language and modern programming concepts. Prior to admission, students must successfully complete a programming assignment to demonstrate familiarity with required software technologies.\xa0\nFaculty\nCathy Bishop\n\n',
 '\n\n\n18-661 \xa0 Introduction to Machine Learning for Engineers\n Location: Pittsburgh \n           Units: 12\n           Semester Offered: Fall, Spring\n\n\n',
 '\n\nCourse description\nThis course provides an introduction to machine learning with a special focus on engineering applications. The course starts with a mathematical background required for machine learning and covers approaches for supervised learning (linear models, kernel methods, decision trees, neural networks) and unsupervised learning (clustering, dimensionality reduction), as well as theoretical foundations of machine learning (learning theory, optimization). Evaluation will consist of mathematical problem sets and programming projects targeting real-world engineering applications.\nSee the original course description for the most recent information.\nFaculty\nCarlee Joe-WongGuannan QuYuejie ChiGauri Joshi\n\n',
 '\n\n\n18-681 \xa0 Power Electronics\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse discipline\nECE\nCourse concentration\nEnergy systems\nCourse description\nThis course is aimed at developing Power Electronics expertise in master’s level students to develop the knowledge and skills necessary for the formation of a power electronics engineer contributing to the formation of a professional engineer. Considerations of static and dynamic characteristics of power semiconductor devices including thermal management including the particular issues pertinent to high voltage applications are followed by the analysis and design of principal types of power converters. Key applications are also considered so that the course provides broad knowledge and skills in the field of power electronics in wide-ranging applications. The assessment is based on assignments and examinations. This course is designed to appeal to MSECE students. However, this course is also suitable for MSIT students who wish to broaden their horizons into power applications. It is worth noting that power electronic applications require engineers who have experience and skills in embedded systems, software engineering, digital control, and signal processing among others.\n\nView the syllabus for more information.\nLearning objectives\n\nThe broad aim of the course is to prepare the student to perform as a competent power electronic engineer in a broad range of application areas such as residential, industrial, and electric utilities. This broad aim is achieved through the following major objectives:\n\nTo obtain a complete understanding of the static and dynamic characteristics of commercially available and developing power semiconductor devices and be able to use the devices in a variety of power electronic converters including electrical and thermal design.\nTo develop the knowledge and skills required to analyze and design power electronic converters. This includes analytical, simulation, and experimental skills.\nTo fully understand the effect of the connection of power electronic converters to the electricity supply system and to develop skills to analyze and mitigate power quality issues.\nTo appreciate the requirement of energy storage and learn about energy storage systems.\n\n\nOutcomes\nBy the end of this course, the student will be able to:\n\nExplain static and dynamic characteristics of power semiconductor devices\nUse the information provided in datasheets to carry out design calculations\nPerform thermal design of power semiconductor devices\nExplain the capabilities and limitations of power semiconductor devices and use them in a variety of power electronic circuits.\nAnalyze and design power electronic converters\nAnalyze waveform distortion arising from power electronic converters and develop mitigation methods\nInvestigate a power electronic system by simulation and experimentation\nCommunicate the findings of an investigation of a power electronic system in written form and orally with multimedia\n\nContent details\n\nStatic and Dynamic Characteristics of Power Semiconductor Devices\nNaturally Commutated Power Converters: AC-DC, DC-AC\nSelf-commutated converters: AC-DC, DC-AC, DC-DC, AC\nPower quality issues associated with the connection of power converters to the electricity Supply Systems\nHarmonics, Voltage Sag and Swell, Light Flicker\nHarmonic Filters\nEnergy Storage\nApplications\n\nPrerequisites\nNone\nFaculty\nSarath Tennakoon\n\n',
 '\n\n\n18-685 \xa0 Power Electronics for Electric Utility Systems\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nWith the advent of power electronics, control and communication systems, and internet technologies, grid-connected and stand-alone electricity supply systems can be made smart and flexible by the application of power electronics. This is particularly relevant for the increasing penetration of embedded generation due to the proliferation of renewable energy systems based on solar, wind, mini and micro hydro, and wave in addition to diesel and gas generators. This course is designed to produce engineers equipped with the necessary knowledge and skills to design, commission, and operate such systems. Content includes High voltage switches: both thyristor and IGBT based; reactive power compensation: thyristor controlled reactor (TCR), Thyristor Switched Capacitor (TSC), Static Var Compensator (SVC), STATCOM, Series and Shunt Compensation; High Voltage DC Transmission (HVDC): HVDC Converters both thyristor based and voltage source converter based, multiterminal HVDC, DC Grids; Grid Integration of renewable energy sources: wind onshore and offshore, solar, energy storage, application to weak systems, black start; Stand-alone grid systems: PV and Hydro based, energy storage, rural electrification and city applications, business models.\nLearning objectives\nThe ECE department is accredited by ABET to ensure the quality of your education. ABET defines 7 Educational Objectives that are fulfilled by the sum total of all the courses you take. The following list describes which objectives are fulfilled by this course and in what manner they are fulfilled. The objectives are numbered from “1” through “7” in the standard ABET parlance. Those objectives not fulfilled by this course are crossed out from the following list:\n\n\nan ability to identify, formulate, and solve complex engineering problems by applying principles of engineering, science, and mathematics\nan ability to apply engineering design to produce solutions that meet specified needs with consideration of public health, safety, and welfare, as well as global, cultural, social, environmental, and economic factors\nan ability to communicate effectively with a range of audiences an ability to recognize ethical and professional responsibilities in engineering situations and make informed judgments, which must consider the impact of engineering solutions in global, economic, environmental, and societal contexts\nan ability to function effectively on a team whose members together provide leadership, create a collaborative and inclusive environment, establish goals, plan tasks, and meet objectives\nan ability to develop and conduct appropriate experimentation, analyze and interpret data, and use engineering judgment to draw conclusions\nan ability to acquire and apply new knowledge as needed, using appropriate learning strategies\n\n\n\nOutcomes\nBy the end of this course, you will be able to:\n\nExplain how static and dynamic characteristics of power semiconductor devices influence the design of power converters for electricity supply systems\nAppreciate the electrical and thermal design of “High Voltage Valves”\nAnalyze the operation of High voltage converters such as HVDC, STATCOM, MMC, and SVC\nInvestigate the mitigation of Power flow and voltage stability problems by compensation using Power Electronic Converters\nInvestigate a grid system including power electronic converters by simulation and Communicate the findings in written form and orally with multimedia\n\nContent details\n\n\nOperation of power semiconductor devices in the high voltage environment\nHigh voltage valves\nPower converters for utility applications\nMultilevel converters\nTransmission and load compensation by power electronic circuits; TCR, TSC, SVC, STATCOM\nHVDC and MVDC\nEnergy storage\nHarmonics and filter\n\nPrerequisites\nThere are no prerequisites for this course, but it is assumed that the student has an understanding of electrical & electronic principles, power systems, and power electronics at the bachelor level or equivalent experience and knowledge.\xa0Completion of a previous course in power electronics is recommended.\nFaculty\nSarath Tennakoon\n\n',
 '\n\n\n18-731 \xa0 Network Security\n Location: Africa \n           Units: 12\n           Semester Offered: Fall, Spring\n\n\n',
 "\n\nCourse description\nSome of today's most damaging attacks on computer systems involve the exploitation of network infrastructure, either as the target of attack or as a vehicle to advance attacks on end systems. This course provides an in-depth study of network attack techniques and methods to defend against them.\n\xa0\nThe course will cover topics spanning six broad themes:\n\nInfrastructure topics such as firewalls, network intrusion detection, secure routing protocols, and recent advances such as software-defined networking\nNetwork attacks such as denial of service (DoS) and distributed denial-of-service (DDoS) attacks, worm, and virus propagation\nAnalysis and inference topics such as network forensics and attack economics\nUser-related topics such as authentication, anonymity, and censorship resilience\nNew technologies related to next-generation networks\nCellular and wireless networks\n\nLearning objectives\nThe goal of this course is to provide learners with an advanced understanding of network security from both theoretical and practical perspectives. By the end of this course, students will be able to:\n\nExplain common network attacks and identify the possible defense mechanisms for each attack\nExplain the concept of network intrusion systems (NIDS) and network intrusion prevention systems (NIPS)\nExplain concepts related to Firewalls and VPN, and common network protection mechanisms\nConfigure both stateless and stateful ACL as well as DMZ firewalls on Cisco routers\nExplain the concept of applied cryptography including, symmetric cryptography and asymmetric cryptography, and cryptographic data integrity algorithms\nOutline the requirements and mechanisms for securing different layers of the network system. Identify the possible threats at each network layer and implement appropriate protection mechanisms\nConfigure IPsec, SSL, and TLS on Cisco routers for real-time communication security\nExplain the requirements of network security management including testing, the policy as well as roles and responsibilities\n\nOutcomes\nTechnical and intellectual skills in:\n\nAddress issues associated with the security of the network\nAssess different network threats and vulnerabilities and describe suitable countermeasures\nPerform basic network and network application penetration testing\nAssessing protocol designs and implementations for threats and vulnerabilities\n\nContent details\n\nIntroduction to network security: What is network security, traditional information security vs. modern-day information security, components of network security, additional concepts in network security\nOverview of networking and security basics: Layering, packet vs. circuit switching, layer 2 basics, basics of routing protocols, approaches to security, cryptography basics\nLayer 2 security: Types of VLANs, the role of VLANs in a network, trunking, configuring VLANS on switches, Spanning Tree Protocol (STP), Spanning Tree Algorithm, BPDU in STP, STP 5-step decision sequence, BPDU attacks, spanning tree manipulation attacks, CAM table overflow attacks\nDHCP security: Introduction to DHCP, characteristics of DHCP, DHCP software elements, DHCP states and procedures, unauthorized port access and mitigation, DHCP spoofing attack, DHCP starvation attack, ARP spoofing attack, IP spoofing attack, VLAN hopping, SYN flood attacks, broadcast storm attacks, mitigations for the attacks covered\nRouting security:\xa0Autonomous systems and how BGP routing works, BGP route selection algorithm\nBGP attacks: Prefix theft, AS Path truncation, AS Path alteration, BGP session attacks, instability attacks, TCP-based attacks\nBGP attack mitigations: BGP authentication route filtering, BGP security requirements, secure BGP design overview, route attestations, residual vulnerabilities is S-BGP, current trends – BGP Sec, mutually agreed norms for routing security, examples of routing incidents\nIP security: Requirements of security protocols, why IP security is needed, applications of IP security, benefits of IPSec, IPSec protocols – AH and ESP, IPSec tunnel mode vs. transport mode, how IPSec works – phase 1 and 2, the configuration of IPSec in Packet Tracer\nSSL/TLS: How SSL-TLS works, symmetric and asymmetric cryptography, SSL attacks – bit flipping attacks and mitigations, secret key exchange (Diffie-Hellmann Key exchange), key derivation function, public key sharing, digital, certificates, and signatures\nSoftware Defined Networking (SDN): Problems addressed by SDN, SDN components – data plane, control plane, OpenFlow Operation, SDN security – threat vectors\nActive sensors: Firewalls, intrusion detection systems, Bro IDS, Snort IDS, algorithmic complexity attacks, NIDS: evasion and normalization, Small TTL attacks, fragmentation overlap attacks, Snort configuration\nDoS and DDoS: Examples of DoS attacks – SYN flood and solutions, Shrew attack, Fallacies with DDoS attacks, why DDoS is hard to tackle, the evolution of DDoS attacks, examples of DDoS attacks – Smurf attacks, Amplification attacks, Mitigations for DDoS attacks – Filtering, Pushback, Traceback\nDNS and DNSSEC: DNS vulnerabilities, DNS attacks: DNS cache poisoning, DNS IP Spoofing\nDNS attack mitigation: Defenses – Split-Split DNS, DNS Security Extensions, Secure DNS query and response, Chain of Trust, Signing a DNS Zone\nAnonymous communications: Mixes and proxies, Chaum Mix, Mixnets, Anonymizing proxy, Onion routing, Tor Network, how to identify and block content, censoring techniques, IP-based blocking, blocking DNS names, flow terminating proxies\nCensorship countermeasures: VPNGate system, Tor network, Telex, Steganography, limitations of countermeasures\nMalware analysis and detection: creating viruses and trojans, malware infection methods, Rootkits, how malware propagates, detection methods for antivirus, Checksum\nSandbox analysis: Worms – Types, history, propagation, worm detection and defense, malware challenges\nWireless Network Security: The need for cryptography over the air, WEP encryption, defeating WEP authentication, WPA, WPA 2, WEP vs WPA vs WPA2, GSM network structure, GSM security model, attacks on GSM\nMisc:\n\nSide channel attacks\nNetwork forensic\nNext-gen networks\nEconomic impact of cyber attacks\nRevision\n\n\n\nPrerequisites\n\nExperience with C programming\nBasic Linux commands and operations\nKnowledge of TCP/IP networking\n\nFaculty\nJema David Ndibwile\n\n",
 '\n\n\n18-751 \xa0 Applied Stochastic Processes\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis course provides a fundamental understanding of probability theory and its applications to stochastic systems. The course covers the basic concepts of random variables, random vectors, stochastic processes, and random fields. In addition, common random processes such as Markov chains, Wiener and Gaussian processes are introduced. The course touches on elements of estimation theory and optimal filtering including Wiener and Kalman filtering. Advanced topics in modern statistical signal processing such as linear prediction, linear models, and spectrum estimation are also discussed. Throughout the course, students will gain hands-on experience in applying the concepts to solve a wide range of complex and relevant problems.\nLearning objectives\nStudents in this class will learn:\n\nThe fundamental concepts of probability theory and how to apply them in modeling stochastic systems, including random variables, vectors, processes, and fields.\nThe common random processes, such as Markov chains, Wiener and Gaussian processes, and their applications in modeling real-world systems.\nThe basic inference methodologies (for both estimation and hypothesis testing) and how to apply them.\nHow to process random signals with specific applications in estimation theory.\n\nOutcomes\nAt the end of the course, students will be able to:\n\nDemonstrate an understanding of the fundamental concepts of probability theory and its applications to stochastic systems.\nApply the concepts of random variables, random vectors, stochastic processes, and random fields to model real-world systems.\nAnalyze common random processes such as Markov chains, Wiener and Gaussian processes, and use them to model complex systems.\nApply the principles of estimation theory and optimal filtering to solve real-world problems, including Wiener and Kalman filtering.\nApply advanced topics in modern statistical signal processing such as linear prediction, linear models, and spectrum estimation to solve complex problems.\n\nContent details\nModule 1: Probability and random variables\n\nDiscrete random variables\nContinuous random variables\nMultivariate random variables\nSum of random variables\n\nModule 3: Statistical inference\n\nEstimation\nHypothesis\n\nModule 4: Stochastic processes\n\nIntroduction to Stochastic Processes\nMarkov Chain\nRandom Walks\nGaussian Process\nWeiner Process\nPoisson Process\n\nModule 5: Signal processing and filtering\n\nBasics of signal processing\nPower spectrum density\nIntroduction to linear filtering\nKalman Filter\n\nPrerequisites\nNone\nFaculty\nMoise Busogi\n\n',
 '\n\n\n18-759 \xa0 Wireless Networks\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse discipline\nECE\nCourse description\nThis course introduces fundamental concepts of wireless networks and systems. These fundamentals aim to help a student understand any type of wireless network application or technology. It covers the theory of wireless propagation and the associated path loss phenomena. The course focuses on understanding the effects of the channel on signal propagation for broadcast and line-of-sight wireless systems. It looks at mobile cellular networks and satellite systems in detail. The course also covers spread spectrum systems (FHSS and DSSS) in line with their application scenarios in the real world. Other topics include a look at error performance in a wireless channel for different modulation schemes, and noise and interference effects. Research directions are introduced in this course, with discussions of heterogeneous cellular networks, distributed antenna systems, energy-efficient design of cellular systems, cloud radio access networks, 5G, mmWave propagation, unmanned aerial vehicle (UAV)-based mobile base stations, etc. Students are assessed through several labs, homework, a mid-semester exam, and a final group project. The course has no prerequisites.\nLearning objectives\nStudents are introduced to the components of a wireless network, from the transmitter side to the receiver side. It looks at the theory of propagation models in different scenarios, and the associated path loss modeling for these scenarios. It focuses on broadcast systems like mobile cellular and line-of-sight systems such as satellite links. It considers specifically the effects of atmospheric absorption, rain, and the curvature of the earth on the design of long-distance terrestrial line-of-sight systems. Students will understand how to determine the link budget of the link, including system effects outside the wireless channel. Individual practical labs are designed around these theoretical topics to help students gain a deeper understanding. Students also cover ideas around performing a survey and writing a survey report on a given topic. Students learn how to plan a cellular network using an industry-grade planning tool.\nOutcomes\nAt the end of this course, students should be able to:\n\nExplain how multipath fading affects signal propagation in a wireless network.\nExplain the difference between and effects of large-scale and small-scale propagation.\nDesign long-distance terrestrial line-of-sight links considering rain and atmospheric effects as well as the earth’s curvature.\nDesign satellite links and understand how satellites work, including the global positioning system (GPS).\nAbility to carry out a research survey on a given topic in literature and write a summary paper on the same.\nExplain how spread spectrum systems work in comparison with other channel access approaches.\n\nContent details\n\nOverview of wireless networks and their components\nLine of sight propagation and path loss modeling\nFading and other multipath effects\nEffects of the earth’s curvature, rain effects, and atmospheric absorption\nCellular network systems and planning\nSatellite systems, including GPS\nSpread spectrum systems\nAdvanced topics from research\n\nFaculty\n Edwin Mugume\n\n',
 '\n\n\n18-785 \xa0 Data, Inference, and Applied Machine Learning\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis course will provide the methods and skills required to utilize data and quantitative models to automate predictive analytics and make improved decisions. From descriptive statistics to data analysis to machine learning the course will demonstrate the process of collecting, cleaning, interpreting, transforming, exploring, analyzing, and modeling data with the goal of extracting information, communicating insights, and supporting decision-making. The advantages and disadvantages of linear, nonlinear, parametric, nonparametric, and ensemble methods will be discussed while exploring the challenges of both supervised and unsupervised learning. The importance of quantifying uncertainty, statistical hypothesis testing, and communicating confidence in model results will be emphasized. The advantages of using visualization techniques to explore the data and communicate the outcomes will be highlighted throughout. Applications will include visualization, clustering, ranking, pattern recognition, anomaly detection, data mining, classification, regression, forecasting, and risk analysis. Participants will obtain hands-on experience during project assignments that utilize publicly available datasets and address practical challenges.\nPrerequisites\nNone\nFaculty\nPatrick McSharry\n\n',
 '\n\n\n18-787-K3 \xa0 Data Analytics\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis course will take a practical approach to solving challenges in the public and private sectors using data analytics.\xa0 A number of different themes will be explored as case studies in order to demonstrate how data-driven decision-making has widespread applications.\xa0 The course will examine how the question being posed, the available data, and the selected modeling approach all come together to arrive at a feasible solution. A range of quantitative techniques, involving both linear and nonlinear methods will be presented for dealing with numerical structured datasets. Substantial emphasis will be placed on the process of delivering data analytics via a dashboard to facilitate decision-making and policy-making.\xa0 The course content will be structured to provide a roadmap for carrying out the necessary procedures and will be illustrated using case studies, reading material, and previously published models. Participants will obtain hands-on experience by working on specific challenges with real-world data through a carefully structured set of assignments. \xa0\nLearning objectives\n\nThe objective of this course is to provide students with practical experience in undertaking a data analytics project to address a challenge of their choice. This process involves: (1) proposing a feasible research plan based on a challenge that can be addressed with available data; (2) exploratory analysis of the data; (3) construction and evaluation of a quantitative model; and (4) communication of the model output to decision-makers.\xa0 This will involve identifying a relevant key performance indicator and collecting appropriate explanatory variables. The ability to write a report that documents the challenge, data, analysis, model, evaluation, and feasibility of deploying the analytics in a real-world setting will be assessed. Applications will include forecasting, classification, novelty detection, and risk monitoring.\xa0\xa0\n\nOutcomes\nAfter completing this course, students should be able to:\xa0\n\n\nDesign a data analytics project in response to a specific challenge\nDownload and organize data for addressing the challenge\nExplore the dataset using visualization techniques\nApply a range of quantitative techniques\nDiscuss the advantages and disadvantages of different models\nSelect an approach that is optimal for meeting the objective\nPresent conclusions and recommendations\nCommunicate model output to decision-makers \n\n\nContent details\n\nWeather\nRenewable energy\nDemand\nRisk Assessment\nHealth and telemedicine\nEarly warning systems\n\nPrerequisites\n\nData and Inference and Applied Machine Learning Mini-Courses\nBackground in quantitative discipline (Engineering, Computer Science, Physics, Mathematics, Statistics)\nProgramming\n\nFaculty\nPatrick McSharry\n\n',
 '\n\n\n18-788-K4 \xa0 Big Data Science\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\n\nThe proliferation of mobile technology, wireless sensors, and social media provides a means of monitoring socio-economic activity, consumption of resources, and human mobility. Recent advances in data science are now capable of coping with the technical challenges of collecting, managing, and developing actionable insights from big data. Partnerships between academia, government, and the private sector are at the heart of the revolution that is currently demonstrating how data is a valuable commodity and a source of intellectual property. This course will take a practical approach to solving challenges in the public and private sectors using a collection of techniques that constitute this new multidisciplinary field known as data science. A number of different themes will be explored as case studies in order to demonstrate how big data collected from a wide range of disparate sources can be combined to provide insights, drive decisions, and influence policy. The course content will be structured to provide a roadmap for deploying data science techniques using case studies, reading material, and previously published models. Participants will obtain hands-on experience by working on real-world datasets during assignments.\n\nLearning objectives\n\nThe objective of this course is to provide students with practical experience in the different techniques and skills that constitute the field of data science. In particular, these case studies are selected to demonstrate the technical challenges of dealing with the three V’s that define big data (volume, velocity, and variety). \xa0The various steps required will include (1) exploration of data using visualization techniques; (2) construction of features; (3) evaluation of a collection of models; (4) consideration of how a decision-maker can utilize the analysis; and (5) development of a dashboard for displaying the results of the analysis. The sources of big data will range from surveys to mobile data to satellite imagery and therefore involve both structured and unstructured data.\n\nOutcomes\nAfter completing this course, students should be able to:\xa0\n\n\nIdentify sources of big data in response to a specific challenge\nDownload and organize data for addressing the challenge\nExplore the dataset using visualization techniques\nDevelop a number of features to extract information\nConstruct a range of quantitative models\nDiscuss the advantages and disadvantages of different models\nSelect an approach that is optimal for meeting the objective\nPresent conclusions and recommendations\nCommunicate model output to decision-makers\n\n\nContent details\n\n\nWeather and climate impacts\nSurvey data\nGoogle trends\nSentiment analysis\nMobile data\nBig data for development\n\nPrerequisites\n\nData and Inference and Applied Machine Learning Mini-Courses\nBackground in quantitative discipline (Engineering, Computer Science, Physics, Mathematics, Statistics)\nProgramming\n\nFaculty\nPatrick McSharry\n\n\n',
 '\n\n\n18-797 \xa0 Machine Learning for Signal Processing\n Location: Pittsburgh \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nSignal Processing is the science that deals with the extraction of information from signals of various kinds. This has two distinct aspects: characterization and categorization. Traditionally, signal characterization has been performed with mathematically-driven transforms, while categorization and classification are achieved using statistical tools.  Machine learning aims to design algorithms that learn about the state of the world directly from data.  An increasingly popular trend has been to develop and apply machine learning techniques to both aspects of signal processing, often blurring the distinction between the two.  This course discusses the use of machine learning techniques to process signals. We cover a variety of topics, from data-driven approaches for the characterization of signals such as audio including speech, images, and video to machine learning methods for a variety of speech and image processing problems.\nCheck the original course description for the most recent information.\nPrerequisites\n\nLinear Algebra\nBasic Probability Theory\nSignal Processing\nMachine Learning\n\nCourse format\nOnline\nFaculty\nBhiksha Ramakrishnan\n\n',
 '\n\n\n18-799-K \xa0 Artificial Cognitive Systems\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse discipline\nECE\nCourse description\n\nThe goal of this course is to expose students to a comprehensive cross-section of the main elements of artificial cognitive systems, a discipline that draws on artificial intelligence, developmental psychology, and cognitive neuroscience. Concepts are introduced in an intuitive, natural order, with an emphasis on the relationships among ideas and building to an overview of the field, equipping students with sufficient knowledge and understanding to study specific topics in greater depth. The course is delivered through a mix of teaching, reading, and in-class discussion. A particular feature of the course is its emphasis on progressive deepening: covering topics several times in increasing detail as the course proceeds. This approach helps the student develop her or his understanding of each topic, and the relation of that topic to other topics. Student progress is assessed by a series of multiple-choice tests and written individual & group assignments.\n\n\nLearning objectives\nStudents will learn about the nature of cognition and the motivation for studying artificial cognitive systems and they will be introduced to different ways to model cognitive systems. Students will learn about the three paradigms of cognitive science: the cognitivist paradigm, the emergent paradigm, and the hybrid paradigm. They will examine cognitive architectures in some detail, learning about the role of a cognitive architecture, its desirable characteristics, its core cognitive abilities, and the different options when designing one. They will study several representative cognitive architectures at various levels of detail. Students will learn about autonomy, both robotic and biological, and they will be introduced to the concepts of constitutive autonomy, behavioral autonomy, homeostasis, allostasis, and self-organization. They will learn about embodiment and the various hypotheses on the embodiment, including empirical evidence to support these hypotheses. They will study development and learning and how these two processes differ, including motivation, drives, and value systems. Students will learn about the different forms of memory and how these are involved in different types of anticipation, through self-projection, prospection, and internal simulation. They will learn about the different stances taken on knowledge and representation and the symbol grounding problem. Finally, they will learn about social cognition, social interaction, and the relevance of joint action, shared goals, shared intention, and joint attention. In this context, they will also learn about reading intentions, theory of mind, instrumental helping, collaboration, interaction dynamics, and different schools of thought on cognitive development.\nOutcomes\n\nAfter completing this course, students will be able to:\n\nIdentify the key attributes of a cognitive system.\nExplain the main characteristics of cognitivist, emergent, and hybrid cognitive science.\nCompare cognitive architectures using several criteria and design an outline cognitive architecture for a given application scenario.\nExplain how a specific hybrid cognitive architecture works and show how it can be used to allow a robot to reason about its environment and achieve goals set by a user.\nExplain the implications of computational functionalism and its relationship to the embodied cognition thesis.\nDistinguish between learning and development and explain how these processes are facilitated by different forms of memory and knowledge.\nDistinguish between instrumental helping, cooperation, and collaboration.\nExplain how social cognition relies on the ability to take perspectives and form a theory of mind.\nExplain the interplay between joint action, shared goals, shared intention, and joint attention in social cognition.\n\nContent details \n\nThe nature of cognition: course overview, motivation.\nParadigms of cognitive science: cognitivist, emergent, and hybrid\nCognitive architectures\nAutonomy\nEmbodiment\nDevelopment and learning\nMemory and prospection\nKnowledge and representation\nSocial cognition\n\nPrerequisites\nNone\nFaculty\nDavid Vernon\n\n',
 '\n\n\n18-799-L \xa0 Robotics: Principles and Practice\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse discipline\nECE\nCourse description\nRobotics is the discipline that is concerned with physical, autonomous systems that can sense their environment and act on it to achieve goals, either by moving around their environment, moving objects in their environment, or both. This course explains how they do this, covering the theoretical knowledge required to sense the state of the robot and its environment and control the robot to accomplish its tasks. This theory is put into practice throughout the course using robot simulators and physical robots. Students will gain a greater understanding of each topic through a series of individual and group assignments and exercises, using the principles they have learned to write software that allows a robot to navigate to given targets and manipulate objects based on visual sensing. This course is an ideal foundation for further study in the field of robotics. Student progress is assessed by a series of multiple-choice tests and written individual & group assignments.\nLearning objectives\nStudents will be introduced to the different types of robots and the components, effectors, actuators, sensors, and control systems that are used for visual sensing, locomotion, and object manipulation. For mobile robots, students will learn the main principles of odometry, position estimation, kinematics, inverse kinematics, control, locomotion, path planning, and navigation. For robot manipulators, they will learn the theory required for pose specification, object manipulation, and task-level robot programming. For visual sensing, students will learn the fundamentals of image processing, image analysis, feature extraction, classification, camera calibration, and 2D & 3D computer vision. They will learn how to program robots using ROS (Robot Operating System), C/C++, and OpenCV, putting into practice in the lab what they have learned in the classroom.\nOutcomes\nAfter completing this course, students will be able to:\n\nExplain the operation of the different components of a robot, including sensors, actuators, effectors, and control systems.\nDescribe the different types of robot and their applications.\nExplain how mobile robots control their effectors for locomotion using odometry and absolute position estimation.\nUse graph-based techniques to plan an effective path to a goal position and orientation.\nUse homogeneous transformations, vectors, and quaternions to specify the position and orientation of objects.\nWrite task-level robot programs to manipulate objects.\nUse robot vision to detect objects and determine their position and orientation.\nApply their knowledge to write ROS-based computer programs that control mobile robots and robot arms, enabling the robots to recognize and manipulate objects and navigate their environments.\n\nContent details\n\nOverview of robotics\nRobot components\nSensors, actuators, effectors, control systems\nThe Robot Operating System (ROS)\nWriting ROS software: publishers, subscribers, and services\nMobile robots\nAbsolute and relative position estimation\nRobot kinematics, odometry, locomotion, navigation, path planning\nRobot manipulators\nCoordinate reference frames, homogeneous transformations, and pose specifications\nTask-level programming, pick-and-place applications\nInverse kinematics\nRobot vision\nOptics and sensors\nImage acquisition and representation\nImage processing and image analysis\nFeature extraction and classification\nCamera models, inverse perspective transformations, and stereo vision\n\nPrerequisites\nNone\nFaculty\nDavid Vernon\n\n',
 '\n\n\n18-799-R \xa0 Cognitive Robotics\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse discipline\nECE\nCourse description\nThis course provides an introduction to cognitive robotics, a branch of robotics in which knowledge plays a central role in supporting action selection, planning, and execution. Cognition is essential for robots to be able to perform tasks in response to a request by a human, but without the human having to specify explicitly everything that is needed to fulfill the task. Many everyday activities fall into this category. For example, when we ask someone to fetch something for us, we don’t have to say how they are to fetch it. The goal of the course is to give students an understanding of what is involved in the design of a cognitive robot and give them the knowledge and skills to produce working implementations for simple instances of cognitive fetch and place tasks. Students will learn through a combination of classroom lectures and laboratory assignments that consolidate their understanding through practical exercises using both robot simulators and physical robots. Student progress is assessed by a series of multiple-choice tests and individual & group assignments.\xa0\nLearning objectives\nStudents will be introduced to the general area of robotics. They will learn how to develop software using ROS (Robot Operating System) and they will learn the principles of robot manipulation and task-level robot programming, including the mathematical tools required to specify the position and orientation of robots and objects in the robot environment. Students will be introduced to the main topics in artificial cognitive systems, including the different paradigms of cognitive science and cognitive architectures. These components form the foundation for the remainder of the course, involving a detailed study of the CRAM (Cognitive Robot Abstract Machine) cognitive architecture, building on ROS, and exploiting functional programming in Lisp to reason about and execute under-determined tasks in everyday activities. Students will learn how to write CRAM plans in the Lisp-based CRAM plan language for the PR2 humanoid mobile robot in a simulation environment and the Lynxmotion AL5D robot manipulator, both simulated and real.\nOutcomes\nAfter completing this course, students will be able to:\n\nExplain what differentiates cognitive robotics from other branches of robotics.\nWrite publisher, subscriber, and services software C++ using ROS.\nUse homogeneous transformations, vectors, and quaternions to specify object pose.\nProgram a robot manipulator in C++ to perform pick-and-place tasks.\nDescribe the main paradigms of cognitive science.\nIdentify several examples of cognitive architectures and describe how they work.\nExplain the operation of the CRAM cognitive architecture.\nWrite and execute Turtlesim programs using the Lisp-based CRAM plan language.\nWrite and execute robot manipulation programs using the Lisp-based CRAM plan language.\nUse the Bullet and Gazebo physics engine robot simulators to execute CRAM plans.\nWrite and execute pick-and-place plans for the Lynxmotion AL5D robot manipulator.\n\nContent details\n\nOverview of cognitive robotics\nThe components, structure, and operation of a robot\nSoftware development with ROS: packages, topics, publishers, and subscribers\nRobot manipulation and task-level robot programming\nArtificial cognitive systems\nCognitive architectures\nThe CRAM cognitive architecture\nFunctional programming in Lisp\nThe CRAM plan language\nTurtlesim with CRAM: plans, motion designators, process modules, and reasoning with Prolog\nWriting fetch-and-place CRAM plans for the PR2\nWriting pick-and-place CRAM plans for the Lynxmotion AL5D robot manipulator\n\nPrerequisites\nThere are no prerequisites for taking this course, although it would be an advantage to have taken 18-799-L Robotics: Principles and Practice and 18-799-K Artificial Cognitive Systems.\nFaculty\nDavid Vernon\n\n',
 '\n\n\n18-799-RW \xa0 Applied Computer Vision\n Location: Africa \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse discipline\nECE\nCourse description\nThis course provides students with a solid foundation in the key theories and practical applications of computer vision. It focuses on the techniques required for a variety of domains like robot vision, industrial inspection, and video surveillance. A key focus of the course is on the effective, practical implementation of computer vision solutions using software authored by the students and standard computer vision libraries. An introduction to deep learning and popular architectures therein is also provided.\nThe course covers optics, sensors, image formation, image acquisition & image representation. Subsequently, we will cover morphological operations, edge detection, region growing, and object segmentation. Building on this, the course then proceeds to deal with object detection and recognition in 2D, addressing interest point operators, gradient orientation histograms, the SIFT descriptor, color histogram intersection and back projection, the Hough transform, and template matching. The problem of recovery of 3D information is then addressed, introducing homogeneous coordinates and transformations, the perspective transformation, camera model, inverse perspective transformation, stereo vision, and epipolar geometry, as well as other depth cues.\nSubsequently, the course will provide a brief introduction to a few machine learning techniques like K-means clustering, Markov Random Fields, and Bayesian classification. Color-based segmentation, snakes, and graph cuts will be studied. We will then discuss video image processing, the detection and tracking of moving objects.\nThe course finishes by addressing the important role played by machine learning in computer vision today. We will introduce deep learning and convolution neural networks as applied to computer vision. Popular architectures and applications will be discussed.\nLearning objectives\n\nApply their knowledge of image acquisition, image processing, and image analysis to extract useful information from visual images.\nDesign, implement, and document appropriate, effective, and efficient software solutions for a variety of real-world computer vision problems.\nExploit standard computer vision software libraries in the development of these solutions.\nApply deep learning to solve classification problems using computer vision.\n\nOutcomes\n\nUse OpenCV, C++, CMake, and gcc to write computer vision programs\nExplain the theory and practical aspects of several computer vision algorithms\nUnderstand the applicability of computer vision to a wide range of industrial, consumer, and commercial problems\nCombine different computer vision algorithms to build practical applications\n\nPrerequisites\nPrior knowledge of coding in C or C++ would help greatly.\nFaculty\nMoise Busogi\n\n',
 '\n\n\n18-859-R \xa0 Networking Lab\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse discipline\nMSIT\nCourse description\nThis course aims to give hands-on knowledge of network principles and the challenges to make an operational network. By the end of this course, students should be able to deploy and configure a basic enterprise network.\nLearning objectives\nStudents will learn to apply networking principles through the set-up, configuration, and testing of actual network switches, routers, and other networking and computing equipment. Students will complete weekly labs that require them to implement a specific network configuration. Students will get familiar with switching and routing protocols through intensive lab work and projects.\nOutcomes\nAfter completing this course, students will be able to do the following:\n\nDesign and configure an Ethernet LAN with VLANs\nOptimize the use of IPV4 (IPV4 subnetting)\nConfigure various routing protocols\nDeploy ACL-based Firewalls\nUnderstand IPV6 and its subnetting\nDesign an SDN network\n\nContent details\n\nBasic Ethernet LANs and Switches\nEthernet Design, VLANs & Troubleshooting\nAdvanced Ethernet VLANs, STP, and Trunking\nIPv4 Subnetting\nImplementing IPv4 on routers\nRouting Protocols (RIP version I)\nRouting Protocols (RIP version II)\nRouting Protocols (EIGRP)\nRouting Protocols (OSPF)\nAccess Lists and NAT\nIPv6 Subnetting\nSDN and Cloud\n\nPrerequisites\n04-641 Fundamentals of Telecommunications and Computer Networks (may be taken concurrently) or a similar class.\nFaculty\nEmmanuel Ndashimye\n\n',
 '\n\n\n18-861 \xa0 Energy Project Development and Economic Studies\n Location: Africa \n           Units: 6\n           Semester Offered: Fall\n\n\n',
 "\n\nCourse discipline\nECE\nCourse concentration\nEnergy (Kigali)\nIntelligent Physical Systems (Pittsburgh)\nCourse description\nThis course introduces concepts and tools for the development and analysis of energy-sector or energy-enabled infrastructure projects. Students will learn about the project development processes through case studies in the African context. They will also develop the ability to perform basic technical and economic feasibility assessments through directed projects.\nView the course syllabus for more information.\nLearning objectives\nThe course's primary goal is for students to gain experience and skills in developing pre-feasibility and feasibility-level models of energy-sector or energy-enabled projects. Students identify and evaluate techno-economic success factors that define the spread of different use cases. Students should practice and improve their critical thinking skills in technical, social, and financial aspects that relate to these projects.\nOutcomes\nStudents will finish the course with experience articulating and critiquing project proposals, in addition to defining their own self-directed final project.\nContent details\nTopics include:\n\nfinancial modeling\ntechnical performance estimation\nsocial and environmental impact assessment\nregulatory/policy analysis\n\nPast projects have spanned these examples:\n\nindependent power plants\nmini/micro grids\nirrigation projects\nelectric mobility projects\n\nPrerequisites\nNone\nFaculty\nBarry Rawn\n\n",
 '\n\n\n18-862 \xa0 Control of Grid-Connected Machines & Converters\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse discipline\nECE\nCourse concentration\nEnergy (Kigali)\nIntelligent Physical Systems (Pittsburgh)\nCourse description\nElectric machines are the backbone of power systems and any production process in the world. However, if uncontrolled or uncoordinated, they cause blackouts. Converters for renewables and electric vehicles are also challenging engineers to revisit and revise electric machine analysis and control. This course offers a classically-based, yet forward-looking understanding of electric machines, converters, their operation, control, and applications in vehicular technology and distributed generation, as well as their effects at a system level.\xa0\nLearning objectives\nStudents in the course will examine how to:\n\nDerive dynamic models for power system elements\nDesign electric vehicle motor and battery converter controls\nSelect control parameters for each type of device to better serve secure power system operation\n\nOutcomes\nStudents will gain an appreciation of how to elaborate and revise grid codes in response to technological advances and sector transformation. They will gain skills that enable them to analyze power system stability phenomena, identify contributing factors, and recommend how to mitigate them.\nContent details\n\nVector controls\nPark Transformation\nInduction and synchronous machine modeling and control\nPower system stability\nGrid code\nBlackouts\n\nPrerequisites\nUndergraduate course in electric circuits or linear systems or permission from the instructor.\nFaculty\nBarry Rawn\n\n',
 '\n\n\n18-863-K3 \xa0  Power Systems Operations\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 "\n\nCouse discipline\nECE\nCourse concentration\nEnergy (Kigali)\nIntelligent Physical Systems (Pittsburgh)\nCourse description\n\n\nThis course examines the human-aided monitoring, planning, and decision-making that enable reliable, secure, and safe operation of an electric power system, on the time scale of minutes to weeks. We will study selected technical details via case studies of adding new equipment or processes.\xa0\nView the syllabus for more information.\nLearning objectives\n\n\n\nStudents will be introduced to the requirements of a grid owner/operator and the time frames of activity that structure efforts to meet and maintain performance targets.\nOutcomes\n\n\n\nAfter completing this course, students will be prepared to analyze and evaluate the consequences of an electrical grid's physical and operational processes of connecting new equipment or adopting new communications and information systems. They will be familiar with the use of selected power system software tools.\n\n\nContent details\n\n\n\n\n\nOperational planning and control centers\nInformation and communication systems\nLoad and generation forecasting\nUnit commitment and dispatch\nMaintenance and outage management\nPower system security\n\n\nFaculty\nBarry Rawn\n\n\n\n",
 '\n\n\n18-864-R4 \xa0 Power System Expansion\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse discipline\nECE\nCourse concentration\nEnergy (Kigali)Intelligent Physical Systems (Pittsburgh)\nCourse description\n\n\n\nThis course will examine how the growth of electricity infrastructure is planned, evaluated, and sustained. Case studies will be selected from the spectrum of microgrids, rural grid extension, national reinforcement, and international tie-lines.\n\nView the syllabus for more information.\nLearning objectives\n\n\n\n\n\nStudents will gain an overview of the delivery processes of electrification: planning, design, construction, maintenance, and economics. They will learn about the growth of electricity demand, cost aspects of generation, and network planning. They will also study the capabilities of available equipment for generation and transport. \nOutcomes\n\n\n\n\nAfter completing this course, students will be able to contribute to developing the rationale, finance, technical design, and operational frameworks of new and growing power systems.\n\n\nContent details\n\n\n\nFixed and variable cost of energy conversion and transport, spatial and sectoral load forecasting, public and private models of investment and cost recovery, line and protection design, interconnection of power systems, and power system reliability.\nPrerequisites\nNone\nFaculty\nBarry Rawn\n\n\n\n\n',
 '\n\n\n18-865 \xa0 Photovoltaic Systems Engineering\n Location: Africa \n           Units: 6\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse discipline\nECE\nCourse concentration\nEnergy (Kigali)\nIntelligent Physical Systems (Pittsburgh)\nCourse description\n\nThis course introduces basic engineering concepts for photovoltaic systems. Topics covered include solar resource assessment, PV cells and modules, system components, performance modeling, system sizing, loss mechanisms, energy yield assessment, and project economics. Different applications and business models for PV technology will be discussed including utility-scale PV power plants, rooftop systems, and off-grid systems. The implications of relevant policy will be explored including net metering and independent power producers. The course will be interesting to a general audience but is focused in particular on applications in the developing world.\nView the syllabus for more information.\n\nLearning objectives\n\n\n\n\nStudents in the course will examine how to:\n\nAssess local solar resource\nSize PV system components for different applications\nEstimate energy yield from PV system\nEvaluate the economic performance of PV system\n\n\n\n\nOutcomes\n\n\nStudents are able to determine appropriate technology for different applications of solar energy and assess the impacts of PV-relevant policy choices.\n\nContent details\n\n\nSolar resource assessment\nPV cells and modules\nBalance of system components\nPV system applications\nComponent sizing\nEnergy yield assessment\nEconomic analysis\n\n\n\nPrerequisites\nNone\nFaculty\n Barry Rawn\n\n\n',
 '\n\n\n18-866-M3 \xa0 Off-Grid Electricity Systems\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nOver one billion people in the world still lack access to electricity, many of them out of reach of the electricity grid in the near term. This course will explore the technologies and architectures used to provide electricity services in off-grid regions of the developing world including mini/microgrids and solar home systems.\nLearning objectives\nDefinitions relevant to energy access and development will be discussed. Basic system design principles for off-grid components will be applied. Students will use HOMER modeling software to evaluate tradeoffs in component performance. In addition to studying off-grid technologies, the course will also explore the context in which these systems are deployed, their role in enabling development, and policy challenges to implementation.\nOutcomes\nStudents gain the skills and critical perspectives required to characterize the performance and economic viability of off-grid electricity systems.\nContent details\n\nEnergy poverty and energy for development\nThe multi-tier framework\nOff-grid system architecture\nDesign and control\nOff-grid generation and storage technologies\nLoad and energy resource assessment\nSystem optimization with HOMER Pro\n\nPrerequisites\nNone\nFaculty\nBarry Rawn\n\n',
 '\n\n\n18-867-R4 \xa0 Applied Smart Grid Telecoms\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse discipline\xa0\nECE\nCourse concentration\nEnergy (Kigali)\nIntelligent Physical Systems (Pittsburgh)\nCourse description\nThis course examines applications of standards for communications protocols in smart grids, covering relevant standards such as IEC61850 and DNP3. Participants will complete assignments based on real-world examples that explore the implementation and limitations of smart grid telecommunications. Appropriate for communications engineers wanting to understand the power grid, and power engineers wanting to develop their applied knowledge of communications.\nView the syllabus for more information.\nLearning objectives\nThe course is intended to help students understand the selection of appropriate protocols and physical layer options in order to serve the communications and flexibility needs of power grids. Students will also develop the ability to interpret messages in different protocols.\nOutcomes\nAfter completing this course, students will be familiar with existing protocols in the smart grid, how they have been induced by the particularities of the physical layers involved, and the smart grid architecture concepts that they implement.\nContent details\n\nOSI Network Layers\nService levels\nAccess networks\nDemand side management\nDigital substations\nIEC61850\nDNP3\n\nPrerequisites\nNone\nFaculty\nBarry Rawn\n\n',
 '\n\n\n18-883-L4 \xa0 Integrated Energy Systems\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nOur energy systems – from electricity to cooking and transportation fuels – are at the core of our economies, powering commerce and industry. They are critical to achieving development goals like food security and universal access to quality healthcare. Energy systems are multidimensional and complex, and understanding these linkages is key to designing sustainable, low-carbon futures. This interdisciplinary course sets the foundation for future energy professionals by exploring how energy systems are integrated into and shape our society, and what this means for technology design and decision-making.\nLearning objectives\nThis course unpacks timely, current case studies of energy projects across East and West Africa. Students will: \n\nIdentify data, methods, and tools for evaluating project impact\nDevelop and assess energy innovation opportunities \nRecognize the critical social and cultural dimensions of Africa’s energy transition\n\nContent details\nThis course explores questions including: \n\nWhat are the latest innovations for integrating smart, new, digital technologies for electrification in Africa and what challenges do they solve? \nHow does energy access directly impact the future of agriculture, mobility, work, and the future of economic growth in Africa?\nWhat environmental justice impacts does energy infrastructure have on marginalized communities in Africa?\nHow can data tools like the Multi-tier Tracking Framework or the Global Solar Atlas help us identify gaps and solutions for building sustainable energy systems?\n\nFaculty\nRebekah Shirley\n\n',
 '\n\n\n18-899-L3 \xa0 Human-Robot Interaction\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse discipline\nECE\nCourse description\nIn the future, robots will increasingly become a part of our daily lives. We will interact with them and they with us, in our hospitals, offices, shops, and homes as well as in our factories. Human-robot interaction (HRI) is concerned with the problem of making this interaction natural and effective. It is a multidisciplinary field and includes elements of engineering, computer science, robotics, psychology, sociology, and design. This course explores the way in which these disciplines contribute to the field of HRI and it will give students the foundation needed to develop robot systems that can interact effectively with humans. The course is delivered through a mix of teaching, reading, and in-class discussion. Students will prepare the lectures. For each class, all students will prepare a synthesis that would be suitable for teaching the material. The material should be abstracted from the corresponding chapter in the course textbook. During the class, one or more students will be randomly selected to present her or his synthesis. After the presentation, we will review the material delivered and discuss how it might be improved. Student progress is assessed by a series of multiple-choice tests and written individual & group assignments.\xa0\nLearning objectives\nStudents will be introduced to the different disciplines that contribute to an understanding of the interaction and the role they play in developing a successful HRI system. They will learn about the different components of a robot and the software control of a robot. They will learn what is required for effective interaction between humans and robots. They will be introduced to the different interaction modalities – spatial, non-verbal, verbal, and emotional – and how they relate to robotics. Students will learn about the problems that still exist in the field and how to assess possible solutions to these problems. They will also learn about the current and future use of robots in society in a variety of applications.\nOutcomes\nAfter completing this course, students will be able to:\n\nExplain what elements are included in the field of human-robot interaction.\nDescribe the physical parts that are commonly used in robotics and how they work.\nIdentify the key elements to consider when designing a robot.\nDescribe the major issues for robots in spatial interaction.\nExplain how robots can manage non-verbal interaction.\nExplain how robots can manage verbal interaction.\nDescribe how emotions relate to robotics.\nIdentify existing problems and explain how to assess potential solutions.\nList the major applications of robots and the issues related to them.\nExplain how robots are currently used in society.\nIdentify what the future may hold for HRI.\n\nContent details\n\nOverview of human-robot interaction\nThe components, structure, and operation of a robot\nRobot design considerations\nSpatial interaction\nNon-verbal interaction\nVerbal interaction\nEmotions\nResearch methods\nApplications\nRobots in society\n\nPrerequisites\nThere are no prerequisites for taking this course, although it would be an advantage to have taken 18-799-K Artificial Cognitive Systems and 18-799-L Robotics: Principles and Practice.\nFaculty\nDavid Vernon\n\n',
 '\n\n\n18-899-L4 \xa0 Neurorobotics\n Location: Africa \n           Units: 6\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse discipline\nECE\nCourse description\nNeurorobots are robots whose control is based on a model of some aspect of the operation of the brain. This course explores neurorobotics as a possible means to develop autonomous systems that have some level of biological intelligence. It will give students an understanding of intelligence in biological systems from the perspective of cognitive neuroscience and insights into how this understanding can be used to augment alternative knowledge-based approaches to the development of cognitive robots. The course is delivered through a mix of teaching, reading, and in-class discussion. Students will conduct simple neurorobotics experiments using a robot simulator to illustrate and consolidate what they have learned in class. Student progress is assessed by a series of multiple-choice tests and written individual & group assignments.\xa0\nLearning objectives\nStudents will be introduced to the roots of neurorobotics in cybernetics and cognitive neuroscience and some simple principles that underly emergent behavior. They will learn about the different forms of control in robotics and neuroscience. They will learn about natural and artificial neurons and networks of the neurons, how they are modeled, and how they operate. Students will be introduced to the structure of the brain, the principles of neuromorphic computing, and the principles of neurorobot design. They will learn how navigation is accomplished using neural models and they will learn how neurophysiology and psychology impact cognitive development and social cognition. They will also learn about the importance of emotion in social interaction. They will learn what the future of neurorobotics might hold and what applications might benefit from the use of neurorobotics.\nOutcomes\nAfter completing this course, students will be able to do the following.\n\nSummarize the origins of neurorobotics in cybernetics and neuroscience.\nExplain how principles from neuroscience provide the basis for the behavior of Braitenberg vehicles.\nDescribe the different levels of control in robotics and neuroscience.\nDescribe the structure of natural & artificial neurons and neural networks and explain formal models of their operation.\nOutline the structure of the brain.\nDescribe the principles of neuromorphic computing.\nDistinguish between different forms of learning in neural systems and explain their operation.\nExplain each of the neurobot design principles.\nExplain the principles of neurorobot navigation.\nDiscuss the neuroscience and psychology of development and social cognition.\nExplain the importance of emotion and affect on social interaction.\nAssess which applications in the future might benefit from adopting a neurorobotic perspective.\nRun simple neurorobotics experiments using the Webots robot simulator.\n\nContent details\n\nThe origins of neurorobotics\nIntroduction to neuroscience\nLearning and memory\nReinforcement learning and prediction\nNeurorobot design principles: action, reaction, adaptive behavior, behavioral tradeoffs\nNeurorobotic navigation\nDevelopmental and social robotics\nThe future of neurorobotics\n\nPrerequisites\nThere are no prerequisites for taking this course, although it would be an advantage to have taken 18-799-K Artificial Cognitive Systems and 18-799-L Robotics: Principles and Practice.\nFaculty\nDavid Vernon\n\n',
 '\n\n\n18-980 \xa0 M.S. Graduate Project\n Location: Pittsburgh \n           Units: Variable\n           Semester Offered: Fall, Spring\n\n\n',
 "\n\nCourse description\nMaster's level research and it requires ECE approval.\nSee the original course description for the most recent information.\nFaculty\nJames Bain\n\n",
 '\n\n\n18-989 \xa0 Introduction to Graduate Studies\n Location: Pittsburgh \n           Units: 1\n           Semester Offered: Fall\n\n\n',
 "\n\nCourse description\nThe Introduction to Graduate Studies course is designed to increase awareness and understanding of academic integrity issues, Carnegie Mellon community standards, and the ethical job search. This is done via various sessions/modules that are already offered via several entities throughout campus (such as the CPDC, ICC, and GCC). Topics covered include paraphrasing and citation, participating in the US classroom, avoiding plagiarism, unconscious bias, combating sexual violence on campus, finding jobs and internships, negotiation, communication, relationship building, and other topics of interest. The course culminates in students writing a reflection paper. For international students, the paper should compare Western academic and cultural standards to those of their home country. For domestic students, the paper should be a reflection on CMU's community standards. Active participation in 5 sessions/modules in the above-mentioned areas and the submission of the reflection paper will determine a pass/fail grade.\nSee the original course description for the most recent information.\nPrerequisites\nNone\nFaculty\nJames Bain\n\n",
 '\n\n\n19-608 \xa0 Privacy, Policy, Law & Tech\n Location: Africa \n           Units: 12\n           Semester Offered: Fall\n\n\n',
 '\n\nCourse description\nThis course focuses on policy issues related to privacy from the perspectives of governments, organizations, and individuals. We will begin with a historical and philosophical study of privacy and then explore recent public policy issues. We will examine the privacy protections provided by laws and regulations, as well as the way technology can be used to protect privacy. We will emphasize technology-related privacy concerns and mitigation, for example: social networks, smartphones, behavioral advertising (and tools to prevent targeted advertising and tracking), anonymous communication systems, big data, and drones. Programming skills are not required. This course will include a lot of reading, writing, and class discussion. Students will be able to tailor their assignments to their skills and interests, focusing more on programming or writing papers as they see fit. However, all students will be expected to do some writing and some technical work. A large emphasis will be placed on research and communication skills, which will be taught throughout the course.\nLearning objectives\nBy the end of this course, students should:\n\nBe able to discuss why privacy is important to society\nBe familiar with the fair information practice principles as well as the privacy law and policy landscape in the United States\nUnderstand the differences between privacy regulation in the US and EU, and be able to discuss different regulatory approaches to privacy\nBe able to read, understand, and evaluate privacy policies\nUnderstand the mechanics of online tracking and other technologies with privacy implications\nBe able to communicate the privacy implications of technology with policy-makers, lawyers, and engineers\n\nStudents should be prepared to pass the IAPP Certified Information Privacy Professional exams.\xa0\nVisit the course page for more information.\nPrerequisites\nNone\nCourse format\nDistance learning\nFaculty\xa0\nLujo Bauer\n\xa0\n\n',
 '\n\n\n19-625 \xa0 Sustainable Energy for the Developing World\n Location: Pittsburgh \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nThis course examines the current state of the energy system in developing countries and the challenges these countries will face in sustainably meeting their energy needs in the 21st century. The following are examples of questions and issues we will cover throughout the semester. What is the current status of the energy system in the developing world? What is the role of energy in supporting economic growth and alleviating poverty? What are the future energy needs of developing countries? What are the challenges developing countries will face as they build/improve their energy systems? What technologies are available to meet the energy challenges in the developing world?\nView the course syllabus for more information.\nLearning objectives\nThrough readings, class discussions, and a final project, students will be expected to achieve the following learning outcomes: \n\nDescribe the role of energy in supporting economic growth and poverty alleviation.\nDescribe and discuss the technical, economic, and social challenges behind the deployment of energy systems in developing communities.\nApply quantitative and qualitative methods to evaluate the energy needs in the developing world and compare energy alternatives for the developing world.\nArticulate the characteristics that define energy sustainability.\n\nContent details\nThis course examines the current state of the energy system in developing countries and the challenges these countries will face in sustainably meeting their energy needs in the 21st century. The following are examples of questions and issues we will cover throughout the semester:\n\nWhat is the current status of the energy system in the developing world?\nWhat is the role of energy in supporting economic growth and alleviating poverty?\nWhat are the future energy needs of developing countries?\nWhat are the challenges developing countries will face as they build/improve their energy systems?\nWhat technologies are available to meet the energy challenges in the developing world?\n\nPrerequisites\nNone\nFaculty\nPaulina Jaramillo\n\n',
 '\n\n\n24-784 \xa0 Trustworthy AI\n Location: Pittsburgh \n           Units: 12\n           Semester Offered: Spring\n\n\n',
 '\n\nCourse description\nInnovations driven by recent progress in artificial intelligence such as deep learning and reinforcement learning, have shown human-competitive performance. However, as research expands to real-world cyber-physical autonomy, the question of safety is becoming a crux for the transition from theories to practice. This course will first review fundamental knowledge for trustworthy AI autonomy, including adversarial attack/defend, generative models, hierarchical Bayesian models, safe reinforcement learning, rare-event/few-shot learning, and robust evaluation. Then from the research perspective, students will explore the novelty and potential extension of various state-of-the-art trustworthy AI research and their implementation through a series of readings. Students will develop the ability to conduct research in teams.\nKnowledge and research skills learned in this course can be applied to self-driving, healthcare devices, assistant robots, and intelligent manufacturing. This course is devised for research-focused students who have backgrounds and interests in statistical machine learning, robotics and control, and human-machine interaction. Other interested students should contact the instructor to determine if it is a good fit for them.\nLearning objectives\nStudents will obtain an understanding of the basic methods to design trustworthy AI and apply them in their research projects.\nPrerequisites\nBasic machine learning knowledge\nLearn more\nFaculty\nDing Zhao\n\n']
